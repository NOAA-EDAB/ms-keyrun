# This file was created using create_DataFile.R and used all inputs from csv files found in folder:
      #createDataFiles_testing/dataInputsHydra
# init_int debug
  0
# init_int Nyrs
  53
# init_int Nspecies
  3
# init_int Nsizebins
  5
# init_int Nareas
  1
# init_int Nfleets
  3
# init_number wtconv
  1
#
# List of Species in Model
# Aherring
# Acod
# silverhake
#
# init_matrix binwidth(1,Nspecies,1,Nsizebins)
 	5	5	5	5	20
 	20	20	20	40	50
 	10	10	10	10	30
# init_vector lenwt_a(1,Nspecies)
  0.01 0.009 0.007
# init_vector lenwt_b(1,Nspecies)
  2.99 3.052 3.05
# init_int Nrecruitment_cov
  1
#  init_int Nmaturity_cov 
  1
#  init_int Ngrowth_cov
  1
#  init_matrix recruitment_cov(1,Nrecruitment_cov,1,Nyrs)
  1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
#  init_matrix maturity_cov(1,Nmaturity_cov,1,Nyrs)
  1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
#  init_matrix growth_cov(1,Ngrowth_cov,1,Nyrs)
  8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 9.1611 8.0724 8.9277 8.5853 8.7196 8.4143 9.2862 9.1195 9.6151 9.0835 8.1635 8.4771 8.2231 8.8848 8.7333 8.1252 8.4243 9.3494 9.5417 8.2806 8.7779 9.014 9.8138 9.2278 9.21 9.9467 8.6597 7.9774 8.3691 9.162 8.3644 8.8738 8.9778 9.2916 9.2916 9.2916 9.2916 9.2916
#   init_3darray obs_survey_biomass(1,Nareas,1,Nspecies,1,Nyrs) 
#Simulted in hydra
#species_1
 2.2263e+006 2.5239e+006 2.91241e+006 3.38257e+006 3.81416e+006 4.44583e+006 4.73672e+006 4.75905e+006 4.75865e+006 4.83587e+006 4.92363e+006 4.98902e+006 5.02152e+006 4.81936e+006 4.72615e+006 3.87312e+006 3.71891e+006 3.98326e+006 3.0794e+006 2.49694e+006 2.34783e+006 2.40482e+006 2.57628e+006 2.4922e+006 2.49042e+006 2.58301e+006 2.74482e+006 2.526e+006 2.37423e+006 2.43701e+006 2.59678e+006 2.72693e+006 2.02666e+006 1.9282e+006 2.35087e+006 3.11408e+006 3.71244e+006 4.00851e+006 4.10032e+006 4.15157e+006 3.88529e+006 3.83011e+006 4.01709e+006 4.11707e+006 3.78446e+006 3.47378e+006 3.35273e+006 3.48991e+006 4.03747e+006 4.60179e+006 4.68629e+006 4.5482e+006 4.22366e+006
#species_2
 319395 188506 121687 107953 130807 176182 236157 295923 320468 315716 302138 284793 270974 265254 247661 228879 210103 237114 321783 429475 489954 471437 330217 212692 133873 99614.5 108990 142482 204255 297868 353064 360618 328891 282229 260133 237379 222352 218008 212050 242997 326575 404950 438139 432906 394435 345936 305324 261051 249001 257807 288410 329646 368494
#species_3
 48447.6 27507.3 58042.2 108617 122898 104369 82054.8 62730.9 42986.2 40088.8 56405.3 72071.6 73857.5 65363.7 49575.4 37422.3 39371.3 58193.7 73060 72006.7 59321.5 43908.6 27682.6 44488.6 77747.4 81012.2 61932 42587.4 32800.1 42234.8 61031.5 70387 61518.8 44467.4 34845.9 42631.8 66024.4 76746.9 64271.3 46830.9 38285.3 38654 46276.6 56053.5 61103.4 61010.8 59397.6 54076.6 52806.3 51229.4 52101.5 55404.1 59182
#   init_3darray obs_catch_biomass(1,Nareas,1,Nspecies,1,Nyrs) 
#Simulated in hydra 
#species_1
 31699.9 68689.1 236126 404185 197327 70446.3 5449.19 58882.3 21991.4 68496.7 26310.5 16817.5 61014.4 395608 168462 1.30871e+006 298092 150906 1.33567e+006 485774 193268 189509 355503 564790 386197 553881 392251 602647 256193 172566 145302 63216.9 1.03839e+006 76794 43514.7 89931.2 45540.4 144303 29656.6 29298.3 503807 66529.4 109154 383867 490626 304212 162196 95533.7 53878.3 73721.8 309662 265827 562498
#species_2
 96304.2 127258 85788.5 54922.3 52044.7 61518.2 70588.3 84434.4 119917 124865 113217 111010 104598 94529.8 105123 94207.5 89167.7 79379.4 100327 140639 184708 212402 272609 168569 122643 80974.2 61665.8 66062.7 90284 122146 200917 209147 197996 170559 126226 128465 113862 111194 117481 109261 110850 157764 176956 168737 159195 130940 101925 98038.6 61661.3 61212.6 54352.1 56340.2 61783.6
#species_3
 25278.9 24405.7 15472.2 30135.4 62627.3 68700.8 50896.7 37805.2 32926.3 21414.8 17283.1 25830.3 34866.7 34774.1 34619.4 24846 19025.6 17951.5 30279.3 37585.4 36965.5 31221.9 29037.2 16297.4 28514.4 56162.3 54567.3 39401.3 27261.5 20190.7 28108 37546.4 42510.2 36317.3 23790.7 20324.3 22576.3 38468.1 48151.3 38055.8 25521.4 20760 19325.4 21429.6 26120.3 27082.4 25131.6 26854.8 18668.4 19525.2 16231.8 15318.4 15650.3
#  init_3darray obs_effort(1,Nareas,1,Nfleets,1,Nyrs)  
#  Simulated in hydra
#fleet_1
 302212 302212 357466 344059 334086 304219 236546 201588 237478 234481 215129 223337 225812 209897 244204 237064 243573 235168 276100 264747 257471 268005 426128 406296 492254 560890 522740 465338 462105 440423 503667 433319 390675 370449 306666 336675 328785 347797 382948 357763 305021 299646 266607 230860 220977 199240 173321 192479 135539 138205 113311 101971 96659.2
#fleet_2
 1698.31 1698.31 5247.36 7549.41 3267.32 970.411 66.3539 694.735 261.246 805.617 303.218 190.689 687.53 4580.64 2018.22 18176 4759.8 2229.79 22599.9 10735.9 4754.28 4848.38 8548.69 13364.2 9550.81 13464.2 8765.51 13461.4 6209.13 4221.73 3336.56 1357.7 26760.3 2431.87 1256.65 1923.98 762.553 2107.24 411.869 401.449 7165.21 995.91 1612.93 5398.96 7176.85 4868.62 2744.51 1644.5 835.467 968.524 3766.88 3311.22 7394.35
#fleet_3
 8931.63 8931.63 8863.2 9362.32 10934.9 9066.36 9017 10376.5 5998.99 3602.67 4847.04 7801.53 21780.4 8001.61 6407.88 5672.11 6071.17 7991.04 5008.81 5993.65 7638.88 7196.66 11237 11745 16575.5 24216.6 22353.4 20801.4 20139.8 23014.6 23256.7 28495.4 22234.6 23140.5 18275.2 18326.5 23596.5 34055.7 29557.8 28631.6 25494.5 28744.5 29214.8 38273.7 30036.6 27053 24041.4 23549 26861 20532 19831.8 24819.1 33189.8

#  init_4darray area1_stomwt(1,Nareas,1,Nspecies,1,Nyrs,Nsizebins)   
#  read in mean stomach content weight time series from .dat file for intake calculation   
#  Aherring
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
#  Acod
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
#  silverhake
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
  0.039893347 0.179748344 0.512104803 4.879748476 20.262
#   init_matrix obs_temp(1,Nareas,1,Nyrs)      
#  Either observed temperature  or manufactured temperature for simulation runs
#1977 to 1997 Georges Bank bottom temp from 2011 ESR (1964-1976 set to 8.0) and 1998 to 2010 Georges Bank bottom temp from 2011 ESR
  8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 9.1611 8.0724 8.9277 8.5853 8.7196 8.4143 9.2862 9.1195 9.6151 9.0835 8.1635 8.4771 8.2231 8.8848 8.7333 8.1252 8.4243 9.3494 9.5417 8.2806 8.7779 9.014 9.8138 9.2278 9.21 9.9467 8.6597 7.9774 8.3691 9.162 8.3644 8.8738 8.9778 9.2916 9.2916 9.2916 9.2916 9.2916
#  init_int yr1Nphase            //year 1 N at size estimation phase
  0
#  init_int recphase				//recruitment parameter estimation phas
  0
#  init_int avg_rec_phase		//average recruitment estimation phase (could make species specific, currently global)
  0
#  init_int avg_F_phase			//average fishing mort estimation phase (could make species specific, currently global)
  0
#  init_int dev_rec_phase		//recruitment deviation estimation phase (could make species specific, currently global)
  0
#  init_int dev_F_phase			//fishing mort deviation estimation phase (could make species specific, currently global)
  0
#  init_int fqphase              //fishery q estimation phase
  0
#  init_int sqphase              //survey q estimation phase 
  0
#   init_int ssig_phase           //survey sigma (obs error) phase
  0
#  init_int csig_phase           //catch sigma (obs error) phase
  0
#  init_matrix recGamma_alpha(1,Nareas,1,Nspecies)			//eggprod gamma Ricker model alpha
  0.5 0.01 1
#  init_matrix recGamma_shape(1,Nareas,1,Nspecies)			//eggprod gamma Ricker model shape parameter
  0.5 0.5 0.5
#  init_matrix recGamma_beta(1,Nareas,1,Nspecies)			//eggprod gamma Ricker model beta
  5e-11 6.25e-14 5.56e-12
#  init_matrix recDS_alpha(1,Nareas,1,Nspecies)		//SSB Deriso-Schnute model alpha
  5 5 5
#  init_matrix recDS_shape(1,Nareas,1,Nspecies)		//SSB Deriso-Schnute model shape parameter
  -1 -1 -1
#  init_matrix recDS_beta(1,Nareas,1,Nspecies)			//SSB Deriso-Schnute model beta
  0.5 0.5 0.5
#  init_matrix recGamSSB_alpha(1,Nareas,1,Nspecies)		//SSB gamma alpha
  141 0.00066 0.767
#  init_matrix recGamSSB_shape(1,Nareas,1,Nspecies)		//SSB gamma shape parameter
  0.419 0.997 0.665
#  init_matrix recGamSSB_beta(1,Nareas,1,Nspecies)			//SSB gamma model beta
  4.21e-07 4.11e-07 6.73e-06
#  init_matrix recRicker_alpha(1,Nareas,1,Nspecies)		//SSB Ricker model alpha
  0.144 0.000636 0.0323
#  init_matrix recRicker_shape(1,Nareas,1,Nspecies)		//SSB Ricker model shape parameter=1.0, not used
  1 1 1
#  init_matrix recRicker_beta(1,Nareas,1,Nspecies)			//SSB Ricker model beta
  1.19e-06 4.24e-07 1.57e-05
#  init_matrix recBH_alpha(1,Nareas,1,Nspecies)		//SSB Beverton Holt model alpha
  0.519 0.000582 0.0431
#  init_matrix recBH_shape(1,Nareas,1,Nspecies)		//SSB Beverton Holt model shape parameter=1.0, not used
  1 1 1
#  init_matrix recBH_beta(1,Nareas,1,Nspecies)			//SSB Beverton Holt model beta
  2.36e-05 7.99e-07 4.27e-05
#  init_matrix recShepherd_alpha //SSB S-R Shepherd 3 param
  0.0131 0.00053 0.0807
#  init_matrix recShepherd_shape //SSB S-R Shepherd 3 param
  2 4.82 4.2
#  init_matrix recShepherd_beta //SSB S-R Shepherd 3 param
  762000 181000 17800
#  init_ivector rectype(1,Nspecies)  //switch for alternate recruitment functions 1=gamma/Ricker, 2=Deriso-Schnute, 9=avg+devs
# 3=SSB gamma, 4=SSB Ricker, 5=SSB Beverton Holt added April 2014,6=Shepherd (added Beet Mar 2017)
  6 6 6
#   init_ivector stochrec(1,Nspecies)  //switch for stochastic recruitment. 1 = add error, 0= no error
  1 1 1
#  init_matrix sexratio(1,Nareas,1,Nspecies)  // this is proportion females
  0.5 0.5 0.5
 #  init_matrix recruitment_covwt(1,Nspecies,1,Nrecruitment_cov)	//recruitment covariate weighting factor
  0
  0
  0
#//fecundity parameters from .dat file and calculate fecundity at length
#  init_matrix fecund_d(1,Nareas,1,Nspecies)
  0.00316 0.43326 0.5
#  init_matrix fecund_h(1,Nareas,1,Nspecies)
  5 4.047 3.5
#  init_3darray fecund_theta(1,Nareas,1,Nspecies,1,Nsizebins))
  0.0 0.0 0.0 1.0 1.0
  0.0 0.5 1.0 1.2 1.4
  0.0 0.0 1.0 1.5 1.5
#  init_matrix maturity_nu(1,Nareas,1,Nspecies)
  -34.4725 -5.31 -13.166
#  init_matrix maturity_omega(1,Nareas,1,Nspecies)
  1.36 0.133 0.5825
#  init_matrix maturity_covwt(1,Nspecies,1,Nmaturity_cov) //maturity covariate weighting factor
  0
  0
  0
#//growth parameters from .dat file and calculate simple (no cov) prob of growing through length interval
#  init_matrix growth_psi(1,Nareas,1,Nspecies)
  11.65211497 22.31730855 13.77993268
#  init_matrix growth_kappa(1,Nareas,1,Nspecies)
  0.456436561 0.734859369 0.648621251
#  init_matrix growth_covwt(1,Nspecies,1,Ngrowth_cov)// growth covariate weighting factor
  0
  0
  0
#  init_matrix vonB_Linf(1,Nareas,1,Nspecies)    //alternate parameterization, vonB growth
  29.05066434 113.5946212 41.22438991
#  init_matrix vonB_k(1,Nareas,1,Nspecies)       //alternate parameterization, vonB growth
  0.45225377 0.197508768 0.403649534
#  init_vector growthtype                           //switch for alternate growth types,
#1 power, 2 power/covariates, 3 vonB, 4 vonB covariates
  4 4 4
#  init_number phimax
  1
#  init_matrix intake_alpha(1,Nareas,1,Nspecies)
  0.004 0.004 0.004
#  init_matrix intake_beta(1,Nareas,1,Nspecies)
  0.11 0.11 0.11
 # M1 - natural mortality (not explained by model)
#  init_3darray M1(1,Nareas,1,Nspecies,1,Nsizebins)
  0.02 0.02 0.02 0.02 0.02
  0.02 0.02 0.02 0.02 0.02
  0.02 0.02 0.02 0.02 0.02
#  init_3darray isprey(1,Nareas,1,Nspecies,1,Nspecies)     //preds in columns, prey in rows
  0 1 1
  0 1 0
  0 1 1
#  init_matrix preferred_wtratio(1,Nareas,1,Nspecies)     //pred sizebins
  0.5 0.5 0.5
#  init_vector sd_sizepref(1,Nspecies)              //pred sizebins
  2 2 2
#  //fishery selectivity pars from dat file, for now not area specific
#  init_matrix fishsel_c(1,Nspecies,1,Nfleets)  //fishery selectivity c par
  #benthic trawl and pelagic trawl and longline
    -4.000   -4.000 -200.000
   -12.903  -12.060  -12.060
    -8.000   -8.000   -8.000
#  init_matrix fishsel_d(1,Nspecies,1,Nfleets)  //fishery selectivity d par
  #benthic trawl and pelagic trawl and longline
  0.25 0.25 1.00
  0.25 0.22 0.22
  0.25 0.25 0.25
# Following content added after ICES publication by Gaichas et al. 2014
# Made by Andy Beet from Dec 2016 onward
# Equilibrium Biomass. B0(1,Nspecies). Tthese values are obtained by running hydra_sim without any error and zero fishing effort
  2221733.3 369754.8 60151
#number of Guilds numGuilds.(Piscivores(1), Planktivores(2),Benthivores(3))
  2
#Guild Membership guildMembership(1,Nspecies)
  2 1 1
# AssessmentPeriod. Time period (yrs) to assess guild biomass level
  3
# Nthresholds. number of thresholds used for change in exploitation/fishing
  5
# threshold_percent(1,Nthresholds) threshold %ages (of biomass) when action is taken
# note that must appear in ascending order
  0.1 0.2 0.3 0.4 1e+06
# exploitation_levels(1,Nthresholds). these must pair with the threshold_percent values
  0.05 0.05 0.05 0.05 0.05
# threshold_species(1,Nspecies). Species level detection threshold
  0 0 0
# int AssessmentOn. Assessment On or Off
  0
# int speciesDetection. include species (in addition to guild) in assessment on or off
  0
# int LFI_size. (cm). Threshold to determin a large fish. used in LFI metric
  60
# init_number scaleInitialN.  used to scale initial yr1N abundances found in .pin file
  1
# other food term
  60000
#init_matrix effortScaled(1,Nareas,1,Nspecies)
  1 1 1
# init_4darray discard_Coef(1,Nareas,1,Nspecies,1,Nfleets,1,Nsizebins)
# proportion of each species that is discarded for each fleet(Bottom, Pelagic, Fixed)
# Aherring fleet x sizeclass
  0 0 0 0 0
  0 0 0 0 0
  0 0 0 0 0
# Acod fleet x sizeclass
  0 0 0 0 0
  0 0 0 0 0
  0 0 0 0 0
# silverhake fleet x sizeclass
  0 0 0 0 0
  0 0 0 0 0
  0 0 0 0 0
# init_4darray discardSurvival_Coef(1,Nareas,1,1,Nspecies,1,Nfleets,1,Nsizebins)
# proportion of discards that survive being thrown back
# Aherring fleet x sizeclass
  1 1 1 1 1
  1 1 1 1 1
  1 1 1 1 1
# Acod fleet x sizeclass
  1 1 1 1 1
  1 1 1 1 1
  1 1 1 1 1
# silverhake fleet x sizeclass
  1 1 1 1 1
  1 1 1 1 1
  1 1 1 1 1
# predOrPrey(1,Nspecies). binary vector indicating predators. inverse = prey
  0 1 1
# bandwidth_metric. (in yrs) for variance estimate of catch - moving window
  5
# eof
54321
