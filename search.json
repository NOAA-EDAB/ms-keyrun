[{"path":"https://noaa-edab.github.io/ms-keyrun/articles/CompsDat.html","id":"model-types","dir":"Articles","previous_headings":"","what":"Model types","title":"MS Keyrun Age, Length, and Diet Composition Data Needs","text":"Multispecies models focus 10 species: Atlantic herring, Atlantic cod, goosefish, haddock, spiny dogfish, winter founder, yellowtail flounder, Atlantic mackerel, silver hake, winter skate. Models estimate population parameters based fits biomass, catch, (appropriate) size age information, establish reference points, evaluate status interacting species. Data needs model type summarized .","code":"compdat <- data.frame(ModType = responses$ModType,                       ModName = responses$ModName,                       AgeLength = responses$AgeLength) %>%   filter(ModType != \"NA\") %>%   separate_rows(AgeLength, sep = \",\") dietdat <- data.frame(ModType = responses$ModType,                       ModName = responses$ModName,                       Diet = responses$Diet) %>%   filter(ModType != \"NA\") %>%   separate_rows(Diet, sep = \",\") # rename AgeLength and Diet columns to CompDat and merge"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/CompsDat.html","id":"age-and-length-composition-data-needed","dir":"Articles","previous_headings":"","what":"Age and length composition data needed","title":"MS Keyrun Age, Length, and Diet Composition Data Needs","text":"Structured models need survey numbers length age. length structured model Hydra currently set separate fishing fleets require fishery catch discard data fleet, MSCAA set fleet. WHAM requires fleet specific catch discards age, makes sense pull catch landings numbers length age data fleet extent possible, well total catch. Therefore, fleet definitions necessary pull fleet specific data. data also needed Rpath age structured groups (TBD). Pulling data individual age 1cm length bins allow us aggregate appropriate age length classes Rpath Hydra. decisions deal predators poor age data (e.g. goosefish) needed age strutured models.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/CompsDat.html","id":"diet-composition-data-needed","dir":"Articles","previous_headings":"","what":"Diet composition data needed","title":"MS Keyrun Age, Length, and Diet Composition Data Needs","text":"multispecies models require form diet composition matrix (form % modeled species observed diet). diet composition already pulled Rpath code, highly abstracted based diet data Hydra (matrix 0 1 indicate whether predation can happen). Biomass dynamic model interaction matrices currently input parameters, compared diet data pulls Rpath diet compositions consistency. Methods used estimate biomass dynamics interaction parameters, whether within model framework outside model, needed documentation. Structured models require annual predator mean total stomach weight gastric evaluatin rates. Pulling diet data predator size class needed strucured models Rpath. Prey size information also needed estimate prey size ratios predators (whether estimated within model framework outside model). Predator size classes need align Rpath age structure groupings well Hydra size class groups, map ages age structured models. Estimates consumption rates critical performance models. may useful time series biomass consumed, can estimated diet data combined predator biomass estimates.","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/CompsDat.html","id":"survey-conducted-august-27-september-2-2020","dir":"Articles","previous_headings":"Full survey results","what":"Survey conducted August 27-September 2 2020","title":"MS Keyrun Age, Length, and Diet Composition Data Needs","text":"survey form. 4 responses.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/CompsDat.html","id":"age-and-length-data","dir":"Articles","previous_headings":"Full survey results","what":"Age and Length data","title":"MS Keyrun Age, Length, and Diet Composition Data Needs","text":"Responses:","code":"ggplot(compdat, aes(AgeLength)) +    geom_bar(aes(fill=ModType)) +   coord_flip() +   labs(x = \"Data Needs\",         fill = \"Model Type\") +   #facet_wrap(~ModType, nrow = 2, scales=\"free\") +   scale_x_discrete(labels = function(x) str_wrap(x, width = 45)) #theme(axis.text.x = element_text(angle = 90)) knitr::kable(responses$AgeNeeds, col.names = \"Age information needs\", booktabs=TRUE) knitr::kable(responses$LengthNeeds, col.names = \"Length information needs\", booktabs=TRUE)"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/CompsDat.html","id":"diet-data","dir":"Articles","previous_headings":"Full survey results","what":"Diet data","title":"MS Keyrun Age, Length, and Diet Composition Data Needs","text":"Responses:","code":"ggplot(dietdat, aes(Diet)) +    geom_bar(aes(fill=ModType)) +   coord_flip() +   labs(x = \"Data Needs\",         fill = \"Model Type\") +   #facet_wrap(~ModType, nrow = 2, scales=\"free\") +   scale_x_discrete(labels = function(x) str_wrap(x, width = 45)) #theme(axis.text.x = element_text(angle = 90)) knitr::kable(responses$DietNeeds, col.names = \"Diet information needs\", booktabs=TRUE)"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/CompsDat.html","id":"other-comments","dir":"Articles","previous_headings":"Full survey results","what":"Other comments","title":"MS Keyrun Age, Length, and Diet Composition Data Needs","text":"","code":"knitr::kable(responses$Comments, col.names = \"Other comments\", booktabs=TRUE)"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/CompsDat.html","id":"meeting-minutes-2-september-2020","dir":"Articles","previous_headings":"","what":"Meeting minutes, 2 September 2020","title":"MS Keyrun Age, Length, and Diet Composition Data Needs","text":"Click !","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/DataNeeds.html","id":"decisions-from-meeting-june-3-2020","dir":"Articles","previous_headings":"","what":"Decisions from meeting June 3 2020","title":"MS Keyrun Data Needs","text":"Notes taken KEYRUN Kanban board epic KEYRUN-4 (password required access sites, current information copied ).","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/DataNeeds.html","id":"objective-develop-a-common-input-dataset-for-use-in-all-keyrun-models","dir":"Articles","previous_headings":"","what":"Objective: Develop a common input dataset for use in all keyrun models","title":"MS Keyrun Data Needs","text":"purpose June 3 meeting describe decisions components required develop common input dataset project.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/DataNeeds.html","id":"epic-description","dir":"Articles","previous_headings":"Objective: Develop a common input dataset for use in all keyrun models","what":"Epic description","title":"MS Keyrun Data Needs","text":"(text copied KEYRUN-4 Description lightly edited) list potential stories Epic links Epics. Numbers indicate order tasks need done (priority) established June 3 2020 meeting. TODO: Add story. Add done condition story. Document decisions stories (maybe rmd) document go datasets, Jira searchable establish decision document documentation elsewhere (pull comment done column? plugins may available license) Establish temporal spatial dimensions data (years, seasons, areas). define Georges Bank survey fisheries match, use habitat model Establish species lists (Rpath KEYRUN-2 larger list multispecies models KEYRUN-1 KEYRUN-3) Define environmental data needed model Establish dataset standards (See e.g. condition work) Biomass index data surveys models: Establish common definitions fleets: applies catch data, discard data, composition data. Catch (landings) data models: Rpath KEYRUN-2 Hydra MSCAA KEYRUN-1 tested models KEYRUN-3 Discard data models, needs methods discussion/decision (check: Andy) Length composition data surveys fisheries Hydra KEYRUN-1 (check: Andy) Age composition data surveys fisheries MSCAA KEYRUN-1 Define diet consumption data surveys fisheries models Define life history data surveys /fisheries models (e.g. maturity, weight age, maximum age mortality estimation, etc)","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/DataNeeds.html","id":"additional-meeting-notes","dir":"Articles","previous_headings":"Objective: Develop a common input dataset for use in all keyrun models","what":"Additional meeting notes","title":"MS Keyrun Data Needs","text":"Progress catch data: Notes mscatch comlands. comlands package now. dataset comland input mscatch combines observer data length samples, quarter/yr species, gear, can assign length samples landings bins. done tested. Discards yet accounted , difficult needs decisions. mostly documented, decision process filling blanks documented log file. Canadian landings GB may needed. comdisc well, computes discard kept ratio. add subtasks discard story Identify done criteria, meet , run key stock assessment folks.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/DataNeeds.html","id":"progress","dir":"Articles","previous_headings":"Objective: Develop a common input dataset for use in all keyrun models","what":"Progress","title":"MS Keyrun Data Needs","text":"Stories added board 06 October, 2022: Develop common biomass index data surveys KEYRUN-5                 Test refine atlantisom diet functions Discard data models, needs methods discussion/decision KEYRUN-14                 Initialize github KEYRUN repo Length composition data surveys fisheries Hydra KEYRUN-1 Establish common definitions fleets Establish dataset standards Define environmental data needed model Establish species lists model Establish temporal spatial dimensions data Document decision process","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/DatasetDimensions.html","id":"years-1968-2019","dir":"Articles","previous_headings":"Proposed Dimensions","what":"Years: 1968-2019","title":"MS Keyrun Dataset Dimensions","text":"surveyed agreed end complete year data 2019 date possible. Start year earliest survey year spring fall available.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/DatasetDimensions.html","id":"seasons-annual-fisheries-seasonal-surveys","dir":"Articles","previous_headings":"Proposed Dimensions","what":"Seasons: Annual fisheries, Seasonal surveys","title":"MS Keyrun Dataset Dimensions","text":"Pull annual data fisheries, pull annual survey maintaining seasons “spring”, “fall” etc. year. Many models use annual catch resolution unnecessary; modelers can choose fit seasonal survey indices separately combine single annual value seasonal (documenting methods).","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/DatasetDimensions.html","id":"spatial-2-approaches-for-georges-bank","dir":"Articles","previous_headings":"Proposed Dimensions","what":"Spatial: 2 Approaches for Georges Bank","title":"MS Keyrun Dataset Dimensions","text":"Ideal: Define using Georges Bank EPU, scale fisheries catch species stat areas GB EPU footprint using ratios spatially explicit VTR subset catch data. Work towards ideal, comparing coverage VTR data species different methods scaling part data documentation. Consult ADIOS team assessment experts see results look reasonable. ideal time-consuming started mid-late September 2020 earliest. Interim: Define using fishery statistical areas (521-522, 525-526, 551-552, 561-562) match survey data much possible . easier map survey strata larger fishery areas way around; Sean can share code may modified Gavin’s student achieve . interim represents upper bound catch species comparison ideal approach can implemented fairly quickly.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/DatasetDimensions.html","id":"other-notes","dir":"Articles","previous_headings":"Proposed Dimensions","what":"Other notes","title":"MS Keyrun Dataset Dimensions","text":"either spatial definition, inshore survey strata relevant Georges Bank, beginning end years remain , need combine inshore offshore surveys using Conn method VAST Bigelow years. group decided base dataset pull survey data separately Albatross Bigelow years without applying conversion factors. separate series can used indices structured models (MSCAA Hydra). Methods making single survey time series two vessel survey time series (making annual indices seasonal surveys) need discussed models, methods clearly documented. example, Georges Bank Rpath calibrated Bigelow data 2013-2015; therefore single survey time series needed, makes sense convert Albatross survey catches Bigelow units using established conversion factors. putting discussion now.","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/DatasetDimensions.html","id":"survey-conducted-week-of-june-15-2020-extended-to-3-july","dir":"Articles","previous_headings":"Full survey results","what":"Survey conducted week of June 15 2020, extended to 3 July","title":"MS Keyrun Dataset Dimensions","text":"survey form. 4 responses.","code":"#survey link https://forms.gle/Pq78yqwa5ueFi8Kq8 #results https://docs.google.com/forms/d/1y78AdOeRp0ohGSDU5QP2d2UBCz--eP_5b5Tu79QO-N8/edit#responses # resultfile <- drive_find(pattern = \"MS-Keyrun Dataset Dimensions\", type = \"spreadsheet\") # responses <- drive_download(resultfile, type = \"csv\", overwrite = TRUE) %>% #   {read.csv(.$local_path)}   responses <- read.csv(\"supportingFiles/MS-Keyrun Dataset Dimensions (Responses) - Form Responses 1.csv\",header=T)  names(responses)[3] <- \"StartYear\" names(responses)[5] <- \"EndYear\" names(responses)[7] <- \"SurvSeason\" names(responses)[9] <- \"FishSeason\" names(responses)[11] <- \"SpatialGB\""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/DatasetDimensions.html","id":"years-start-end","dir":"Articles","previous_headings":"Full survey results","what":"Years (start-end)","title":"MS Keyrun Dataset Dimensions","text":"Responses:","code":"startend <- data.frame(Start = responses$StartYear,                        End = responses$EndYear) knitr::kable(startend, booktabs=TRUE) knitr::kable(responses$Rationale.for.start.time, col.names = \"Start year rationale\", booktabs=TRUE) knitr::kable(responses$Rationale.for.end.time, col.names = \"End year rationale\", booktabs=TRUE)"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/DatasetDimensions.html","id":"seasons-fallspring-surveys-fishery-seasons","dir":"Articles","previous_headings":"Full survey results","what":"Seasons (fall/spring surveys? fishery seasons?)","title":"MS Keyrun Dataset Dimensions","text":"Responses:","code":"seasons <- responses %>%   select(SurvSeason, FishSeason) %>%   gather(key = SurvFish, value = \"Season\") %>%   arrange(Season) ggplot(seasons, aes(Season, fill=SurvFish)) +    geom_bar() +   scale_x_discrete(labels = function(x) str_wrap(x, width = 15))#+ #theme(axis.text.x = element_text(angle = 90)) knitr::kable(responses$Rationale.for.survey.temporal.resolution, col.names = \"Survey season rationale\", booktabs=TRUE) knitr::kable(responses$Rationale.for.fishery.temporal.resolution, col.names = \"Fishery season rationale\", booktabs=TRUE)"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/DatasetDimensions.html","id":"spatial-footprint-georges-bank-defined-how","dir":"Articles","previous_headings":"Full survey results","what":"Spatial footprint (Georges Bank defined how)","title":"MS Keyrun Dataset Dimensions","text":"Responses:","code":"ggplot(responses, aes(SpatialGB)) +    geom_bar() +   scale_x_discrete(labels = function(x) str_wrap(x, width = 35))#+ knitr::kable(responses$Rationale.for.spatial.definition, col.names = \"Spatial Rationale\", booktabs=TRUE)"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/DatasetDimensions.html","id":"meeting-minutes","dir":"Articles","previous_headings":"","what":"Meeting minutes","title":"MS Keyrun Dataset Dimensions","text":"Click !","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBFleetDecisions.html","id":"demersal-large-mesh-3","dir":"Articles","previous_headings":"","what":"Demersal (large mesh > 3\")","title":"Fleet Definitions for Georges Bank","text":"05 - OTTER TRAWL, BOTTOM (cod (16%), yellowtail fl (15%), haddock (12%), silver hake (10%), winter fl (8%), loligo (6%) + 33% bottom) - Large small mesh - 7,323,551,019 lbs 1 16 - DANISH SEINE (cod, witch fl, yellowtail flounder, winter fl, plaice, silver hake) - 5,194,870 lbs 1 36 - SCOTTISH SEINE (silver hake, cod, plaice, witch fl, yellowtail flounder, winter fl, red hake) - 4,521,702 lbs 1 35 - BEAM TRAWL (summer flounder, winter flounder, yellowtail flounder) - 927,806 lbs 1 32 - FYKE NET (winter fl, windowpane fl, dogfish, skates) - 1,602 lb","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBFleetDecisions.html","id":"demersal-small-mesh-3","dir":"Articles","previous_headings":"","what":"Demersal (small mesh <= 3\")","title":"Fleet Definitions for Georges Bank","text":"Predominantly Silver Hake, White Hake, Butterfish, Short fin, long fin squid 05 - OTTER TRAWL, BOTTOM (cod (16%), yellowtail fl (15%), haddock (12%), silver hake (10%), winter fl (8%), loligo (6%) + 33% bottom) - Large small mesh - 7,323,551,019 lbs","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBFleetDecisions.html","id":"fixed-gear","dir":"Articles","previous_headings":"","what":"Fixed Gear","title":"Fleet Definitions for Georges Bank","text":"10 - GILL NET, FIXED (dogfish (22%), cod (22%), goosefish (20%), winter skate/skates (21%), pollock (6%)) - 417,501,765 lbs 01 - LONGLINE, BOTTOM (cod (40%), dogfish (21%), tilefish (20%), haddock (9%) + pollock , white hake) - 234,755,227 lbs 02 - HANDLINE (cod(42%), scup (15%), tuna (13%), spiny dogfish(6%), mackerel (5%)) -72,859,422 lbs 1 50 - GILL NET (angler, bluefish, skate, dogfish) - 789,780 lbs 1 52 - GILL NET (skate, angler, haddock, swordfish, mackerel, cod ) - 367,823 lbs","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBFleetDecisions.html","id":"trap","dir":"Articles","previous_headings":"","what":"Trap","title":"Fleet Definitions for Georges Bank","text":"14 - POUND NET (loligo (35%) , scup (20%), mackerel (20%), many < 5%) - 39,571,508 lbs 1 26 - WEIR (loligo, mackerel, scup) - 3,094,066 lbs 1 8 - FLOATING TRAP (mackerel, scup, loligo, tuna) - 1,850,040 lbs","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBFleetDecisions.html","id":"pelagic","dir":"Articles","previous_headings":"","what":"Pelagic","title":"Fleet Definitions for Georges Bank","text":"17 - MIDWATER OTTER TRAWL (Mackerel (7%), Herring (91%)) - 598,176,314 lbs 37 - MIDWATER OTTER TRAWL (Mackerel (11%) , Herring (88%)) - 367,414,353 lbs 12 - PURSE SEINE (1970’s menhaden (40%), Tuna (34%), Herring (5%)) - 41,291,228 lbs","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBFleetDecisions.html","id":"scallop","dir":"Articles","previous_headings":"","what":"Scallop","title":"Fleet Definitions for Georges Bank","text":"13 - DREDGE, SCALLOP (scallop (88%) (Goosefish , yellowtail, bottom fish)) - 733,761,209 lbs","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBFleetDecisions.html","id":"surf-clam","dir":"Articles","previous_headings":"","what":"Surf clam","title":"Fleet Definitions for Georges Bank","text":"40 - DREDGE (surfclam (56%), ocean quahog(43%) ) - 425,058,521 lbs","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBFleetDecisions.html","id":"other-shellfish","dir":"Articles","previous_headings":"","what":"Other shellfish","title":"Fleet Definitions for Georges Bank","text":"38 - DREDGE (mussel(40%), sea scallop(30%), clam+quahog (17%) + bottom fish) - 48,683,622 lbs 1 25 - RAKES (quahog, soft clam, mussels, crab, oysters) - 13,153,618 lbs 1 41 - TONGS GRABS (quahog, soft clam, surf clam) - 232,351 lbs 1 22 - HOES/FORK (soft clam, oysters, bay scallop) - 217,491 lbs","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBFleetDecisions.html","id":"lobstercrab","dir":"Articles","previous_headings":"","what":"Lobster/Crab","title":"Fleet Definitions for Georges Bank","text":"20 - POT/TRAP (lobster(53%) + crab(46%), bottom fish < 1%) - 340,059,280 lbs 18 - POTS + TRAPS (crab (20%), lobster (20%), whelk (10%), snails (10%), hagfish (20%) + bottom fish (20%)) - 79,123,496 lbs 30 - POTS + TRAPS (crab (>99%)) - 68,329,188 lbs 21 - POT/TRAP (Lobster (88%), crab (10%) + bottom fish) - 39,633,570 lbs 1 23 - HAND (soft clam, crab, quahog, oysters, clam) - 1,665,727 lbs 1 33 - DIVING GEAR (lobster, sea urch, squid) - 878,986 lbs 1 15 - TRAWL (lobster, 1972,1974) - 21,437 lbs 1 19 - POTS + TRAPS (rock crab, lobster, 2004) - 23525 lbs 1 53 - TRAMMEL NET (lobster , 2012) - 193 lbs","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBFleetDecisions.html","id":"hms","dir":"Articles","previous_headings":"","what":"HMS","title":"Fleet Definitions for Georges Bank","text":"1 3 - HARPOONS (Tuna, swordfish) 1 11 - GILL NET, DRIFT (swordfish, tuna, shark ) 1 6 - TROLL LINE (Tuna, sea herring, striped bass, bluefish) 1 4 - LONGLINE (swordfish, tunas, tilefish)","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBFleetDecisions.html","id":"other-gear","dir":"Articles","previous_headings":"","what":"Other gear","title":"Fleet Definitions for Georges Bank","text":"1 28 - DREDGE (southern flounder, 1989-1997) 1 27 - BOX TRAP (cod, angler, lobster, 2004) 1 99 - UNKNOWN (silver hake, oysters, lobster, quahog, sea herring, angler, mussels ) 1,2 44 - WEEDWHACKER, SEAWEED (whelks, 2016) 1,2 31 - LIFT NET (lobster, 2002) 1,2 34 - CAST NETS (quahog, surf clam, skate, plaice ) 1,2 81 - SUCTION PUMP () 1,2 45 - TRAWL, SHRIMP (crustacean, 2017) 1,2 9 - DIP NET (alewife, yellow flounder, scallop, soft clam) 1,2 7 - HAUL SEINE (perch, alewife, cod, winter flounder, lobster)","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBFleetDecisions.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Fleet Definitions for Georges Bank","text":"resulting data set data package fleets. Since current length based model, Hydra, includes three fleets, fleet designations reduced map requirements Hydra model. fleetName NEGEAR2 hydraFleets demersal 05 demersal demersal 16 demersal demersal 32 demersal demersal 35 demersal demersal 36 demersal fixedGear 01 fixedGear fixedGear 02 fixedGear fixedGear 10 fixedGear fixedGear 50 fixedGear fixedGear 52 fixedGear traps 08 fixedGear traps 14 fixedGear traps 26 fixedGear pelagic 12 pelagic pelagic 17 pelagic pelagic 37 pelagic scallop 13 demersal surfcalm 40 demersal otherShellfish 22 demersal otherShellfish 25 demersal otherShellfish 38 demersal otherShellfish 41 demersal lobsterCrab 20 fixedGear lobsterCrab 18 fixedGear lobsterCrab 30 fixedGear lobsterCrab 21 fixedGear lobsterCrab 23 fixedGear lobsterCrab 33 fixedGear lobsterCrab 15 fixedGear lobsterCrab 19 fixedGear lobsterCrab 53 fixedGear hms 03 fixedGear hms 04 fixedGear hms 06 fixedGear hms 11 fixedGear 28 27 99 44 31 34 81 45 09 07 ","code":"mskeyrun::fleets %>%   flextable::flextable()"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBFleetDefinitions.html","id":"spatial-extent","dir":"Articles","previous_headings":"","what":"Spatial Extent","title":"Analysis of Georges Bank catch by gear type","text":"Statistical areas used define Georges Bank footprint pulling landings data gear","code":"crs <- 4326 # read in coastline and GB shape file coast <- sf::st_read(here::here(\"data-raw/gis\", 'NES_LME_coast.shp'), quiet = T) %>%   sf::st_transform(.,crs=crs) GB_strata <- sf::st_read(here::here(\"data-raw/gis\",\"Statistical_Areas_2010.shp\"),quiet=T) %>%     sf::st_transform(.,crs=crs) %>%   dplyr::filter(Id %in% c(521, 522, 523, 524, 525, 526, 538, 551, 552, 561, 562, 537) ) centroids <- sf::st_coordinates(sf::st_centroid(GB_strata)) GB_strata <- cbind(GB_strata,centroids)  #plot map ggplot2::ggplot(data=coast) +   ggplot2::geom_sf() +   ggplot2::geom_sf(data=GB_strata,fill=\"grey\") +    ggplot2::geom_text(data=GB_strata,ggplot2::aes(x=X,y=Y,label=Id),size=2)    +   ggplot2::coord_sf(xlim = c(-76,-65), ylim = c(38,44))"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBFleetDefinitions.html","id":"gear-types","dir":"Articles","previous_headings":"","what":"Gear Types","title":"Analysis of Georges Bank catch by gear type","text":"total 52 unique NEGEAR2 codes (found cfdbs.gear table). However Georges Bank fishing gears used. subset 45 gear types used. gear codes:","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBFleetDefinitions.html","id":"aggregating-gear-types","dir":"Articles","previous_headings":"","what":"Aggregating Gear Types","title":"Analysis of Georges Bank catch by gear type","text":"gear type designed target particular species. gear types may catch predominantly one species (eg. Lobsters traps) others may catch multiple species (bottom trawls). aim aggregate gear types fleets using similarities catch among gear types. achieve adopt agglomerative hierarchical, nearest neighbor clustering method (Manly (2017)) using euclidean distance measure distance groups. approach gear types begin separate groups. Groups similar (similar catch, defined distance measure) merged distance gear types belong single group. variables used determine grouping species caught, measured landings (lbs) Landings data, gear type, pulled database. resulting data formatted data frame (matrix) gear type represented row species column. cell landings species gear type. Note: many zeros data frame representing gear types catch particular species. variables often standardized variables equally important determining distances. standardize variable zero mean unit variance. point pairwise distances gear types calculated using Euclidean distance function \\[d_{,j} = \\left( \\sum_{k=1}^p(x_{,k}-x_{j,k})^2 \\right) ^{1/2} \\] \\(x_{,k}\\) landings species \\(k\\) gear type \\(\\) \\(x_{j,k}\\) landings species \\(k\\) gear type \\(j\\). \\(d_{,j}\\) measure distance gear type \\(\\) \\(j\\) dendrogram formed using agglomerative hierarchical process. process carried using statistical package cluster (Maechler et al. (2021)) R.","code":"channel <- dbutils::connect_to_database(\"server\",\"id\") get_landings_by_data(channel,percentLanded=0.90,area=c(cfdbs::EPUs$data[[\"GB\"]],537),outDir=here::here(\"data\"))"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBFleetDefinitions.html","id":"approach-use-all-gear-types","dir":"Articles","previous_headings":"Aggregating Gear Types","what":"Approach: Use all gear types","title":"Analysis of Georges Bank catch by gear type","text":"gear type landings species aggregated time ordered abundant least abundant. reduce number variables (species) analysis use species comprise 90% total landings gear type. dendrogram obtained nearest-neighbor, hierarchical cluster analysis gear types used Georges Bank Ecological Production unit defined statistical areas Note: Low values agglomerative coefficient indicate tight clustering gears types. Larger values indicate less well formed clusters.","code":"clusterObj <- cluster_analysis_all_gears() plot(clusterObj,ask=T,which.plots=2,main=\"Complete gear list using 90% landing from each gear\",xlab=\"\")"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBFleetDefinitions.html","id":"approach-use-gears-responsible-for-most-landings","dir":"Articles","previous_headings":"Aggregating Gear Types","what":"Approach: Use gears responsible for most landings","title":"Analysis of Georges Bank catch by gear type","text":"Total landings, aggregated time, ordered gear type. gear types contribute 99% total landings selected used cluster analysis dendrogram obtained nearest-neighbor, hierarchical cluster analysis subset gear types Georges Bank Ecological Production unit defined statistical areas. Gear types selected based contribution 99% landings","code":"clusterObj <- cluster_analysis_filter_gears(filterByLandings=.99) plot(clusterObj$top,ask=T,which.plots=2,main=\"Gear types contributing to 99% of total landings\",xlab=\"\")"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBFleetDefinitions.html","id":"species-landings-by-gear","dir":"Articles","previous_headings":"Aggregating Gear Types","what":"Species landings by gear","title":"Analysis of Georges Bank catch by gear type","text":"Time series species caught gear type. reduce number panels figure, species caught < 30% time displayed. example reporting landings started 1964 (56 years ago). species reported landings fewer 17 years displayed. (gear clusteObj$topGears) {   explore_landings_by_gear(channel,data=gearData$data,gearCode=gear,filterYrs=0.30,saveToFile=T) } 01 02 05 10 12 13 14 17 18 20 21 30 37 38 40","code":"## # A tibble: 1 × 2 ##   NEGEAR2 GEARNM           ##   <chr>   <chr>            ## 1 01      LONGLINE, BOTTOM ## # A tibble: 2 × 2 ##   NEGEAR2 GEARNM            ##   <chr>   <chr>             ## 1 02      HANDLINE          ## 2 02      HANDLINE,AUTO JIG ## # A tibble: 10 × 2 ##    NEGEAR2 GEARNM                               ##    <chr>   <chr>                                ##  1 05      TRAWL,OTTER,BOTTOM,FISH              ##  2 05      TRAWL,OTTER,BOTTOM,CRAB              ##  3 05      TRAWL,OTTER,BOTTOM,SCALLOP           ##  4 05      TRAWL,OTTER,BOTTOM,TWIN              ##  5 05      TRAWL,OTTER,BOTTOM,RUHLE             ##  6 05      TRAWL,OTTER,BOTTOM,LOBSTER           ##  7 05      TRAWL,OTTER,BOTTOM PAIRED            ##  8 05      TRAWL,OTTER,BOTTOM,HADDOCK SEPARATOR ##  9 05      TRAWL,OTTER,BOTTOM,SHRIMP            ## 10 05      TRAWL,OTTER,BOTTOM,OTHER/NK SPECIES ## # A tibble: 6 × 2 ##   NEGEAR2 GEARNM                                             ##   <chr>   <chr>                                              ## 1 10      GILL NET, FIXED OR ANCHORED,SINK, OTHER/NK SPECIES ## 2 10      GILL NET,SET /STAKE, SEA BASS                      ## 3 10      GILL NET,STAKE,OTHER                               ## 4 10      GILL NET,SET, SALMON                               ## 5 10      GILL NET,SET, CRAB                                 ## 6 10      GILL NET,ANCHORED-FLOATING, FISH ## # A tibble: 5 × 2 ##   NEGEAR2 GEARNM                        ##   <chr>   <chr>                         ## 1 12      PURSE SEINE, OTHER/NK SPECIES ## 2 12      PURSE SEINE, HERRING          ## 3 12      PURSE SEINE, MACKEREL         ## 4 12      PURSE SEINE, MENHADEN         ## 5 12      PURSE SEINE, TUNA ## # A tibble: 2 × 2 ##   NEGEAR2 GEARNM              ##   <chr>   <chr>               ## 1 13      DREDGE, SCALLOP,BAY ## 2 13      DREDGE, SCALLOP,SEA ## # A tibble: 4 × 2 ##   NEGEAR2 GEARNM                      ##   <chr>   <chr>                       ## 1 14      POUND NET, OTHER/NK SPECIES ## 2 14      POUND NET, CRAB             ## 3 14      POUND NET, FISH             ## 4 14      POUND NET, HORSESHOE CRAB ## # A tibble: 1 × 2 ##   NEGEAR2 GEARNM                      ##   <chr>   <chr>                       ## 1 17      TRAWL,OTTER,MIDWATER PAIRED ## # A tibble: 7 × 2 ##   NEGEAR2 GEARNM                        ##   <chr>   <chr>                         ## 1 18      POTS + TRAPS,OTHER/NK SPECIES ## 2 18      POTS + TRAPS,FISH             ## 3 18      POTS + TRAPS,EEL              ## 4 18      POTS + TRAPS,CONCH            ## 5 18      POTS + TRAPS,OCTOPUS          ## 6 18      POTS + TRAPS,TURTLE           ## 7 18      POTS + TRAPS, HAGFISH ## # A tibble: 8 × 2 ##   NEGEAR2 GEARNM                          ##   <chr>   <chr>                           ## 1 20      POT/TRAP, LOBSTER OFFSH NK      ## 2 20      POT/TRAP, LOBSTER OFFSH WOOD    ## 3 20      POT/TRAP, LOBSTER OFFSH WIRE    ## 4 20      POT/TRAP, LOBSTER OFFSH WD/WR   ## 5 20      POT/TRAP, LOBSTER OFFSH WD/NET  ## 6 20      POT/TRAP, LOBSTER OFFSH WR/NET  ## 7 20      POT/TRAP, LOBSTER OFFSH PLASTIC ## 8 20      POT/TRAP, LOBSTER OFFSH CONICAL ## # A tibble: 8 × 2 ##   NEGEAR2 GEARNM                         ##   <chr>   <chr>                          ## 1 21      POT/TRAP, LOBSTER INSH NK      ## 2 21      POT/TRAP, LOBSTER INSH WOOD    ## 3 21      POT/TRAP, LOBSTER INSH WIRE    ## 4 21      POT/TRAP, LOBSTER INSH WD/WR   ## 5 21      POT/TRAP, LOBSTER INSH WD/NET  ## 6 21      POT/TRAP, LOBSTER INSH WR/NET  ## 7 21      POT/TRAP, LOBSTER INSH PLASTIC ## 8 21      POT/TRAP, LOBSTER INSH CONICAL ## # A tibble: 2 × 2 ##   NEGEAR2 GEARNM                  ##   <chr>   <chr>                   ## 1 30      POTS + TRAPS,CRAB OTHER ## 2 30      POTS + TRAPS,BLUE CRAB ## # A tibble: 1 × 2 ##   NEGEAR2 GEARNM               ##   <chr>   <chr>                ## 1 37      TRAWL,OTTER,MIDWATER ## # A tibble: 8 × 2 ##   NEGEAR2 GEARNM                   ##   <chr>   <chr>                    ## 1 38      SCRAPES                  ## 2 38      DREDGE, OTHER/NK SPECIES ## 3 38      DREDGE, CLAM             ## 4 38      DREDGE, CRAB             ## 5 38      DREDGE, CONCH            ## 6 38      DREDGE, MUSSEL           ## 7 38      DREDGE, CLAM, HYDRAULIC  ## 8 38      DREDGE, URCHIN ## # A tibble: 1 × 2 ##   NEGEAR2 GEARNM                          ##   <chr>   <chr>                           ## 1 40      DREDGE, SURF CLAM + OCEAN QUAHO"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBFleetDefinitions.html","id":"gears-that-make-up-1-landings","dir":"Articles","previous_headings":"Aggregating Gear Types","what":"Gears that make up < 1% landings","title":"Analysis of Georges Bank catch by gear type","text":"remaining gears (contributing 99% landings) used cluster analysis determine similar gears , since 100% landings accounted . dendrogram obtained nearest-neighbor, hierarchical cluster analysis subset gear types Georges Bank Ecological Production unit defined statistical areas. Gear types selected based contributing top 99% landings","code":"plot(clusterObj$bottom,ask=T,which.plots=2,main=\"Gear types contributing < 1% of total landings\",xlab=\"\")"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBFleetDefinitions.html","id":"approach-select-gear-types-that-catch-species-of-interest","dir":"Articles","previous_headings":"Aggregating Gear Types","what":"Approach: Select gear types that catch species of interest","title":"Analysis of Georges Bank catch by gear type","text":"gear types catch amount Species interest used cluster analysis. hope set gear types begin cluster analysis substantially less. number gears eliminated = 10. apparent species interest caught across broad class gear types. dendrogram obtained nearest-neighbor, hierarchical cluster analysis subset gear types Georges Bank Ecological Production unit defined statistical areas. gear types landed species interest selected","code":"#focalSpecies <- readRDS(here::here(\"data-raw/data\",\"focalspecies.rds\")) clusterObj <- cluster_by_focal_species(mskeyrun::focalSpecies) plot(clusterObj,ask=T,which.plots=2,main=\"All gear types that land species of interest\",xlab=\"\")"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBFleetDefinitions.html","id":"bottom-trawls-smalllarge-mesh","dir":"Articles","previous_headings":"","what":"Bottom trawls (small/large mesh)","title":"Analysis of Georges Bank catch by gear type","text":"time (dates/references????) changes regulations resulted requirement fisherman increase mesh size nets. allowed smaller fish escape nets. However , still , exemptions regulation allowing fishermen fish smaller meshed nets depending time year area fish. However associated landings flagged using gear type code. Since change regulations dictate change composition species caught time, gear type needs investigated separately. data base holds information based mesh size otter trawl nets NEGEAR code = 5 (1982 onward). plots species caught otter trawl (making 96% total catch 1964 2020) mesh size (inches). Note figure begins 1982. trip without mesh size attributed displayed, includes trips prior 1982. lack mesh size accounts approximately 20% landing post 1982 approximately 50% landings plotted scale plotted different scale","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBFleetDefinitions.html","id":"decision","dir":"Articles","previous_headings":"","what":"Decision","title":"Analysis of Georges Bank catch by gear type","text":"exploratory study resulted following designation Fleets","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBFleetDefinitions.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Analysis of Georges Bank catch by gear type","text":"Maechler, M., Rousseeuw, P., Struyf, ., Hubert, M., & Hornik, K. (2021). Cluster: Cluster analysis basics extensions. https://CRAN.R-project.org/package=cluster R package version 2.1.1 — new features, see ’Changelog’ file (package source) Manly, B. (2017). Multivariate statistical methods (Fourth edition). Chapman & Hall.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBLandingLengthDataSources.html","id":"herring","dir":"Articles","previous_headings":"","what":"Herring","title":"Landings and Length data sources","text":"Herring data poorly represented NEFSC fisheries database landings length data pulled state Maine. state Maine database catch reported metric tons. converted lbs align NEFSC commercial fisheries data base. Fish lengths reported mm. converted cm align NEFSC survey database","code":"get_herring_data() format_herring_data()"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBLandingLengthDataSources.html","id":"winter-skate","dir":"Articles","previous_headings":"","what":"Winter Skate","title":"Landings and Length data sources","text":"skate species recorded NEFSC commercial fisheries database. species recorded unclassified skate. package comlandr calculates proportions skate species surveys applies commercial landings obtain estimates winter skate. lengths winter skate pulled bottom trawl survey.","code":"get_skate_data() format_skate_data()"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBLandingLengthDataSources.html","id":"function","dir":"Articles","previous_headings":"","what":"Landings by length and age","title":"Landings and Length data sources","text":"landing length landings age data created using function species turn according specific rules: Landings length data used aggregate landings. stage diagnostic plots log file decisions created. Length-weight data pulled survey database fitting length-weight relationships landings expanded length compositions mskeyrun::realFisheryLencomp created Age length data pulled survey database commercial database used create age-length keys Numbers age calculated based previous steps mskeyrun::realFisheryAgecomp created","code":"channel <- dbutils::connect_to_database(\"server\",\"user\") make_species_datasets_for_mskeyrun(channel)"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBLandingsByAge.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Landings by Age","text":"Gerritsen, H. D., McGrath, D., & Lordan, C. (2006). simple method comparing age–length keys reveals significant regional differences within single stock haddock (Melanogrammus aeglefinus). ICES Journal Marine Science, 63(6), 1096–1100. https://doi.org/10.1016/j.icesjms.2006.04.008","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBLandingsByLength.html","id":"expanding-catch-to-a-composition-of-lengths","dir":"Articles","previous_headings":"","what":"Expanding catch to a composition of lengths","title":"Landings by Length","text":"Hydra, multispecies length based model, model requires type data. Currently Hydra incorporates three distinct fleets, demersal fleet, pelagic fleet, fixed gear fleet. data product categorizes catch three fleet types. annual catch (measured metric tons) focal species expanded composition length. result sum catch lengths given year (time interval) equal total catch year (equivalent time interval). Fish measured 1 cm increments. Commercial fisheries landings pulled using R package comlandr length data pulled commercial fisheries database, specifically stockeff.mv_cf_len table R package mscatch used expand annual catch data. Detailed methods explained . Species specific rules used expansion account life history traits. See Data sources information","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBLandingsByLength.html","id":"rules","dir":"Articles","previous_headings":"","what":"Species rules","title":"Landings by Length","text":"species, set rules applied (similar approach taken stock assessment), determine landings data discard data (currently incorporated) aggregated based availability length samples. Biomass (metric tons) estimated LENGTH (1 cm bins) category specified time interval, market category, gear type. expanded catch aggregated annual time steps fleets. data set exported package realFisheryLencomp using function: sample output Atlantic cod shown . ModSim year Code Name fishery lenbin variable value units Actual 1964 164712 Atlantic cod demersal 36 biomass 0.8674738 metric tons Actual 1964 164712 Atlantic cod demersal 36 abundance 1,943,296.5282680 numbers Actual 1964 164712 Atlantic cod demersal 37 biomass 2.4531658 metric tons Actual 1964 164712 Atlantic cod demersal 37 abundance 5,123,487.2110003 numbers Actual 1964 164712 Atlantic cod demersal 38 biomass 8.7173214 metric tons Actual 1964 164712 Atlantic cod demersal 38 abundance 16,322,751.1211328 numbers Actual 1964 164712 Atlantic cod demersal 39 biomass 16.0718207 metric tons Actual 1964 164712 Atlantic cod demersal 39 abundance 27,930,676.9291511 numbers Actual 1964 164712 Atlantic cod demersal 40 biomass 16.2667169 metric tons Actual 1964 164712 Atlantic cod demersal 40 abundance 26,225,845.8641960 numbers","code":"create_real_fishery_lencomp()"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBLandingsByLength.html","id":"fleetgear-types","dir":"Articles","previous_headings":"Species rules","what":"Fleet/Gear Types","title":"Landings by Length","text":"NEGEAR2 codes observed catch data attributed one three fleets. designation “” implies gear codes. Note species caught three fleets. species Fleet Negear2 ATLANTIC COD demersal 05,13,16,36 fixedGear ATLANTIC HERRING pelagic ATLANTIC MACKEREL demersal 05 fixedGear pelagic 12,17,37 GOOSEFISH demersal 05,13 fixedGear HADDOCK demersal 05,13 fixedGear SILVER HAKE demersal SPINY DOGFISH demersal fixedGear 01,02,10,50,52 WINTER FLOUNDER demersal WINTER SKATE demersal YELLOWTAIL FLOUNDER demersal ","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBLandingsByLength.html","id":"market-codes","dir":"Articles","previous_headings":"Species rules","what":"Market Codes","title":"Landings by Length","text":"similar fashion fleets, market codes observed catch data relabelled according assessment scientist recommendations. designation “” implies market codes species Relablled Market Codes ATLANTIC COD LG LG,ST,WH MK MK SK SK,ST UN ATLANTIC HERRING UN ATLANTIC MACKEREL LG JB,LG,XG MD MD SM ES,SQ,SV UN GOOSEFISH LG LG SQ PW,SQ UN HADDOCK LG LG,XG SK SK SR SR UN SILVER HAKE UN SPINY DOGFISH UN WINTER FLOUNDER LG LG,LM LS LS,XG SM MD,PW,SQ UN WINTER SKATE UN YELLOWTAIL FLOUNDER LG LG SM MD,PW,SQ UN ","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBLandingsByLength.html","id":"additional-preferences","dir":"Articles","previous_headings":"Species rules","what":"Additional preferences","title":"Landings by Length","text":"Additional decision points considered species accordance stock scientist recommendations. following table outlines decision points: temporalAggregation = time scale catch expanded lengths. Quarterly, semester annual time scales. howAggregate = method dealing missing length samples (time scales). Note: stock scientists borrow length samples sampled times. addressed later date LengthWeightData = data source obtaining length weight data. data used fit length-weight relationships level defined LengthWeightRelationship. LengthWeightRelationship = time scale used fit length-weight relationships. Note: stock scientists fit length-weight relationships semester year. fit specified time range survey data. modifications addressed later date. AgeData = data source obtaining age data. Note species age data available subsequently age based stock assessments carried . AgeLengthKey = time scale used calculate Age length key. Note: stock scientists use year quarter, also incorporate gear type. modifications addressed later date. maxAge = approximate observed maximum age species. used construction age length key. species temporalAggregation howAggregate LengthWeightData LengthWeightRelationships AgeData AgeLengthKey maxAge GOOSEFISH semester borrow survey semester survey,commerical year,semester 10 ATLANTIC COD quarter borrow survey semester survey,commerical year,semester 15 WINTER FLOUNDER semester borrow survey single survey,commerical year,semester 7 YELLOWTAIL FLOUNDER semester borrow survey semester survey,commerical year,semester 8 HADDOCK semester borrow survey semester survey,commerical year,semester 15 ATLANTIC HERRING quarter borrow survey quarter survey,commerical year,semester 8 ATLANTIC MACKEREL semester borrow survey semester survey,commerical year,semester 10 SPINY DOGFISH year borrow survey single    WINTER SKATE semester borrow survey single    SILVER HAKE semester borrow survey semester survey,commerical year,semester 8","code":"## All species catch data are pulled from the statistical areas, 521,522,523,524,525,526,538,551,552,561,562,537"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBLengthWeight.html","id":"model","dir":"Articles","previous_headings":"","what":"Model","title":"Length-weight relationships","text":"standard length-weight relationship obtained fitting following model available data \\[W = \\alpha L ^ \\beta e^Z\\] \\(Z \\sim IID N(0,\\sigma^2)\\) Lengths fish measured cm. Weights measured grams","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBLengthWeight.html","id":"table-of-coefficients","dir":"Articles","previous_headings":"","what":"Table of coefficients","title":"Length-weight relationships","text":"species alpha beta sigma Goosefish 2.050e-02 2.933227 0.1776597 Atlantic cod 6.857e-03 3.091336 0.1341488 Winter flounder 9.108e-03 3.082983 0.1321759 Yellowtail flounder 5.820e-03 3.109776 0.1423130 Haddock 7.592e-03 3.068170 0.1157960 Atlantic herring 6.963e-03 3.081596 0.1469714 Atlantic mackerel 3.102e-03 3.321004 0.1194443 Spiny dogfish 2.187e-03 3.139626 0.1351552 Winter skate 2.447e-03 3.265525 0.1298105 Silver hake 4.217e-03 3.129475 0.1738018","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBLengthWeight.html","id":"length-weight-plots","dir":"Articles","previous_headings":"","what":"Length-weight plots","title":"Length-weight relationships","text":"Goosefish Atlantic cod Winter flounder Yellowtail flounder Haddock Atlantic herring Atlantic mackerel Spiny dogfish Winter skate Silver hake","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBSurveySet.html","id":"spatial-2-approaches-for-georges-bank","dir":"Articles","previous_headings":"Georges Bank - Fisheries Survey Footprint","what":"Spatial: 2 Approaches for Georges Bank","title":"MS Keyrun - GB survey footprint","text":"June/July survey  (Year, season, area decisions - 8 July 2020)  two approaches proposed spatial footprint Georges Bank. ideal footprint define using Georges Bank EPU, scale fisheries catch species stat areas GB EPU footprint using ratios spatially explicit VTR subset catch data. work ongoing towards segregating fisheries dependent data, decision make use fisheries independent survey. current definition EPU based ten-minute squares fit survey design. leaves several options use survey data. first set options use survey design assign survey strata Georges Bank. second set options ignore survey design either post-stratify take simple average within EPU.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBSurveySet.html","id":"opt1","dir":"Articles","previous_headings":"Georges Bank - Fisheries Survey Footprint","what":"Option 1 - use survey design","title":"MS Keyrun - GB survey footprint","text":"NEFSC bottom trawl survey uses stratified random design. rationale behind stratified random design minimize variance. figure shows full range strata Georges Bank EPU overlaid red. notice, survey strata extend beyond EPU boundary. several ways can accounted . simplest option include strata partially within EPU boundary.  Another option include strata least 50% within EPU boundary area. preferred method Northeast IEA program State Ecosystem report. map shows strata included. medium blue color represents Georges Bank.  difference two options inclusion strata 01100, 01110, 01120 southwest corner EPU.","code":"coast <- readOGR(dsn=here::here(\"data-raw/gis\"), layer='NES_LME_coast', verbose = F) coast <- spTransform(coast, CRS('+init=epsg:4326'))  strata <- readOGR(dsn=here::here(\"data-raw/gis\"), layer='strata', verbose = F) strata <- spTransform(strata, CRS('+init=epsg:4326'))  epu <- readOGR(here::here(\"data-raw/gis\"), 'EPU_extended', verbose = F) epu <- spTransform(epu, CRS('+init=epsg:4326'))  GB.strata <- readOGR(here::here(\"data-raw/gis\"), 'EPU_strata', verbose = F) GB.strata <- spTransform(GB.strata, CRS('+init=epsg:4326'))  MAB <- c(1010:1080, 1100:1120, 1600:1750, 3010:3450, 3470, 3500, 3510) GB  <- c(1090, 1130:1210, 1230, 1250, 3460, 3480, 3490, 3520:3550) GOM <- c(1220, 1240, 1260:1290, 1360:1400, 3560:3830) SS  <- c(1300:1352, 3840:3990) opar <- par(mar = c(3, 3.5, 2, 2)) plot(0, 0, xlim = c(-77, -65), ylim = c(35, 45), xlab = '', ylab = '', axes = F,      typ = 'n') box() axis(1, at = c(-75, -70, -65), labels = c(expression('75'* degree * ' W'),                                            expression('70'* degree * ' W'),                                           expression('65'* degree * ' W')))  axis(2, at = c(35, 40, 45), labels = c(expression(35 * degree * ' N'),                                        expression(40 * degree * ' N'),                                        expression(45 * degree * ' N')), las = T)  plot(strata, add = T) plot(epu[which(epu@data$EPU == 'GB'), ], add = T, border = 'red', lwd = 2)  plot(coast, col = 'grey', add = T)  legend('bottomright', legend = c('Survey Strata', 'Georges Bank EPU'),         col = c('black', 'red'), lty = 1, lwd = 3) opar <- par(mar = c(3, 3.5, 2, 2)) plot(0, 0, xlim = c(-77, -65), ylim = c(35, 45), xlab = '', ylab = '', axes = F,      typ = 'n') box() axis(1, at = c(-75, -70, -65), labels = c(expression('75'* degree * ' W'),                                            expression('70'* degree * ' W'),                                           expression('65'* degree * ' W')))  axis(2, at = c(35, 40, 45), labels = c(expression(35 * degree * ' N'),                                        expression(40 * degree * ' N'),                                        expression(45 * degree * ' N')), las = T)  plot(strata[which(strata@data$STRATA %in% MAB), ], add = T, col = '#0093D0') plot(strata[which(strata@data$STRATA %in% GB),  ], add = T, col = '#0055A4') plot(strata[which(strata@data$STRATA %in% GOM), ], add = T, col = '#00467F') plot(strata[which(strata@data$STRATA %in% SS),  ], add = T, col = '#007078') plot(epu[which(epu@data$EPU == 'GB'), ], add = T, border = '#D65f00', lwd = 2)  plot(coast, col = 'grey', add = T)  legend('bottomright', legend = c('Scotian Shelf', 'Gulf of Maine', 'Georges Bank',                                  'Mid-Atlantic', 'EPU'),         fill = c('#007078', '#00467F', '#0055A4', '#0093D0', NA),         border = c(rep('black', 4), NA),         col = c(rep(0, 4), '#D65f00'), lty = c(rep(NA, 4), 1), lwd = 3,         x.intersp = c(rep(-0.5, 4), 1))"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBSurveySet.html","id":"option-2---ignore-survey-design","dir":"Articles","previous_headings":"Georges Bank - Fisheries Survey Footprint","what":"Option 2 - ignore survey design","title":"MS Keyrun - GB survey footprint","text":"Ignoring survey design leaves us two options: straight mean EPU post-stratified design. first option creates large variances make difficult conduct kind statistical testing. previous work EDAB stratified Georges Bank large strata based whether area considered open access withing closed area, inside outside US waters, shelf break.","code":"opar <- par(mar = c(3, 3.5, 2, 2)) plot(0, 0, xlim = c(-72, -65), ylim = c(38, 43), xlab = '', ylab = '', axes = F,      typ = 'n') box() axis(1, at = c(-75, -70, -65), labels = c(expression('75'* degree * ' W'),                                            expression('70'* degree * ' W'),                                           expression('65'* degree * ' W')))  axis(2, at = c(35, 40, 45), labels = c(expression(35 * degree * ' N'),                                        expression(40 * degree * ' N'),                                        expression(45 * degree * ' N')), las = T)   plot(GB.strata, add = T, border = '#D65f00', lwd = 2)  plot(coast, col = 'grey', add = T)"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBSurveySet.html","id":"testing-the-options","dir":"Articles","previous_headings":"","what":"Testing the options","title":"MS Keyrun - GB survey footprint","text":"see noticeable difference three options outlined (- strata least partially within GB EPU boundary, SOE - strata set used State Ecosystem report, EPU - post-stratified EPU) biomass indices calculated top 11 species included MS Keyrun project.  can see, three spatial footprints give similar trends minimal differences magnitudes. Therefore decided working group meeting 11/4/2020 use survey strata set State Ecosystem report. accomplishes two goals. First stays consistent survey design survey. Second consistent ecosystem products coming Center.","code":"library(data.table); library(here); library(rgdal)#; library(Survdat); library(ggplot2); library(survdat)   #source(here('Survdat.r')) #load(here('data-raw/data/Survdat.RData')) load(here('data-raw/data/survdat_Albatross.RData')) survdat <- survdat.a4$survdat  #Top 10(11) species top10 <- c(15, 23, 32, 72, 73, 74, 75, 105, 106, 121, 197)  #fix numbers as character survdat <- survdat[, STRATUM := as.numeric(STRATUM)] survdat <- survdat[, SVSPP   := as.numeric(SVSPP)]  #First with survey strata strata <- st_read(here::here(\"data-raw/gis/strata.shp\"), quiet = F)  #Run 1 - All strata for GB () GB.soe   <- c(1090, 1130:1210, 1230, 1250, 3460, 3480, 3490, 3520:3550) GB.extra <- 1100:1120 #Calculate stratified means all.mean <- survdat::calc_stratified_mean(survdat,                               areaPolygon = strata,                               areaDescription = \"STRATA\",                               filterByArea = c(GB.soe,GB.extra),                               filterBySeason = \"FALL\",                               groupDescription = \"SVSPP\",                               filterByGroup = top10)  all.mean <- all.mean[, list(YEAR, SVSPP, strat.biomass)] all.mean[, subset := 'All']  #Run 2 - SOE strata for GB () #Calculate stratified means soe.mean <- survdat::calc_stratified_mean(survdat,                               areaPolygon = strata,                               areaDescription = \"STRATA\",                               filterByArea = GB.soe,                               filterBySeason = \"FALL\",                               groupDescription = \"SVSPP\",                               filterByGroup = top10)  soe.mean <- soe.mean[, list(YEAR, SVSPP, strat.biomass)] soe.mean[, subset := 'SOE']  #Run 3 - Use EPU strata #Grab strata epu <- st_read(here::here(\"data-raw/gis/EPU_strata.shp\"), quiet = T)  #Calculate stratified means epu.mean <- survdat::calc_stratified_mean(survdat,                               areaPolygon = epu,                               areaDescription = \"Strata\",                               filterBySeason = \"FALL\",                               groupDescription = \"SVSPP\",                               filterByGroup = top10)   epu.mean <- epu.mean[, list(YEAR, SVSPP, strat.biomass)] epu.mean[, subset := 'EPU']  #Combine data combo.data <- rbindlist(list(all.mean, soe.mean, epu.mean))  survey.plot <- ggplot(combo.data,                       aes(x = YEAR, y = strat.biomass)) +     geom_point(aes(color = subset)) +     facet_wrap(~SVSPP, ncol = 2, nrow = 6, scales = 'free_y')  plot(survey.plot)"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBbiomassNumbyLength.html","id":"spring-biomass-length-frequency-plots","dir":"Articles","previous_headings":"","what":"Spring Biomass: length-frequency plots","title":"Biomass and Abundance by length","text":"Goosefish Atlantic cod Winter flounder Yellowtail flounder Haddock Atlantic herring Atlantic mackerel Spiny dogfish Winter skate Silver hake","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBbiomassNumbyLength.html","id":"fall-biomass-length-frequency-plots","dir":"Articles","previous_headings":"","what":"Fall Biomass: length-frequency plots","title":"Biomass and Abundance by length","text":"Goosefish Atlantic cod Winter flounder Yellowtail flounder Haddock Atlantic herring Atlantic mackerel Spiny dogfish Winter skate Silver hake","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBbiomassNumbyLength.html","id":"spring-abundance-length-frequency-plots","dir":"Articles","previous_headings":"","what":"Spring Abundance: length-frequency plots","title":"Biomass and Abundance by length","text":"Goosefish Atlantic cod Winter flounder Yellowtail flounder Haddock Atlantic herring Atlantic mackerel Spiny dogfish Winter skate Silver hake","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBbiomassNumbyLength.html","id":"fall-abundance-length-frequency-plots","dir":"Articles","previous_headings":"","what":"Fall Abundance: length-frequency plots","title":"Biomass and Abundance by length","text":"Goosefish Atlantic cod Winter flounder Yellowtail flounder Haddock Atlantic herring Atlantic mackerel Spiny dogfish Winter skate Silver hake","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBdietcomp.html","id":"annual-survey-diet-composition-by-species","dir":"Articles","previous_headings":"","what":"Annual survey diet composition by species","title":"Georges Bank Diet Composition","text":"Atlantic_cod Atlantic_herring Atlantic_mackerel Goosefish Haddock Silver_hake Spiny_dogfish Winter_flounder Winter_skate Yellowtail_flounder","code":"ggiraph(code = print(plist2$Atlantic_cod), height=14) ggiraph(code = print(plist2$Atlantic_herring), height=14) ggiraph(code = print(plist2$Atlantic_mackerel), height=14) ggiraph(code = print(plist2$Goosefish), height=14) ggiraph(code = print(plist2$Haddock), height=14) ggiraph(code = print(plist2$Silver_hake), height=14) ggiraph(code = print(plist2$Spiny_dogfish), height=14) ggiraph(code = print(plist2$Winter_flounder), height=14) ggiraph(code = print(plist2$Winter_skate), height=14) ggiraph(code = print(plist2$Yellowtail_flounder), height=14)"},{"path":[]},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBdietcomp.html","id":"species-interactions","dir":"Articles","previous_headings":"","what":"Species interactions","title":"Georges Bank Diet Composition","text":"visualization, 10 mskeyrun focal species color across predator plots, prey species gray. Define colors:","code":"#from http://medialab.github.io/iwanthue/ using 10 categories, colorblind friendly  preycol <- c(  #make object preycol by combining this list of hex codes   \"#007e32\",   \"#000266\",   \"#d4c434\",   \"#692e00\",   \"#96bd77\",   \"#388eff\",   \"#c24914\",   \"#8afcdc\",   \"#ffadfe\",   \"#cdff94\")  names(preycol) <- as.factor(names(plist2)) focalprey <- mskeyrun::focalSpecies %>%   dplyr::filter(modelName != \"Pollock\") %>% # not using in these models   dplyr::select(-NESPP3) %>%   dplyr::mutate(Name = modelName) %>%   dplyr::distinct() %>%   dplyr::select(SCIENTIFIC_NAME, SPECIES_ITIS, Name)  tmpcol <- tmp %>%   dplyr::left_join(focalprey, by=c(\"prey\" = \"SCIENTIFIC_NAME\")) %>%   dplyr::rename(preyName = Name.y,                 Name = Name.x)   preycolsel <- preycol[names(preycol) %in% tmpcol$preyName]  #names(preycolsel) <- toupper(names(preycolsel))  plist3 = lapply(split(tmpcol, tmpcol$Name), function(d) {   #p1 <-     ggplot(d, aes(year, value, fill=preyName)) +    geom_bar(stat = \"identity\") + #    ylab(\"Percent in Diet\") +    xlab(\"Year\") +    facet_wrap(\"season\", nrow=4) +    theme_bw() +    scale_fill_manual(values=preycolsel) +    #viridis::scale_fill_viridis(discrete = TRUE) +    theme(#legend.position = \"none\"          legend.position=\"right\",          legend.text=element_text(size=5)          ) #+     #geom_bar_interactive(stat = \"identity\", aes(tooltip = prey, data_id = prey))  })"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBdietcomp.html","id":"proportion-of-diets-that-are-mskeyrun-focal-species","dir":"Articles","previous_headings":"","what":"Proportion of diets that are mskeyrun focal species","title":"Georges Bank Diet Composition","text":"Atlantic_cod Atlantic_herring Atlantic_mackerel Goosefish Haddock Silver_hake Spiny_dogfish Winter_flounder Winter_skate Yellowtail_flounder","code":"ggiraph(code = print(plist3$Atlantic_cod), height=14) ggiraph(code = print(plist3$Atlantic_herring), height=14) ggiraph(code = print(plist3$Atlantic_mackerel), height=14) ggiraph(code = print(plist3$Goosefish), height=14) ggiraph(code = print(plist3$Haddock), height=14) ggiraph(code = print(plist3$Silver_hake), height=14) ggiraph(code = print(plist3$Spiny_dogfish), height=14) ggiraph(code = print(plist3$Winter_flounder), height=14) ggiraph(code = print(plist3$Winter_skate), height=14) ggiraph(code = print(plist3$Yellowtail_flounder), height=14)"},{"path":[]},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBdietcomp.html","id":"diet-composition-by-predator-length","dir":"Articles","previous_headings":"","what":"Diet composition by predator length","title":"Georges Bank Diet Composition","text":"dataset mskeyrun::surveyLenDietcomp intended end product. interim product input hydradata model specific dataset processing code aggregate meansw length length age specific predator groups. variances calculated meaningless many based single tow splitting predators 1 cm length bins. warned.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBsurveycatchviz.html","id":"fishery-independent-survey-indices","dir":"Articles","previous_headings":"","what":"Fishery independent survey indices","title":"Georges Bank Survey Biomass and Catch Data","text":"NEFSC spring fall bottom trawl surveys collect information required obtain estimates survey biomass abundance. R package survdat used pull compile survey data time series. NEFSC bottom-trawl sampling encompasses 293,000 square km continental shelf Cape Hatteras, NC, Nova Scotia, Canada depths 8-400 m. Multiple survey datasets provided mskeyrun package; created using create_survey_index() ms-keyrun/data-raw. Datasets 10 Georges Bank focal species mskeyrun::surveyIndex (survey years 1968-2019 converted survey vessel R/V Albatross units years surveyed R/V Henry Bigelow 2009-2019), unconverted separate indices Albatross years (mskeyrun::surveyIndexA4) Bigelow years (mskeyrun::surveyIndexHB). Datasets food web modeling include surveyed species combined separate surveys. datasets names suffix -appended (e.g. mskeyrun::surveyIndexAll) visualize survey indices mskeyrun::surveyIndex dataset.","code":"modyears <- 1968:2019  # 1968 agreed for project, testing with shorter dataset    focalspp <- mskeyrun::focalSpecies %>%       dplyr::filter(modelName != \"Pollock\") %>% # not using in these models       dplyr::mutate(Name = modelName)           # single index, use if fitting to two not working survindex.all <- mskeyrun::surveyIndex %>%       dplyr::filter(YEAR %in% modyears) %>%       dplyr::left_join(focalspp %>% dplyr::select(-NESPP3) %>% dplyr::distinct()) %>%       dplyr::filter(!is.na(modelName)) %>%       dplyr::mutate(ModSim = \"Actual\",                     year = YEAR,                     Code = SPECIES_ITIS,                     Name = modelName,                     survey = paste0(\"Combined \", SEASON)) %>%       dplyr::select(ModSim, year, Code, Name, survey, variable, value, units)      towarea <- 0.0384      GBsurvstrata  <- c(1090, 1130:1210, 1230, 1250, 3460, 3480, 3490, 3520:3550)      GBarea <- 55055.24 #FishStatsUtils::northwest_atlantic_grid %>%       #dplyr::filter(stratum_number %in% GBsurvstrata) %>%       #dplyr::summarise(area = sum(Area_in_survey_km2)) %>%       #as.double()  survbio <- survindex.all %>%       dplyr::filter(variable %in% c(\"strat.biomass\", \"biomass.var\")) %>%       dplyr::select(-units) %>%       tidyr::pivot_wider(names_from = \"variable\", values_from = \"value\") %>%       dplyr::mutate(cv = sqrt(biomass.var)/strat.biomass) %>%       dplyr::select(-biomass.var) %>%       # expand: area of tow =  0.0384 and GB area = above and kg to tons       dplyr::mutate(biomass = strat.biomass * (GBarea/towarea) /1000) %>%        tidyr::pivot_longer(c(biomass, cv), names_to = \"variable\", values_to = \"value\") %>%       dplyr::mutate(units = ifelse(variable==\"biomass\", \"tons\", \"unitless\"))  # plot biomass time series facet wrapped by species plotB <- function(dat, truedat=NULL){        svbio <- dat %>% filter(variable==\"biomass\")     svcv <- dat %>% filter(variable==\"cv\")        ggplot() +     geom_line(data=svbio, aes(x=year,y=value, color=\"Survey Biomass\"),                alpha = 10/10) +     {if(!is.null(truedat)) geom_line(data=truedat, aes(x=time/365,y=atoutput, color=\"True B\"), alpha = 3/10)} +      theme_tufte() +     theme(legend.position = \"top\") +     xlab(\"model year\") +     ylab(\"tons\") +     labs(colour=dat$ModSim) +     facet_wrap(~Name, scales=\"free\")     } for(s in unique(survbio$survey)){    cat(\"  \\n##### \",  s,\"  \\n\")    print(plotB(survbio %>%                  filter((survey %in% s))))    cat(\"  \\n\")  }"},{"path":[]},{"path":[]},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/GBsurveycatchviz.html","id":"fishery-dependent-catch","dir":"Articles","previous_headings":"","what":"Fishery dependent catch","title":"Georges Bank Survey Biomass and Catch Data","text":"Commercial landings discards information compiled R package comlandr. Landings proportioned fishery statistical areas Georges Bank using proportion landings within outside Georges Bank high resolution fishery data (see  Allocate landings EPU). Discard rates (discarded/kept weight) estimated fishery observer data species gear years observer information. Prior years discard rates based average across years observer information species gear. annual discard rate multiplied Georges Bank landings time series estimate discards time series. Discard mortality rates yet applied","code":"fleetdef <- focalspp %>%       dplyr::select(-NESPP3) %>%        dplyr::distinct() %>%       dplyr::mutate(species = Name) %>%       dplyr::arrange(species) %>%       dplyr::mutate(pelagic = dplyr::case_when(species %in% c(\"Atlantic_herring\",                                                               \"Atlantic_mackerel\") ~ 2,                                                TRUE ~ 0),                     demersal = dplyr::case_when(!species %in% c(\"Atlantic_herring\",                                                                 \"Atlantic_mackerel\") ~ 1,                                                 TRUE ~ 0),                     qind = pelagic + demersal,                     pelagic = pelagic/2) %>%       dplyr::select(species, demersal, pelagic, qind)          # need to have landings + discards = catch     fishindex <- mskeyrun::catchIndex %>%       dplyr::filter(YEAR %in% modyears) %>%       dplyr::left_join(focalspp %>% dplyr::mutate(NESPP3 = as.integer(NESPP3))) %>%       dplyr::filter(!is.na(Name)) %>%       dplyr::select(-units) %>%       tidyr::pivot_wider(names_from = \"variable\", values_from = \"value\") %>%       dplyr::group_by(YEAR, Name) %>%       dplyr::mutate(catch = sum(`commercial landings`,`commercial discards`, na.rm = TRUE),                     cv = 0.05) %>%       dplyr::ungroup() %>%       tidyr::pivot_longer(c(`commercial landings`, `commercial discards`, catch, cv), names_to = \"variable\", values_to = \"value\") %>%       dplyr::mutate(units = ifelse(variable==\"cv\", \"unitless\", \"metric tons\")) %>%       dplyr::left_join(fleetdef, by=c(\"Name\" = \"species\")) %>%       dplyr::mutate(ModSim = \"Actual\",                     year = YEAR,                     Code = SPECIES_ITIS,                     Name = modelName,                     fishery = qind) %>%       dplyr::select(ModSim, year, Code, Name, fishery, variable, value, units)  # make a catch series function that can be split by fleet? this doesnt # also note different time (days) from model timestep in all other output plotC <- function(dat, truedat=NULL){        ctbio <- dat %>% filter(variable==\"catch\")     ctcv <- dat %>% filter(variable==\"cv\")     landdisc <- dat %>% filter(variable %in% c(\"commercial landings\", \"commercial discards\"))        ggplot() +     geom_line(data=landdisc, aes(x=year,y=value, colour=variable),                alpha = 10/10) +     {if(!is.null(truedat)) geom_line(data=truedat, aes(x=time/365,y=atoutput, color=\"True Catch\"), alpha = 3/10)} +      theme_tufte() +     theme(legend.position = \"top\") +     xlab(\"model year\") +     ylab(\"tons\") +     labs(colour=dat$ModSim) +     facet_wrap(~Name, scales=\"free\")     }  plotC(fishindex)"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SimData.html","id":"simulating-input-data-from-an-ecosystem-model","dir":"Articles","previous_headings":"","what":"Simulating input data from an ecosystem model","title":"Generating Simulated Data","text":"use existing Atlantis ecosystem model output generate input datasets variety simpler population models, performance models can evaluated known (simulated) ecosystem dynamics. Atlantis end--end spatial ecosystem model capable including climate effects, seasonal migration, food web, fishery interactions (Audzijonyte et al., 2019). extract simulated data using R package atlantisom. purpose atlantisom use existing Atlantis model output generate input datasets variety models, performance models can evaluated known (simulated) ecosystem dynamics. process briefly described . Atlantis models can run using different climate forcing, fishing, scenarios. Users atlantisom specify fishery independent fishery dependent sampling space time, well species-specific catchability, selectivty, observation processes Atlantis scenario. Internally consistent multispecies ecosystem datasets known observation error characteristics atlantisom outputs, use individual model performance testing, comparing performance alternative models, performance testing model ensembles “true” Atlantis outputs. simulated dataset based output Norwegian Barents Sea (NOBA) Atlantis model (Hansen et al., 2016, 2019). simulated dataset contains comparable survey, fishery, composition data Georges Bank dataset, time series span 80 simulation years include 11 species. dataset used initial model development, code quality testing, model skill assessment modeling teams. Details dataset including construction basic attributes .","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SimData.html","id":"species-in-the-ms-keyrun-dataset","dir":"Articles","previous_headings":"","what":"Species in the ms-keyrun dataset","title":"Generating Simulated Data","text":"initial species selection includes 11 single species groups Atlantis NOBA model.","code":"lname <- data.frame(Name= c(\"Long_rough_dab\",                                  \"Green_halibut\",                                  \"Mackerel\",                                  \"Haddock\",                                  \"Saithe\",                                  \"Redfish\",                                  \"Blue_whiting\",                                  \"Norwegian_ssh\",                                  \"North_atl_cod\",                                  \"Polar_cod\",                                  \"Capelin\"),                     Long.Name = c(\"Long rough dab\",                                  \"Greenland halibut\",                                  \"Mackerel\",                                  \"Haddock\",                                  \"Saithe\",                                  \"Redfish\",                                  \"Blue whiting\",                                  \"Norwegian spring spawning herring\",                                  \"Northeast Atlantic Cod\",                                  \"Polar cod\",                                  \"Capelin\"),                     Latin = c(\"*Hippoglossoides platessoides*\",                               \"*Reinhardtius hippoglossoides*\",                               \"*Scomber scombrus*\",                               \"*Melongrammus aeglefinus*\",                               \"*Pollachius virens*\",                               \"*Sebastes mentella*\",                               \"*Micromesistius poutassou*\",                               \"*Clupea harengus*\",                               \"*Gadus morhua*\",                               \"*Boreogadus saida*\",                               \"*Mallotus villosus*\"),                     Code = c(\"LRD\", \"GRH\", \"MAC\", \"HAD\", \"SAI\", \"RED\",                               \"BWH\", \"SSH\", \"NCO\", \"PCO\", \"CAP\") )  # sppsubset <- merge(fgs, lname, all.y = TRUE) # spptable <- sppsubset %>%  #   arrange(Index) %>% #   select(Name, Long.Name, Latin)  spptable <- lname %>%    select(Name, Long.Name, Latin)  knitr::kable(spptable, col.names = c(\"Model name\", \"Full name\", \"Latin name\"))"},{"path":[]},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SimData.html","id":"configuration-files-specified-once","dir":"Articles","previous_headings":"Generating a dataset","what":"Configuration files specified once","title":"Generating Simulated Data","text":"NOBA2config.R specifies location names files needed atlantisom initialize: omdimensions.R standardizes timesteps, etc. (part atlantisom need changed user):","code":"d.name <- here(\"simulated-data/atlantisoutput\",\"NOBA_sacc_38\") functional.groups.file <- \"nordic_groups_v04.csv\" biomass.pools.file <- \"nordic_biol_v23.nc\" biol.prm.file <- \"nordic_biol_incl_harv_v_011_1skg.prm\" box.file <- \"Nordic02.bgm\" initial.conditions.file <- \"nordic_biol_v23.nc\" run.prm.file <- \"nordic_run_v01.xml\" scenario.name <- \"nordic_runresults_01\" bioind.file <- \"nordic_runresults_01BiomIndx.txt\" catch.file <- \"nordic_runresults_01Catch.txt\" annage <- TRUE fisheries.file <- \"NoBAFisheries.csv\" #survey species inherited from omlist_ss survspp <- omlist_ss$species_ss # survey season and other time dimensioning parameters # generalized timesteps all models noutsteps <- omlist_ss$runpar$tstop/omlist_ss$runpar$outputstep timeall <- c(0:noutsteps) stepperyr <- if(omlist_ss$runpar$outputstepunit==\"days\") 365/omlist_ss$runpar$toutinc midptyr <- round(median(seq(0,stepperyr)))  # model areas, subset in surveyconfig allboxes <- c(0:(omlist_ss$boxpars$nbox - 1))  # fishery output: learned the hard way this can be different from ecosystem outputs fstepperyr <- if(omlist_ss$runpar$outputstepunit==\"days\") 365/omlist_ss$runpar$toutfinc  # survey selectivity (agecl based) sp_age <- omlist_ss$funct.group_ss[, c(\"Name\", \"NumCohorts\", \"NumAgeClassSize\")]  # should return all age classes fully sampled (Atlantis output is 10 age groups per spp) n_age_classes <- sp_age$NumCohorts # changed below for multiple species NOTE survspp alphabetical; NOT in order of fgs!! # this gives correct names age_classes <- lapply(n_age_classes, seq) names(age_classes)<-sp_age$Name  n_annages <- sp_age$NumCohorts * sp_age$NumAgeClassSize # changed below for multiple species annages <- lapply(n_annages, seq) names(annages)<-sp_age$Name"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SimData.html","id":"change-these-survey-and-fishery-config-files","dir":"Articles","previous_headings":"Generating a dataset","what":"Change these survey and fishery config files","title":"Generating Simulated Data","text":"mssurvey_spring.R mssurvey_fall.R configure fishery independent surveys (census test, surveys sample model polygons years efficiency 1 species, size selectivity): msfishery.R configures fishery dependent data:","code":"# Default survey configuration here has a range of efficiencies and selectivities # To emulate a range of species in a single multispecies survey # Also now happens in \"spring\" and \"fall\" # Need to define survey season, area, efficiency, selectivity  # Survey name survey.name=\"BTS_spring_allbox_effic1\"  #Atlantis model timestep corresponding to the true output--now from census_spec.R timestep <- stepperyr #5  #Which atlantis timestep does the survey run in?--now from census_spec.R # with 5 output steps per year, 0 is Jan-Feb-midMar, 1 is midMar-Apr-May,  # 2 is June-July-midAug, 3 is midAug-Sept-Oct, 4 is Nov-Dec (ish)  # No, timestep 0 is initial condition and should be ignored to align  # snapshots (biomass, numbers) with # cumulative outputs (fishery catch, numbers)  # with 5 output steps per (non leap) year: # 1 is day 73, or 14 March # 2 is day 146, or 26 May # 3 is day 219, or 7 August # 4 is day 292, or 19 October # 5 is day 365, or 31 December  survey_sample_time <- 1 # spring survey  #The last timestep to sample total_sample <- noutsteps-1 #495  #Vector of indices of survey times to pull survey_sample_full <- seq(survey_sample_time,                           total_sample, by=timestep)  survtime <- survey_sample_full  # survey area # should return all model areas survboxes <- allboxes  # survey efficiency (q) # should return a perfectly efficient survey  surveffic <- data.frame(species=survspp,                      efficiency=rep(1.0,length(survspp)))  # survey selectivity (agecl based) # this is by age class, need to change to use with ANNAGEBIO output #survselex <- data.frame(species=rep(names(age_classes), each=n_age_classes), #                     agecl=rep(c(1:n_age_classes),length(survspp)), #                     selex=rep(1.0,length(survspp)*n_age_classes))  # for annage output uses names(annages) NOT alphabetical survspp survselex <- data.frame(species=rep(names(annages), n_annages), #                           agecl=unlist(sapply(n_annages,seq)),                         selex=rep(1.0,sum(n_annages)))  survselex.agecl <- survselex   # effective sample size needed for sample_fish # this effective N is high but not equal to total for numerous groups surveffN <- data.frame(species=survspp, effN=rep(100000, length(survspp)))  # survey index cv needed for sample_survey_xxx # cv = 0.1 surv_cv <- data.frame(species=survspp, cv=rep(0.1,length(survspp)))  # length at age cv for input into calc_age2length function # function designed to take one cv for all species, need to change to pass it a vector lenage_cv <- 0.1  # max size bin for length estimation, function defaults to 150 cm if not supplied maxbin <- 200  # diet sampling parameters alphamult <- 10000000 unidprey <- 0 # Default survey configuration here has a range of efficiencies and selectivities # To emulate a range of species in a single multispecies survey # Also now happens in \"spring\" and \"fall\" # Need to define survey season, area, efficiency, selectivity  # Survey name survey.name=\"BTS_fall_allbox_effic1\"  #Atlantis model timestep corresponding to the true output--now from census_spec.R timestep <- stepperyr #5  #Which atlantis timestep does the survey run in?--now from census_spec.R # with 5 output steps per year, 0 is Jan-Feb-midMar, 1 is midMar-Apr-May,  # 2 is June-July-midAug, 3 is midAug-Sept-Oct, 4 is Nov-Dec (ish)  # No, timestep 0 is initial condition and should be ignored to align  # snapshots (biomass, numbers) with # cumulative outputs (fishery catch, numbers)  # with 5 output steps per (non leap) year: # 1 is day 73, or 14 March # 2 is day 146, or 26 May # 3 is day 219, or 7 August # 4 is day 292, or 19 October # 5 is day 365, or 31 December  survey_sample_time <- 3 # fall survey  #The last timestep to sample total_sample <- noutsteps-1 #495  #Vector of indices of survey times to pull survey_sample_full <- seq(survey_sample_time,                           total_sample, by=timestep)  survtime <- survey_sample_full  # survey area # should return all model areas survboxes <- allboxes  # survey efficiency (q) # should return a perfectly efficient survey  surveffic <- data.frame(species=survspp,                      efficiency=rep(1.0,length(survspp)))  # survey selectivity (agecl based) # this is by age class, need to change to use with ANNAGEBIO output #survselex <- data.frame(species=rep(survspp, each=n_age_classes), #                     agecl=rep(c(1:n_age_classes),length(survspp)), #                     selex=rep(1.0,length(survspp)*n_age_classes))  # for annage output survselex <- data.frame(species=rep(names(annages), n_annages), #                           agecl=unlist(sapply(n_annages,seq)),                         selex=rep(1.0,sum(n_annages)))  survselex.agecl <- survselex    # effective sample size needed for sample_fish # this effective N is high but not equal to total for numerous groups surveffN <- data.frame(species=survspp, effN=rep(100000, length(survspp)))  # survey index cv needed for sample_survey_xxx # cv = 0.1 surv_cv <- data.frame(species=survspp, cv=rep(0.1,length(survspp)))  # length at age cv for input into calc_age2length function # function designed to take one cv for all species, need to change to pass it a vector lenage_cv <- 0.1  # max size bin for length estimation, function defaults to 150 cm if not supplied maxbin <- 200  # diet sampling parameters alphamult <- 10000000 unidprey <- 0 # Default fishery configuration here is a census fishery.name=\"census\"  # Inherits species from input omlist_ss fishspp <- omlist_ss$species_ss   #Number of years of data to pull nyears <- 50  #Atlantis initialization period in years burnin <- 30  # fishery output: learned the hard way this can be different from ecosystem outputs fstepperyr <- if(omlist_ss$runpar$outputstepunit==\"days\") 365/omlist_ss$runpar$toutfinc   # same time dimensioning parameters as in surveycensus.R #Vector of indices of catch in numbers to pull (by timestep to sum) fish_sample_full <- c(0:total_sample)  #total_sample defined in sardinesurvey.R fish_burnin <- burnin*fstepperyr+1 fish_nyears <- nyears*fstepperyr fish_times <- fish_sample_full[fish_burnin:(fish_burnin+fish_nyears-1)] fish_timesteps <- seq(fish_times[fstepperyr], max(fish_times), by=fstepperyr) #last timestep #fish_years <- unique(floor(fish_times/fstepperyr)+1) # my original fish_years <- unique(floor(fish_times/fstepperyr)) #from Christine's new sardine_config.R  fishtime <- fish_times   # fishery sampling area # should return all model areas, this assumes you see everything that it caught fishboxes <- c(0:(omlist_ss$boxpars$nbox - 1))  # effective sample size needed for sample_fish # this effective N is divided by the number of annual timesteps below, so 200 per time # use as input to the length samples, ages can be a subset fisheffN <- data.frame(species=survspp, effN=rep(1000, length(survspp)))  #this adjusts for subannual fishery output so original effN is for whole year fisheffN$effN <- fisheffN$effN/fstepperyr   # fishery catch cv can be used in sample_survey_biomass # perfect observation fish_cv <- data.frame(species=survspp, cv=rep(0.01,length(survspp)))"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SimData.html","id":"run-atlantisom-and-save-outputs","dir":"Articles","previous_headings":"Generating a dataset","what":"Run atlantisom and save outputs","title":"Generating Simulated Data","text":"True datasets generated follows, using atlantisom wrapper functions om_init assemble initial true atlantis data, om_species subset true data desired species, om_index generate survey biomass total catch biomass indices, om_comps generate age length compositions average weight age surveys fisheries, om_diet generate diet surveys. Outputs saved atlantisoutput folder (kept github due size):","code":"NOBAom <- om_init(here(\"simulated-data/config/NOBA_sacc38Config.R\"))  NOBAom_ms <- om_species(sppsubset$Name, NOBAom)  #need to change internal call to source in atlantisom om_index om_comps and om_diet functions #expecting a config folder in same directory as rmd #this is a workaround  dir.create(file.path(here(\"docs/config\")))  file.copy(here(\"simulated-data/config/omdimensions.R\"), here(\"docs/config/omdimensions.R\"))  NOBAom_ms_ind <- om_index(usersurvey = c(here(\"simulated-data/config/mssurvey_spring.R\"),                                           here(\"simulated-data/config/mssurvey_fall.R\")),                             userfishery = here(\"simulated-data/config/msfishery.R\"),                            omlist_ss = NOBAom_ms,                             n_reps = 1,                             save = TRUE)  NOBAom_ms_comp <- om_comps(usersurvey = c(here(\"simulated-data/config/mssurvey_spring.R\"),                                           here(\"simulated-data/config/mssurvey_fall.R\")),                             userfishery = here(\"simulated-data/config/msfishery.R\"),                            omlist_ss = NOBAom_ms,                             n_reps = 1,                             save = TRUE)  NOBAom_ms_diet <- om_diet(config = here(\"simulated-data/config\", \"NOBA2config.R\"),                           dietfile = \"NOBADetDiet.gz\",                           usersurvey = c(here(\"simulated-data/config/mssurvey_spring.R\"),                                           here(\"simulated-data/config/mssurvey_fall.R\")),                            omlist_ss = NOBAom_ms,                            n_reps = 1,                            save = TRUE)  unlink(here(\"docs/config\"), recursive = TRUE)"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SimData.html","id":"create-mskeyrun-simulated-data","dir":"Articles","previous_headings":"Generating a dataset","what":"Create mskeyrun simulated data","title":"Generating Simulated Data","text":"Scripts ms-keyrun/data-raw show process making mskeyun datasets atlantisom output generated . Atlantis outputs atlantisom outputs produced local Sarah’s computer code run, large github. However, scripts linked show process. Overall script creates datasets using functions specific data type: example, create_sim_survey_index() takes saved atlantisom output plus user specifications fit start end years produce dataset mskeyrun::simSurveyIndex: functions mskeyrun repository folder: https://github.com/NOAA-EDAB/ms-keyrun/tree/master/data-raw/R","code":"#' Sarah's notes for building simulated dataset #'  #' all atlantis files are local on my computer in folder #' ms-keyrun/simlulated-data/atlantisoutput #'  #' see SimData.Rmd for how these are generated using atlantisom #'  #' to make data for package #' source these files in data-raw/R: #' #' create_sim_focal_species.R #' get_sim_survey_index.R #'  #' run from ms-keyrun directory  library(here)  atlmod <- here(\"data-raw/simulated-data/config/NOBA_sacc38Config.R\")  create_sim_focal_species(atlmod)  create_sim_biolpar(atlmod)  create_sim_survey_index(atlmod, fitstart=40, fitend=120)  create_sim_fishery_index(atlmod, fitstart=40, fitend=120)  create_sim_survey_agecomp(atlmod, fitstart=40, fitend=120)  create_sim_fishery_agecomp(atlmod, fitstart=40, fitend=120)  create_sim_survey_lencomp(atlmod, fitstart=40, fitend=120)  create_sim_fishery_lencomp(atlmod, fitstart=40, fitend=120)  create_sim_survey_dietcomp(atlmod, fitstart=40, fitend=120)  create_sim_survey_bottemp(atlmod, fitstart=40, fitend=120)  create_sim_fishery_wtage(atlmod, fitstart=40, fitend=120)  create_sim_survey_wtage(atlmod, fitstart=40, fitend=120)  create_sim_survey_agelen(atlmod, fitstart=40, fitend=120)  create_sim_percapconsumption(atlmod, fitstart=40, fitend=120)  create_sim_startpars(atlmod, fitstart=40, fitend=120) #' Read in survey data save as rda #'  #' atlantosom output is accessed and surveys pulled over time #'  #'@param atlmod configuration file specifying Atlantis simulation model filenames  #'and locations   #'@param saveToData Boolean. Export to data folder (Default = T) #' #'@return A tibble (Also written to \\code{data} folder) #'\\item{ModSim}{Atlantis model name and simulation id} #'\\item{year}{year simulated survey conducted} #'\\item{Code}{Atlantis model three letter code for functional group} #'\\item{Name}{Atlantis model common name for functional group} #'\\item{survey}{simulated survey name} #'\\item{variable}{biomass or coefficient of variation (cv) of biomass} #'\\item{value}{value of the variable} #'\\item{units}{units of the variable} #'  library(magrittr)  create_sim_survey_index <- function(atlmod,fitstart=NULL,fitend=NULL,saveToData=T) {    # input is path to model config file for atlantisom   source(atlmod)      # path for survey and fishery config files   cfgpath <- stringr::str_extract(atlmod, \".*config\")      #works because atlantis directory named for model and simulation   modpath <- stringr::str_split(d.name, \"/\", simplify = TRUE)   modsim <- modpath[length(modpath)]      #read in survey biomass data   survObsBiom <- atlantisom::read_savedsurvs(d.name, 'survB') #reads in all surveys      # get config files for survey cv   svcon <- list.files(path=cfgpath, pattern = \"*survey*\", full.names = TRUE)      # read true list with run and biol pars, etc   omlist_ss <- readRDS(file.path(d.name, paste0(scenario.name, \"omlist_ss.rds\")))      # model timesteps, etc from omdimensions script   source(paste0(cfgpath,\"/omdimensions.R\"), local = TRUE)      #Number of years   nyears <- omlist_ss$runpar$nyears   total_sample <- omlist_ss$runpar$tstop/omlist_ss$runpar$outputstep      # user specified fit start and times if different from full run   fitstartyr <- ifelse(!is.null(fitstart), fitstart-1, 0)   fitendyr <- ifelse(!is.null(fitend), fitend, total_sample)      atlantis_full <- c(1:total_sample)     mod_burnin <- fitstartyr*stepperyr+1   fit_nyears <- fitendyr-fitstartyr   fit_ntimes <- fit_nyears*stepperyr   fittimes <- atlantis_full[mod_burnin:(mod_burnin+fit_ntimes-1)]   #fit_timesteps <- seq(fittimes[stepperyr], max(fittimes), by=stepperyr) #last timestep   #fit_years <- unique(floor(fittimes/stepperyr)) #from Christine's new sardine_config.R   #fittimes.days <- if(omlist_ss$runpar$outputstepunit==\"days\") fittimes*omlist_ss$runpar$outputstep         # survey cv lookup from config files   svcvlook <- tibble::tibble()   for(c in 1:length(svcon)){     source(svcon[c], local = TRUE)     surv_cv_n <- surv_cv %>%        dplyr::mutate(survey=survey.name)     svcvlook <- dplyr::bind_rows(svcvlook, surv_cv_n)   }      allsvbio <- tibble::tibble()      #multiple surveys named in list object   for(s in names(survObsBiom)){     #arrange into wide format: year, Species1, Species2 ... and write csv     svbio <- survObsBiom[[s]][[1]] %>%       dplyr::filter(time %in% fittimes) %>%       dplyr::mutate(year = ceiling(time/stepperyr)) %>%       dplyr::select(species, year, atoutput) %>%       dplyr::rename(biomass = atoutput) %>%       dplyr::left_join(dplyr::select(omlist_ss$funct.group_ss, Code, Name), by = c(\"species\" = \"Name\")) %>%       dplyr::mutate(ModSim = modsim) %>%       dplyr::mutate(survey = s) %>%       dplyr::left_join(svcvlook) %>%       dplyr::select(ModSim, year, Code, Name=species, survey, everything()) %>%       tidyr::pivot_longer(cols = c(\"biomass\", \"cv\"),                            names_to = \"variable\",                           values_to = \"value\") %>%       dplyr::mutate(units = ifelse(variable==\"biomass\", \"tons\", \"unitless\")) %>%       dplyr::arrange(Name, survey, variable, year)          allsvbio <- dplyr::bind_rows(allsvbio, svbio)   }      simSurveyIndex <- allsvbio      if (saveToData) {     #saveRDS(focalSpecies,saveToRDS)     usethis::use_data(simSurveyIndex, overwrite = TRUE)   }      return(simSurveyIndex)       }"},{"path":[]},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SimData.html","id":"plotting-functions","dir":"Articles","previous_headings":"Generating a dataset > Visualize simulated data","what":"Plotting functions","title":"Generating Simulated Data","text":"collection functions used previously may harvested modified diagnostics visualizations ms-keyrun ICES WGSAM skill assessment projects.","code":"# plot biomass time series facet wrapped by species plotB <- function(dat, truedat=NULL){        svbio <- dat %>% filter(variable==\"biomass\")     svcv <- dat %>% filter(variable==\"cv\")        ggplot() +     geom_line(data=svbio, aes(x=year,y=value, color=\"Survey Biomass\"),                alpha = 10/10) +     {if(!is.null(truedat)) geom_line(data=truedat, aes(x=time/365,y=atoutput, color=\"True B\"), alpha = 3/10)} +      theme_tufte() +     theme(legend.position = \"top\") +     xlab(\"model year\") +     ylab(\"tons\") +     labs(colour=dat$ModSim) +     facet_wrap(~Name, scales=\"free\")     }  # make a catch series function that can be split by fleet? this doesnt # also note different time (days) from model timestep in all other output plotC <- function(dat, truedat=NULL){        ctbio <- dat %>% filter(variable==\"catch\")     ctcv <- dat %>% filter(variable==\"cv\")        ggplot() +     geom_line(data=ctbio, aes(x=year,y=value, color=\"Catch biomass\"),                alpha = 10/10) +     {if(!is.null(truedat)) geom_line(data=truedat, aes(x=time/365,y=atoutput, color=\"True Catch\"), alpha = 3/10)} +      theme_tufte() +     theme(legend.position = \"top\") +     xlab(\"model year\") +     ylab(\"tons\") +     labs(colour=dat$ModSim) +     facet_wrap(~Name, scales=\"free\")     }  # note on ggplot default colors, can get the first and second using this # library(scales) # show_col(hue_pal()(2))  # plot length frequencies by timestep (one species) plotlen <- function(dat, effN=1, truedat=NULL){      cols <- c(\"Census Lcomp\"=\"#00BFC4\",\"Sample Lcomp\"=\"#F8766D\")     ggplot(mapping=aes(x=lenbin)) +     {if(is.null(truedat)) geom_bar(data=dat, aes(weight = value/effN))} +     {if(!is.null(truedat)) geom_bar(data=dat, aes(weight = censuslen/totlen, fill=\"Census Lcomp\"), alpha = 5/10)} +     {if(!is.null(truedat)) geom_bar(data=dat, aes(weight = atoutput/effN, fill=\"Sample Lcomp\"), alpha = 5/10)} +     theme_tufte() +     theme(legend.position = \"bottom\") +     xlab(\"length (cm)\") +     {if(is.null(truedat)) ylab(\"number\")} +     {if(!is.null(truedat)) ylab(\"proportion\")} +     scale_colour_manual(name=\"\", values=cols) +     labs(subtitle = paste(dat$ModSim,                           dat$Name)) +     facet_wrap(~year, ncol=6, scales=\"free_y\")  }  # plot numbers at age by timestep (one species) Natageplot <- function(dat, effN=1, truedat=NULL){   ggplot() +     geom_point(data=dat, aes(x=age, y=value/effN, color=\"Est Comp\")) +     {if(!is.null(truedat)) geom_line(data=dat, aes(x=agecl, y=numAtAge/totN, color=\"True Comp\"))} +      theme_tufte() +     theme(legend.position = \"bottom\") +         xlab(\"age\") +     {if(is.null(truedat)) ylab(\"number\")} +     {if(!is.null(truedat)) ylab(\"proportion\")} +     labs(subtitle = paste(dat$ModSim,                           dat$Name)) +      facet_wrap(~year, ncol=6, scales=\"free_y\") }  # plot weight at age time series facet wrapped by species wageplot <- function(dat, truedat=NULL){   ggplot(dat, aes(year, value)) +     geom_line(aes(colour = factor(age))) +     theme_tufte() +     theme(legend.position = \"bottom\") +     xlab(\"model year\") +     ylab(\"average individual weight (g)\") +     labs(subtitle = paste0(dat$ModSim)) +     facet_wrap(c(\"Name\"), scales=\"free_y\") }"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SimData.html","id":"read-in-the-data-to-check-with-plots","dir":"Articles","previous_headings":"Generating a dataset > Visualize simulated data","what":"Read in the “data” to check with plots","title":"Generating Simulated Data","text":"mskeyrun simulated data objects dataframes.","code":"survObsBiom <- mskeyrun::simSurveyIndex #atlantisom::read_savedsurvs(d.name, 'survB') #age_comp_data <- mskeyrun::simSurveyAgeLencomp #atlantisom::read_savedsurvs(d.name, 'survAge') #not using in assessment len_comp_data <- mskeyrun::simSurveyLencomp #atlantisom::read_savedsurvs(d.name, 'survLen') #wtage <- atlantisom::read_savedsurvs(d.name, 'survWtage')  #not using in assessment annage_comp_data <- mskeyrun::simSurveyAgecomp #atlantisom::read_savedsurvs(d.name, 'survAnnAge') annage_wtage <- mskeyrun::simSurveyWtatAge #atlantisom::read_savedsurvs(d.name, 'survAnnWtage')  #all_diets <- atlantisom::read_savedsurvs(d.name, 'survDiet') #not using in assessment  catchbio_ss <- mskeyrun::simCatchIndex #atlantisom::read_savedfisheries(d.name, 'Catch') catchlen_ss <- mskeyrun::simFisheryLencomp #atlantisom::read_savedfisheries(d.name, \"catchLen\") #fish_age_comp <- #atlantisom::read_savedfisheries(d.name, \"catchAge\") fish_annage_comp <- mskeyrun::simFisheryAgecomp #atlantisom::read_savedfisheries(d.name, 'catchAnnAge') fish_annage_wtage <- mskeyrun::simFisheryWtatAge #atlantisom::read_savedfisheries(d.name, 'catchAnnWtage')"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SimData.html","id":"visualize-survey-outputs","dir":"Articles","previous_headings":"Generating a dataset","what":"Visualize survey outputs","title":"Generating Simulated Data","text":"plots represent full mskeyrun simulated time series survey biomass index weight age, subset length age composition. Survey biomass index Survey length composition Survey age composition (annual ages) Survey iterpolated weight age (annual ages)","code":"# compare with true output (all timesteps) # for(s in names(survObsBiom)){ #   cat(\"  \\n##### \",  s,\"  \\n\") #   print(plotB(survObsBiom[[s]][[1]], omlist_ss$truetotbio_ss)) #   cat(\"  \\n\") # }  # plots survey only  for(s in unique(survObsBiom$survey)){    cat(\"  \\n##### \",  s,\"  \\n\")    print(plotB(survObsBiom %>%                  filter((survey %in% s))))    cat(\"  \\n\")  } # not the full time series, just 24 yrs after catches start in year 55 for(s in unique(len_comp_data$survey)){   cat(\"  \\n##### \",  s,\"  \\n\")   lcompsub <- len_comp_data %>% filter(survey %in% s) %>% filter(year %in% c(55:78)) %>%     group_by(Name) %>%     group_map(~ plotlen(.x), keep = TRUE)      for(i in 1:length(lcompsub)) {     print(lcompsub[[i]])   }   cat(\"  \\n\") } for(s in unique(annage_comp_data$survey)){   cat(\"  \\n##### \",  s,\"  \\n\")   acompsub <- annage_comp_data %>% filter(survey %in% s) %>% filter(year %in% c(55:78)) %>%     group_by(Name) %>%     #left_join(., trueNage) %>%     group_map(~ Natageplot(.x), keep = TRUE) # plots only sampled age comp     #group_map(~ Natageplot(.x, effN = 100000, truedat = 1), keep = TRUE) # plots merged true age comp      for(i in 1:length(acompsub)) {     print(acompsub[[i]])   }   cat(\"  \\n\") } for(s in unique(annage_wtage$survey)){   cat(\"  \\n##### \",  s,\"  \\n\")   print(wageplot(annage_wtage %>%                  filter((survey %in% s))))   cat(\"  \\n\") }"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SimData.html","id":"visualize-fishery-data","dir":"Articles","previous_headings":"Generating a dataset","what":"Visualize fishery data","title":"Generating Simulated Data","text":"plots represent full mskeyrun simulated time series fishery catch weight age, subset length age composition. Fishery catch time series Fishery length composition Fishery catch age (annual ages) Fishery interpolated weight age (annual ages)","code":"# observed catch only plotC(catchbio_ss) lcompsub <- catchlen_ss %>% filter(year %in% c(55:78)) %>%   group_by(Name) %>%   group_map(~ plotlen(.x), keep = TRUE)  for(i in 1:length(lcompsub)) {   print(lcompsub[[i]]) } acompsub <- fish_annage_comp %>% filter(year %in% c(55:78)) %>%   group_by(Name) %>%   #left_join(., trueCAA) %>%   group_map(~ Natageplot(.x), keep = TRUE) # plots only sampled age comp   #group_map(~ Natageplot(.x, effN = 200, truedat = 1), keep = TRUE) # plots merged true age comp  for(i in 1:length(acompsub)) {   print(acompsub[[i]]) } wageplot(fish_annage_wtage)"},{"path":[]},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SimData.html","id":"write-to-model-input-files","dir":"Articles","previous_headings":"Generating a dataset","what":"Write to model input files","title":"Generating Simulated Data","text":"goal reproducible process aspects data generation model inputs. simulated data included mskeyrun data package, data inputs derived sources.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SimData.html","id":"multispecies-surplus-production-model-msspm","dir":"Articles","previous_headings":"Generating a dataset > Write to model input files","what":"Multispecies surplus production model (MSSPM)","title":"Generating Simulated Data","text":"[added]","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SimData.html","id":"length-structured-multispecies-model-hydra","dir":"Articles","previous_headings":"Generating a dataset > Write to model input files","what":"Length-structured multispecies model (Hydra)","title":"Generating Simulated Data","text":"Hydra input files developed directly mskeyrun datasets modifying functions hydradata R package. function create_Rdata_mskeyrun.R (code) allows user specify whether datasets constructed Atlantis-simulated real Georges Bank data, number length bins use composition data, creates R data object. data object used create data parameter input files using function hydradata::create_datpin_files(). example, process creates simulated dataset 5 length bins: create_RData_mskeyrun.R file sourced, create_RData_mskeyrun(\"sim\", nlenbin = 5) run make new hydraDataList_msk.rda file package. package built locally, R restarted, following code block run produce input files. Run create_RData_mskeyrun(\"sim\", nlenbin = 10) hydradata, rebuild package, restart R, …","code":"library(here) library(hydradata) inputs <- setup_default_inputs() inputs$outDir <- here()  inputs$outputFilename <- \"hydra_sim_NOBA_5bin_0comp\"   # tpl code removes 0 so replace in data nbins <- hydraDataList_msk$Nsizebins hydraDataList_msk$observedCatchSize[,7:(6+nbins)][hydraDataList_msk$observedCatchSize[,7:(6+nbins)]==0] <- 1e-4 hydraDataList_msk$observedSurvSize[,6:(5+nbins)][hydraDataList_msk$observedSurvSize[,6:(5+nbins)]==0] <- 1e-4  hydraDataList_5bin_0comp <- create_datpin_files(inputs,hydraDataList_msk)  # this saves the specific hydralist object, so we could saveRDS it to a diagnostics folder? # advantage of rds format is we can assign it when reading it in to diagnostics scripts saveRDS(hydraDataList_5bin_0comp, file.path(here(\"inputRdatalists/hydraDataList_5bin_0comp.rds\"))) library(here) library(hydradata) inputs <- setup_default_inputs() inputs$outDir <- here()  inputs$outputFilename <- \"hydra_sim_NOBA_10bin_0comp\"   # tpl code removes 0 so replace in data nbins <- hydraDataList_msk$Nsizebins hydraDataList_msk$observedCatchSize[,7:(6+nbins)][hydraDataList_msk$observedCatchSize[,7:(6+nbins)]==0] <- 1e-4 hydraDataList_msk$observedSurvSize[,6:(5+nbins)][hydraDataList_msk$observedSurvSize[,6:(5+nbins)]==0] <- 1e-4   hydraDataList_10bin_0comp <- create_datpin_files(inputs,hydraDataList_msk)  # this saves the specific hydralist object, so we could saveRDS it to a diagnostics folder? # advantage of rds format is we can assign it when reading it in to diagnostics scripts saveRDS(hydraDataList_10bin_0comp, file.path(here(\"inputRdatalists/hydraDataList_10bin_0comp.rds\")))"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SimData.html","id":"age-structured-multispecies-statistical-catch-at-age-model-msscaa","dir":"Articles","previous_headings":"Generating a dataset > Write to model input files","what":"Age structured multispecies statistical catch at age model (MSSCAA)","title":"Generating Simulated Data","text":"Work progress finished October 2022 review.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SimData.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Generating Simulated Data","text":"Audzijonyte, ., Pethybridge, H., Porobic, J., Gorton, R., Kaplan, ., & Fulton, E. . (2019). Atlantis: spatially explicit end--end marine ecosystem model dynamically integrated physics, ecology socio-economic modules. Methods Ecology Evolution, 10(10), 1814–1819. https://doi.org/10.1111/2041-210X.13272 _eprint: https://besjournals.onlinelibrary.wiley.com/doi/pdf/10.1111/2041-210X.13272 Hansen, C., Drinkwater, K. F., Jähkel, ., Fulton, E. ., Gorton, R., & Skern-Mauritzen, M. (2019). Sensitivity Norwegian Barents Sea Atlantis end--end ecosystem model parameter perturbations key species. PLOS ONE, 14(2), e0210419. https://doi.org/10.1371/journal.pone.0210419 Hansen, C., Skern-Mauritzen, M., Meeren, G. van der, Jähkel, ., & Drinkwater, K. F. (2016). Set-Nordic Barents Seas (NoBa) Atlantis model. Havforskningsinstituttet. https://imr.brage.unit./imr-xmlui/bitstream/handle/11250/2408609/FoH_2-2016.pdf?sequence=1&isAllowed=y","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SimData_archive.html","id":"simulating-input-data-from-an-ecosystem-model","dir":"Articles","previous_headings":"","what":"Simulating input data from an ecosystem model","title":"Generating Simulated Data","text":"use existing Atlantis ecosystem model output generate input datasets variety simpler population models, performance models can evaluated known (simulated) ecosystem dynamics. Atlantis models simulate wide range physical ecological processes, include full food web, can run using different climate forcing, fishing, scenarios. extract simulated data using R package atlantisom. purpose atlantisom use existing Atlantis model output generate input datasets variety models, performance models can evaluated known (simulated) ecosystem dynamics. Atlantis models can run using different climate forcing, fishing, scenarios. Users atlantisom able specify fishery independent fishery dependent sampling space time, well species-specific catchability, selectivty, observation processes Atlantis scenario. Internally consistent multispecies ecosystem datasets known observation error characteristics atlantisom outputs, use individual model performance testing, comparing performance alternative models, performance testing model ensembles “true” Atlantis outputs.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SimData_archive.html","id":"species-in-the-ms-keyrun-dataset","dir":"Articles","previous_headings":"","what":"Species in the ms-keyrun dataset","title":"Generating Simulated Data","text":"initial species selection includes 11 single species groups Atlantis NOBA model. double check survey census outputs true values, test survey specifications may reasonable multispecies model testing. Finally apply survey functions detailed diet data.","code":"#fgs <- load_fgs(here(\"simulated-data/atlantisoutput/NOBA_March_2020\"), \"nordic_groups_v04.csv\")  lname <- data.frame(Name= c(\"Long_rough_dab\",                                  \"Green_halibut\",                                  \"Mackerel\",                                  \"Haddock\",                                  \"Saithe\",                                  \"Redfish\",                                  \"Blue_whiting\",                                  \"Norwegian_ssh\",                                  \"North_atl_cod\",                                  \"Polar_cod\",                                  \"Capelin\"),                     Long.Name = c(\"Long rogh dab\",                                  \"Greenland halibut\",                                  \"Mackerel\",                                  \"Haddock\",                                  \"Saithe\",                                  \"Redfish\",                                  \"Blue whiting\",                                  \"Norwegian spring spawning herring\",                                  \"Northeast Atlantic Cod\",                                  \"Polar cod\",                                  \"Capelin\"),                     Latin = c(\"*Hippoglossoides platessoides*\",                               \"*Reinhardtius hippoglossoides*\",                               \"*Scomber scombrus*\",                               \"*Melongrammus aeglefinus*\",                               \"*Pollachius virens*\",                               \"*Sebastes mentella*\",                               \"*Micromesistius poutassou*\",                               \"*Clupea harengus*\",                               \"*Gadus morhua*\",                               \"*Boreogadus saida*\",                               \"*Mallotus villosus*\"),                     Code = c(\"LRD\", \"GRH\", \"MAC\", \"HAD\", \"SAI\", \"RED\",                               \"BWH\", \"SSH\", \"NCO\", \"PCO\", \"CAP\") )  # sppsubset <- merge(fgs, lname, all.y = TRUE) # spptable <- sppsubset %>%  #   arrange(Index) %>% #   select(Name, Long.Name, Latin)  spptable <- lname %>%    select(Name, Long.Name, Latin)  knitr::kable(spptable, col.names = c(\"Model name\", \"Full name\", \"Latin name\"))"},{"path":[]},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SimData_archive.html","id":"configuration-files-specified-once","dir":"Articles","previous_headings":"Generating a census dataset (February 2021)","what":"Configuration files specified once","title":"Generating Simulated Data","text":"NOBA2config.R specifies location names files needed atlantisom initialize: omdimensions.R standardizes timesteps, etc. (part atlantisom need changed user):","code":"d.name <- here(\"simulated-data/atlantisoutput\",\"NOBA_march_2020\") functional.groups.file <- \"nordic_groups_v04.csv\" biomass.pools.file <- \"nordic_biol_v23.nc\" biol.prm.file <- \"nordic_biol_incl_harv_v_007_3.prm\" box.file <- \"Nordic02.bgm\" initial.conditions.file <- \"nordic_biol_v23.nc\" run.prm.file <- \"nordic_run_v01.xml\" scenario.name <- \"nordic_runresults_01\" bioind.file <- \"nordic_runresults_01BiomIndx.txt\" catch.file <- \"nordic_runresults_01Catch.txt\" annage <- TRUE fisheries.file <- \"NoBAFisheries.csv\" #survey species inherited from omlist_ss survspp <- omlist_ss$species_ss # survey season and other time dimensioning parameters # generalized timesteps all models noutsteps <- omlist_ss$runpar$tstop/omlist_ss$runpar$outputstep timeall <- c(0:noutsteps) stepperyr <- if(omlist_ss$runpar$outputstepunit==\"days\") 365/omlist_ss$runpar$toutinc midptyr <- round(median(seq(0,stepperyr)))  # model areas, subset in surveyconfig allboxes <- c(0:(omlist_ss$boxpars$nbox - 1))  # fishery output: learned the hard way this can be different from ecosystem outputs fstepperyr <- if(omlist_ss$runpar$outputstepunit==\"days\") 365/omlist_ss$runpar$toutfinc  # survey selectivity (agecl based) sp_age <- omlist_ss$funct.group_ss[, c(\"Name\", \"NumCohorts\", \"NumAgeClassSize\")]  # should return all age classes fully sampled (Atlantis output is 10 age groups per spp) n_age_classes <- sp_age$NumCohorts # changed below for multiple species NOTE survspp alphabetical; NOT in order of fgs!! # this gives correct names age_classes <- lapply(n_age_classes, seq) names(age_classes)<-sp_age$Name  n_annages <- sp_age$NumCohorts * sp_age$NumAgeClassSize # changed below for multiple species annages <- lapply(n_annages, seq) names(annages)<-sp_age$Name"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SimData_archive.html","id":"change-these-survey-and-fishery-config-files","dir":"Articles","previous_headings":"Generating a census dataset (February 2021)","what":"Change these survey and fishery config files","title":"Generating Simulated Data","text":"mssurvey_spring.R mssurvey_fall.R configure fishery independent surveys (census test, surveys sample model polygons years efficiency 1 species, size selectivity): msfishery.R configures fishery dependent data:","code":"# Default survey configuration here has a range of efficiencies and selectivities # To emulate a range of species in a single multispecies survey # Also now happens in \"spring\" and \"fall\" # Need to define survey season, area, efficiency, selectivity  # Survey name survey.name=\"BTS_spring_allbox_effic1\"  #Atlantis model timestep corresponding to the true output--now from census_spec.R timestep <- stepperyr #5  #Which atlantis timestep does the survey run in?--now from census_spec.R # with 5 output steps per year, 0 is Jan-Feb-midMar, 1 is midMar-Apr-May,  # 2 is June-July-midAug, 3 is midAug-Sept-Oct, 4 is Nov-Dec (ish)  # No, timestep 0 is initial condition and should be ignored to align  # snapshots (biomass, numbers) with # cumulative outputs (fishery catch, numbers)  # with 5 output steps per (non leap) year: # 1 is day 73, or 14 March # 2 is day 146, or 26 May # 3 is day 219, or 7 August # 4 is day 292, or 19 October # 5 is day 365, or 31 December  survey_sample_time <- 1 # spring survey  #The last timestep to sample total_sample <- noutsteps-1 #495  #Vector of indices of survey times to pull survey_sample_full <- seq(survey_sample_time,                           total_sample, by=timestep)  survtime <- survey_sample_full  # survey area # should return all model areas survboxes <- allboxes  # survey efficiency (q) # should return a perfectly efficient survey  surveffic <- data.frame(species=survspp,                      efficiency=rep(1.0,length(survspp)))  # survey selectivity (agecl based) # this is by age class, need to change to use with ANNAGEBIO output #survselex <- data.frame(species=rep(names(age_classes), each=n_age_classes), #                     agecl=rep(c(1:n_age_classes),length(survspp)), #                     selex=rep(1.0,length(survspp)*n_age_classes))  # for annage output uses names(annages) NOT alphabetical survspp survselex <- data.frame(species=rep(names(annages), n_annages), #                           agecl=unlist(sapply(n_annages,seq)),                         selex=rep(1.0,sum(n_annages)))  survselex.agecl <- survselex   # effective sample size needed for sample_fish # this effective N is high but not equal to total for numerous groups surveffN <- data.frame(species=survspp, effN=rep(100000, length(survspp)))  # survey index cv needed for sample_survey_xxx # cv = 0.1 surv_cv <- data.frame(species=survspp, cv=rep(0.1,length(survspp)))  # length at age cv for input into calc_age2length function # function designed to take one cv for all species, need to change to pass it a vector lenage_cv <- 0.1  # max size bin for length estimation, function defaults to 150 cm if not supplied maxbin <- 200  # diet sampling parameters alphamult <- 10000000 unidprey <- 0 # Default survey configuration here has a range of efficiencies and selectivities # To emulate a range of species in a single multispecies survey # Also now happens in \"spring\" and \"fall\" # Need to define survey season, area, efficiency, selectivity  # Survey name survey.name=\"BTS_fall_allbox_effic1\"  #Atlantis model timestep corresponding to the true output--now from census_spec.R timestep <- stepperyr #5  #Which atlantis timestep does the survey run in?--now from census_spec.R # with 5 output steps per year, 0 is Jan-Feb-midMar, 1 is midMar-Apr-May,  # 2 is June-July-midAug, 3 is midAug-Sept-Oct, 4 is Nov-Dec (ish)  # No, timestep 0 is initial condition and should be ignored to align  # snapshots (biomass, numbers) with # cumulative outputs (fishery catch, numbers)  # with 5 output steps per (non leap) year: # 1 is day 73, or 14 March # 2 is day 146, or 26 May # 3 is day 219, or 7 August # 4 is day 292, or 19 October # 5 is day 365, or 31 December  survey_sample_time <- 3 # fall survey  #The last timestep to sample total_sample <- noutsteps-1 #495  #Vector of indices of survey times to pull survey_sample_full <- seq(survey_sample_time,                           total_sample, by=timestep)  survtime <- survey_sample_full  # survey area # should return all model areas survboxes <- allboxes  # survey efficiency (q) # should return a perfectly efficient survey  surveffic <- data.frame(species=survspp,                      efficiency=rep(1.0,length(survspp)))  # survey selectivity (agecl based) # this is by age class, need to change to use with ANNAGEBIO output #survselex <- data.frame(species=rep(survspp, each=n_age_classes), #                     agecl=rep(c(1:n_age_classes),length(survspp)), #                     selex=rep(1.0,length(survspp)*n_age_classes))  # for annage output survselex <- data.frame(species=rep(names(annages), n_annages), #                           agecl=unlist(sapply(n_annages,seq)),                         selex=rep(1.0,sum(n_annages)))  survselex.agecl <- survselex    # effective sample size needed for sample_fish # this effective N is high but not equal to total for numerous groups surveffN <- data.frame(species=survspp, effN=rep(100000, length(survspp)))  # survey index cv needed for sample_survey_xxx # cv = 0.1 surv_cv <- data.frame(species=survspp, cv=rep(0.1,length(survspp)))  # length at age cv for input into calc_age2length function # function designed to take one cv for all species, need to change to pass it a vector lenage_cv <- 0.1  # max size bin for length estimation, function defaults to 150 cm if not supplied maxbin <- 200  # diet sampling parameters alphamult <- 10000000 unidprey <- 0 # Default fishery configuration here is a census fishery.name=\"census\"  # Inherits species from input omlist_ss fishspp <- omlist_ss$species_ss   #Number of years of data to pull nyears <- 50  #Atlantis initialization period in years burnin <- 30  # fishery output: learned the hard way this can be different from ecosystem outputs fstepperyr <- if(omlist_ss$runpar$outputstepunit==\"days\") 365/omlist_ss$runpar$toutfinc   # same time dimensioning parameters as in surveycensus.R #Vector of indices of catch in numbers to pull (by timestep to sum) fish_sample_full <- c(0:total_sample)  #total_sample defined in sardinesurvey.R fish_burnin <- burnin*fstepperyr+1 fish_nyears <- nyears*fstepperyr fish_times <- fish_sample_full[fish_burnin:(fish_burnin+fish_nyears-1)] fish_timesteps <- seq(fish_times[fstepperyr], max(fish_times), by=fstepperyr) #last timestep #fish_years <- unique(floor(fish_times/fstepperyr)+1) # my original fish_years <- unique(floor(fish_times/fstepperyr)) #from Christine's new sardine_config.R  fishtime <- fish_times   # fishery sampling area # should return all model areas, this assumes you see everything that it caught fishboxes <- c(0:(omlist_ss$boxpars$nbox - 1))  # effective sample size needed for sample_fish # this effective N is divided by the number of annual timesteps below, so 200 per time # use as input to the length samples, ages can be a subset fisheffN <- data.frame(species=survspp, effN=rep(1000, length(survspp)))  #this adjusts for subannual fishery output so original effN is for whole year fisheffN$effN <- fisheffN$effN/fstepperyr   # fishery catch cv can be used in sample_survey_biomass # perfect observation fish_cv <- data.frame(species=survspp, cv=rep(0.01,length(survspp)))"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SimData_archive.html","id":"run-atlantisom-and-save-outputs","dir":"Articles","previous_headings":"Generating a census dataset (February 2021)","what":"Run atlantisom and save outputs","title":"Generating Simulated Data","text":"True datasets generated follows, using atlantisom wrapper functions om_init assemble initial true atlantis data, om_species subset true data desired species, om_index generate survey biomass total catch biomass indices, om_comps generate age length compositions average weight age surveys fisheries, om_diet generate diet surveys. Outputs saved atlantisoutput folder (kept github due size):","code":"NOBAom <- om_init(here(\"simulated-data/config/NOBA2Config.R\"))  NOBAom_ms <- om_species(sppsubset$Name, NOBAom)  #need to change internal call to source in atlantisom om_index om_comps and om_diet functions #expecting a config folder in same directory as rmd #this is a workaround  dir.create(file.path(here(\"docs/config\")))  file.copy(here(\"simulated-data/config/omdimensions.R\"), here(\"docs/config/omdimensions.R\"))  NOBAom_ms_ind <- om_index(usersurvey = c(here(\"simulated-data/config/mssurvey_spring.R\"),                                           here(\"simulated-data/config/mssurvey_fall.R\")),                             userfishery = here(\"simulated-data/config/msfishery.R\"),                            omlist_ss = NOBAom_ms,                             n_reps = 1,                             save = TRUE)  NOBAom_ms_comp <- om_comps(usersurvey = c(here(\"simulated-data/config/mssurvey_spring.R\"),                                           here(\"simulated-data/config/mssurvey_fall.R\")),                             userfishery = here(\"simulated-data/config/msfishery.R\"),                            omlist_ss = NOBAom_ms,                             n_reps = 1,                             save = TRUE)  NOBAom_ms_diet <- om_diet(config = here(\"simulated-data/config\", \"NOBA2config.R\"),                           dietfile = \"NOBADetDiet.gz\",                           usersurvey = c(here(\"simulated-data/config/mssurvey_spring.R\"),                                           here(\"simulated-data/config/mssurvey_fall.R\")),                            omlist_ss = NOBAom_ms,                            n_reps = 1,                            save = TRUE)  unlink(here(\"docs/config\"), recursive = TRUE)"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SimData_archive.html","id":"write-to-model-input-files","dir":"Articles","previous_headings":"Generating a census dataset (February 2021)","what":"Write to model input files","title":"Generating Simulated Data","text":"goal reproducible process aspects data generation model inputs. section gives examples input datasets built. Now simulated data included mskeyrun data package, data inputs derived sources.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SimData_archive.html","id":"multispecies-surplus-production-model-msspm","dir":"Articles","previous_headings":"Generating a census dataset (February 2021) > Write to model input files","what":"Multispecies surplus production model (MSSPM)","title":"Generating Simulated Data","text":"Example input files model-input-files directory. First write fairly simple biomass catch inputs multispecies surplus production model MSSPM census survey outputs. MSSPM needs diet compostion information well. supply two survey time series diet data, one census trial survey dataset typical survey coverage issues. Diet composition predator age class time (unit=time.days) proportion (sums 1 time). get species diet composition aggregating age classes (weight diet composition age true biomass age).","code":"o.name <- here(\"simulated-data/msinput/msspm/\")  stepperyr <- if(NOBAom_ms$runpar$outputstepunit==\"days\") 365/NOBAom_ms$runpar$toutinc  #read in survey biomass data survObsBiom <- read_savedsurvs(d.name, 'survB') #reads in all surveys  #multiple surveys named in list object, use as filename for(s in names(survObsBiom)){   #arrange into wide format: year, Species1, Species2 ... and write csv   svbio <- survObsBiom[[s]][[1]] %>%     #calc_timestep2time(d.name, ., run.prm.file) %>% #this gives an arbitrary start year of 1970     dplyr::mutate(year = ceiling(time/stepperyr)) %>%     dplyr::select(species, year, atoutput) %>%     tidyr::spread(species, atoutput) %>%     write_csv(paste0(o.name,s,\".csv\")) }  #read in catch data read_savedfisheries <- function(dir, type){    datlook <- data.frame(dattype = c('Catch', 'catchAge', 'catchLen', 'catchWtage', 'catchAnnAge', 'catchAnnWtage'),                         pattern = c(\"*fishCatch.rds\", \"*fishObsAgeComp.rds\", \"*fishObsLenComp.rds\", \"*fishObsWtAtAge.rds\",                                     \"*fishObsFullAgeComp.rds\", \"*fishObsFullWtAtAge.rds\"))    fisheries <- list.files(path=dir, pattern = as.character(datlook$pattern[datlook$dattype %in% type]), full.names = TRUE)    fishery.name <-  str_match(fisheries, paste0(scenario.name,\"_\\\\s*(.*?)\\\\s\",datlook$pattern[datlook$dattype==type]))[,2]    dat <- lapply(fisheries, readRDS)    names(dat) <- fishery.name    return(dat) }  catchbio_ss <- read_savedfisheries(d.name, 'Catch')  for(c in names(catchbio_ss)){   #arrange into wide format: year, Species1, Species2 ... and write csv   catchbio <- catchbio_ss[[c]][[1]] %>%     dplyr::mutate(year = time/365) %>%     dplyr::select(species, year, atoutput) %>%     tidyr::spread(species, atoutput) %>%     write_csv(paste0(o.name,\"fishery_\",c,\".csv\")) }  #write readme for metadata meta <- c(\"Simulated data from Norweigan-Barents Atlantis Model by Hansen et al. \\n\\n\",           paste(\"Atlantis outputs stored in\", d.name, '\\n\\n'),           paste(\"Biomass output for surveys\", names(survObsBiom), '\\n\\n'),           paste(\"Fishery catch output for fisheries\", names(catchbio_ss), '\\n\\n'),           \"Biomass and catch output units are annual tons.\\n\\n\",           \"Survey specifications:\\n\",           \"----------------------\\n\",           read_file(here(\"/simulated-data/config/mssurvey_fall.R\")),           \"\\n\",           \"----------------------\\n\",           read_file(here(\"/simulated-data/config/mssurvey_spring.R\")),           \"\\n\",           \"----------------------\\n\",           read_file(here(\"/simulated-data/config/mssurvey_fall_01.R\")),           \"\\n\",           \"----------------------\\n\",           read_file(here(\"/simulated-data/config/mssurvey_spring_01.R\")),           \"\\n\\n\",           \"Fishery specifications:\\n\",           \"----------------------\\n\",           read_file(here(\"/simulated-data/config/msfishery.R\")),           \"\\n\",           \"----------------------\\n\",           read_file(here(\"/simulated-data/config/msfishery_01.R\")),           \"\\n\"           )  cat(as.character(meta), file=paste0(here(\"simulated-data/msinput/msspm/\"),\"README.txt\")) source(here(\"simulated-data/config/NOBA2Config.R\"))  all_diets <- read_savedsurvs(d.name, 'survDiet')  # divide time.days by runpar$toutinc to match time in biomass # aggregate over ages using true biomass at age (survey diet is in proportion by age)  NOBAom_ms <- readRDS(file.path(d.name, paste0(scenario.name, \"omlist_ss.rds\")))  trueB_age_allbox <- NOBAom_ms$truebio_ss %>%   #sum over polygons   #aggregate(dat$atoutput,list(dat$species,dat$agecl,dat$time, dat$prey),sum)   group_by(species,agecl,time) %>%   summarise(trueBatage = sum(atoutput))  trueB <- trueB_age_allbox %>%   group_by(species, time) %>%   summarise(trueB = sum(trueBatage))    trueBagecl <- merge(trueB_age_allbox, trueB)  #multiple surveys named in list object, use as filename for(s in names(all_diets)){   #arrange into wide format: year, Species1, Species2 ... and write csv   svdiet <- all_diets[[s]][[1]] %>%     #calc_timestep2time(d.name, ., run.prm.file) %>% #this gives an arbitrary start year of 1970     dplyr::mutate(time = time.days/NOBAom_ms$runpar$toutinc) %>%     dplyr::left_join(., trueBagecl) %>%     dplyr::mutate(dietBwt = dietSamp*trueBatage) %>%     dplyr::group_by(species,time,prey,trueB) %>%     dplyr::summarise(totdietBwt = sum(dietBwt)) %>%     dplyr::mutate(totdietComp = totdietBwt/trueB) %>%     dplyr::mutate(year = ceiling(time/stepperyr)) %>%     dplyr::ungroup() %>%     dplyr::select(year, species, prey, totdietComp) %>%     write_csv(paste0(o.name,\"diet_\",s,\".csv\")) }"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SimData_archive.html","id":"length-structured-multispecies-model-hydra","dir":"Articles","previous_headings":"Generating a census dataset (February 2021) > Write to model input files","what":"Length-structured multispecies model (Hydra)","title":"Generating Simulated Data","text":"Note old method preserved history, now Hydra inputs coming directly mskeyrun. Much code formed basis functions build mskeyrun simulated data objects, now mskeyrun\\data-raw\\R length-based model hydra, can write .csv files used input hydradata package, writes .dat .pin files. Hydra needs survey biomass time series, catch time series, survey length composition, fishery length composition, diet composition data. Observations biomass catch similar created MMSPM. Hydra inputs need species order dataset, first make species file input data can come straight Atlantis. Decisions size bins hydra: keep 5 bins per species now, build flexibility allocate size data number bins definitions. Species specific bin width definitions input model, refined (smaller) bin sizes rapid growth phases. Initially, ’ll directly transfer bin widths GB NOBA common species: Aherring = Norwegian_ssh Acod = North_atl_cod (max size bigger simulated data, may need increase last bin) haddock = Haddock (max size bigger simulated data, may need increase last bin) Amackerel = Mackerel. (note, mackerel smaller bin widths fast early growth?) substitute bin widths similar taxa/size GB species NOBA: silverhake ~ Blue_whiting yellowtailfl ~ Long_rough_dab .k.. American plaice modify subsitute bin widths rest NOBA species based size: NOBA Redfish maximum size 47 cm, use 5 x 10 cm bins NOBA Saithe maximum size 130 cm; use goosefish bins NOBA Polar_cod maximum size 25 cm; use 5 x 5 cm bins NOBA Capelin smaller GB modeled species, max size 21 cm; use 5 x 5 cm bins NOBA Green_halibut large, max size 120 cm; use Acod bins Code make sizebins csv input; hardcoded based decisions. decisions matching species can carry life history parameters, least initially. Need fit growth maturity parameters Atlantis output input hydra. Fit growth using code , based package FSA [@ogle-fsa-2021]. package provides multiple ways get starting values R nls function fitting nonlinear models. necessary try several different methods starting values get least one von Bertalannfy growth parameter set species. scratch code block shows experiments get fitting working resulted function fit surveys. Note spring surveys don’t get mackerel (model domain ). full set von B parameters estimated first era versions fall survey tested . code block experiments different fits different ways splice length age data. Generating length composition input data requires mapping numbers length atlantisom 1 cm bin length output selected length bins, summing numbers length bins species. input required 4d array, indexed survey, species, year, sizebin. survey can separate csv #species top year rows sizebin columns n length values, scrolling species. Arrange lengths appropriate bins: first pass current bins results lengths smallest bin species. suggests need change binwidths possibly number bins optimize length fitting. Perhaps larger first bin don’t start 0? Consider function using species max size, vonB k desired number bins consistency easily change Nsizebins. function , 5 bins don’t like works, allocating smaller bins smallest sizes don’t observe aggregating many lengths one large bin. Therefore simplest approach equal sized bins (max observed length/desired number bins). try length comps. Reran lendat code block make survey-specific length input files new equal sized bins. Now write input files Gavin’s format surveys together one file. Note just test. folder two different survey two different fishery configurations; independent. Also, fishery catch currently separated fleets. wouldn’t use input file. Also add fishery length comps: Stomach weights needed input hydra. present species stomach weight size bin repeated year. total consumed weight predator age class timestep detailed diet atlantis output, need map age classes length bins, sum consumed weight length bin divide total numbers length bin get stomach weight. saved far diet comp proportion bias observation error added proportions. However, need stomach weight portion equation, survey timing/area/efficiency/selectivity applied true consumed weight. hydra input mean daily stomach weight grams. Atlantis manual, “DetailedDietCheck.txt returns total consumed biomass since last output given cell (box layer) age group functional group.” daily per capita consumed biomass output, summed prey total consumption, divided numbers survey design, divided output step omlist_ss$runpar$outputstep. also plan fit time series prey proportions predator size class. Gavin suggests input format similar survey lengths. Diet output surveys predator agecl need fit recruitment? May just need average recriutment starting values, can get atlantis. Maturity parameters needed SSB calculation SSB-based recruitment. fit average recruitment annual deviations, don’t need SSB, maturity recruitment inputs dummy parameters now. Survey catch datasets hydra NOBA (methods MSSPM). Make function takes output directory name output names arguments. Survey catch datasets Gavin’s suggested format (surveys together, fleets together). , note just test. folder two different survey two different fishery configurations; independent. Also, fishery catch currently separated fleets. wouldn’t use input file. Output temperature data surveys using “Temp” variable .nc file atlantisom::load_nc_physics function. survey (timestep, polygons, possibly observation error) can applied output. can get surface bottom temp Atlantis using layers polygon, layer 0 bottom maximum layer polygon surface (according Atlantis wiki/Atlantis output files/Atlantis NetCDF structure.","code":"# foodweb and species file identify predators and prey; take from true atlantis diet comp diettrue <- load_diet_comp(here(\"simulated-data/atlantisoutput/NOBA_march_2020\"),                             \"nordic_runresults_01DietCheck.txt\", fgs = fgs) ms_diet <- diettrue %>%   filter(species %in% sppsubset$Name) %>%   filter(atoutput>0) %>%   mutate(species = as.character(species),          prey = as.character(prey))  predPrey <- ms_diet %>%   filter(prey %in% unique(species)) %>%   select(species, agecl, time.days, prey, atoutput) %>%   group_by(species, prey) %>%   summarise(avgpreyprop = mean(atoutput))  foodweb <- left_join(sppsubset, predPrey, by=c(\"Name\" = \"species\")) %>%   select(species, prey, avgpreyprop) %>%   mutate(avgpreyprop = ceiling(avgpreyprop)) %>%   spread(species, avgpreyprop) %>%   filter(!is.na(prey)) %>%   replace(is.na(.), 0)    predOrPrey <- ifelse(colSums(foodweb[-1])>0, 1, 0)  specieslist <- data.frame(species = unique(unique(survObsBiom[[2]][[1]]$species)),                           guild = rep(\"na\"),                           guildmember = c(1:11),                           predOrPrey = predOrPrey )  # take lenwt parameters from true atlantis pars lenwtpar <-  left_join(sppsubset, NOBAom_ms$biol$wl, by=c(\"Code\" = \"group\")) %>%   select(Name, a, b) %>%   arrange(Name)  # fixed parameters: # intake same for all teleosts intakespp  <- rbind(species = sort.default(sppsubset$Name),                     alpha = rep(0.004),                     beta = rep(0.11)) colnames(intakespp) <- intakespp[1,] intakespp <- as.data.frame(intakespp[-1,])  # predator size preference ratio same for all species sizepref <- rbind(species = sort.default(sppsubset$Name),                   mu = rep(0.5),                   sigma = rep(2)) colnames(sizepref) <- sizepref[1,] sizepref <- as.data.frame(sizepref[-1,])  # dimensions for singletons file singletons <- data.frame(   debug=3,   Nyrs=NOBAom_ms$runpar$nyears, #may want to take from survey time series instead   Nspecies=length(sppsubset$Name),   Nsizebins=5,   Nareas=1,   Nfleets=length(unique(NOBAom_ms$truecatchage_ss$fleet)),   Nsurveys=2,   wtconv=1,   yr1Nphase=0,   recphase=0,   avg_rec_phase=0,   avg_F_phase=0,   dev_rec_phase=0,   dev_F_phase=0,   fqphase=0,   sqphase=0,   ssig_phase=0,   csig_phase=0,   phimax=1,   scaleInitialN=1,   otherFood=0000,   LFI_size=60,   bandwidth_metric=5,   assessmentPeriod=3,   flagMSE=0,   flagLinearRamp=1,   baseline_threshold=0.2 )  # M1 same for all species, depends on n length bins # to get annual M1 of 0.1, this matrix needs to be M1 per timestep # right now input works for 5 timesteps per year, but should be  # done in the code with input annual M1 in case timestep changes M1mat <- matrix(0.02, singletons$Nspecies, singletons$Nsizebins,                  dimnames = list(c(sort.default(sppsubset$Name)),  c(paste0(\"sizeclass\",seq(1:singletons$Nsizebins)))))  M1 <- as.data.frame(M1mat)  # sexratio fixed 50:50 for all species sexratio <- matrix(0.5, 1, singletons$Nspecies,                    dimnames = list(\"ratio\", c(sort.default(sppsubset$Name))))   # placeholders for unused covariates dimenstioned to the number of simulated years dummycovar <- data.frame(dummy1 = rep(1, NOBAom_ms$runpar$nyears))  # placeholder for effort data dimensioned by year and nfleets allfleets <- atlantisom::load_fisheries(d.name, fisheries.file) fleets <- unique(NOBAom_ms$truecatchage_ss$fleet)  dummyeffort <- data.frame(1:singletons$Nyrs,                           matrix(1, singletons$Nyrs, singletons$Nfleets)) names(dummyeffort) <- c(\"year\", fleets)  # will need to fit von B and maturity curve functions to back out hydra input pars # maturity from maturity ogive input in biol file # growth functions from length at age in model...  # write the csvs o.name <- here(\"simulated-data/msinput/hydra/\") write_csv(foodweb, paste0(o.name,\"foodweb_NOBA.csv\")) write_csv(specieslist, paste0(o.name,\"speciesList_NOBA.csv\")) write_csv(lenwtpar, paste0(o.name,\"lengthweight_species_NOBA.csv\")) write.csv(intakespp, paste0(o.name,\"intake_species_NOBA.csv\")) write.csv(sizepref, paste0(o.name,\"mortality_M2sizePreference_NOBA.csv\")) write.table(t(singletons), paste0(o.name,\"singletons_NOBA.csv\"), sep=\",\",  col.names=FALSE) write.csv(M1, paste0(o.name,\"mortality_M1_NOBA.csv\")) write_csv(dummycovar, paste0(o.name,\"recruitment_covariates_NOBA.csv\")) write_csv(dummycovar, paste0(o.name,\"maturity_covariates_NOBA.csv\")) write_csv(dummycovar, paste0(o.name,\"growth_covariates_NOBA.csv\")) write_csv(dummyeffort, paste0(o.name,\"observation_effort_NOBA.csv\")) write.csv(sexratio, paste0(o.name,\"sexratio_NOBA.csv\")) # for reference, GB hydra_sim size bins # sizeclass1,sizeclass2,sizeclass3,sizeclass4,sizeclass5,commentField-notused # 20,20,20,20,30,spinydog # 20,20,20,20,40,winterskate # 5,5,5,5,20,Aherring # 20,20,20,40,50,Acod # 10,10,20,20,20,haddock # 10,10,10,10,20,yellowtailfl # 10,10,10,10,10,winterfl # 10,10,10,10,10,Amackerel # 10,10,10,10,30,silverhake # 20,20,20,30,40,goosefish  sizebinmat <- matrix(0, singletons$Nspecies, singletons$Nsizebins,                  dimnames = list(c(sort.default(sppsubset$Name)),  c(paste0(\"sizeclass\",seq(1:singletons$Nsizebins)))))  sizebinmat[\"Blue_whiting\",] <- c(10,10,10,10,30) sizebinmat[\"Capelin\",] <- c(5,5,5,5,5) sizebinmat[\"Green_halibut\",] <- c(20,20,20,40,50) sizebinmat[\"Haddock\",] <- c(10,10,20,20,20) sizebinmat[\"Long_rough_dab\",] <- c(10,10,10,10,20) sizebinmat[\"Mackerel\",] <- c(10,10,10,10,10) sizebinmat[\"North_atl_cod\",] <- c(20,20,20,40,50) sizebinmat[\"Norwegian_ssh\",] <- c(5,5,5,5,20) sizebinmat[\"Polar_cod\",] <- c(5,5,5,5,5) sizebinmat[\"Redfish\",] <- c(10,10,10,10,10) sizebinmat[\"Saithe\",] <- c(20,20,20,30,40)  sizebins <- as.data.frame(sizebinmat) %>%   mutate('commentField-notused' = rownames(sizebinmat))                          write_csv(sizebins, paste0(o.name,\"length_sizebins_NOBA.csv\")) sp_age <- NOBAom_ms$funct.group_ss[, c(\"Name\", \"NumCohorts\", \"NumAgeClassSize\")] sp_age <- sp_age %>%   mutate(n_annages = NumCohorts * NumAgeClassSize)   stepperyr <- if(NOBAom_ms$runpar$outputstepunit==\"days\") 365/NOBAom_ms$runpar$toutinc   # need growth, vonB t0, K, and Linf and simple growth function # would you really base this on 140 years of data? I used all survey years   len_comp_data <- read_savedsurvs(d.name, 'survLen')  # need to shift agecl to represent midpoint of actual age groups # using part of the wtage interpolation function calc_avgwtstage2age() annage_comp_data <- read_savedsurvs(d.name, 'survAnnAge')    vb1 <- vbFuns() # VBGF packages all take age and length pairs, reformat from length comp at agecl # break into 3 chunks of time, \"era\" 48 years each more like our survey # subsample after reformatting with uncount because we wouldn't have this many ages  #multiple surveys named in list object, use as filename for(s in names(len_comp_data)){      annages <- annage_comp_data[[s]][[1]] %>%     group_by(species, time, agecl) %>%     rename(trueage = agecl) %>%     summarise(truenatage = sum(atoutput))        # Figure out the groups that have multiple ages classes in each stage (or   # cohort)   multiple_ages <- sp_age[sp_age$NumAgeClassSize>1,]      # finds the average age of each agecl each timestep based on truenatage   svlen_avgage <- annages %>%     dplyr::semi_join(len_comp_data[[s]][[1]], by = c(\"species\", \"time\")) %>%     dplyr::inner_join(multiple_ages, by = c(\"species\" = \"Name\")) %>%     dplyr::mutate(agecl = as.integer(ceiling(trueage/NumAgeClassSize))) %>%     dplyr::group_by(species, time, agecl) %>%     dplyr::mutate(avgage = weighted.mean(trueage, truenatage))     #arrange into long format: year, Species, agecl, length    svlenage <- len_comp_data[[s]][[1]] %>%     dplyr::left_join(svlen_avgage) %>%     dplyr::mutate(year = ceiling(time/stepperyr)) %>%     dplyr::select(species, agecl, avgage, year, upper.bins, atoutput) %>%     dplyr::mutate(avgage = coalesce(avgage,agecl)) %>%     dplyr::rename(length = upper.bins) %>%     dplyr::mutate(era = as.numeric(cut_number(year,3))) %>%     tidyr::uncount(atoutput) %>%     dplyr::group_by(species, avgage, year) %>%     dplyr::sample_frac(0.01)       saveRDS(svlenage, file.path(d.name, paste0(scenario.name, \"_\",                                                        s, \"agelensamp.rds\"))) # } #  #   # read saved sample from above #   survs <- list.files(path=d.name, pattern = \"agelensamp.rds\", full.names = TRUE) #  #   survname <-  str_match(survs, paste0(scenario.name,\"_\\\\s*(.*?)\\\\s\",\"*agelensamp.rds\"))[,2] #  #   agelensamp_data <- lapply(survs, readRDS) #  #   names(agelensamp_data) <- survname #  #  # for(s in names(agelensamp_data)){    # try different start points to see if we can get more species fit   # this one goes to 11!   # need because group_map doesn't keep group names   gk <- svlenage %>%     group_by(species, era) %>%     group_keys()      svvbgf3.2 <- svlenage %>%        dplyr::group_by(species, era) %>%     group_map(~try(nls(length~vb1(avgage, Linf, K, t0), data = .,                        start = vbStarts(length~avgage,data = .,methLinf=\"longFish\"))))      #this gets exponential growth pars, probably won't use this growth mod though   svexp3 <- svlenage %>%     dplyr::group_by(species, era) %>%     group_modify(~ broom::tidy(lm(log(length) ~ log(avgage), data = .x))) %>%     select(species, era, term, estimate) %>%     pivot_wider(names_from = \"term\", values_from = \"estimate\") %>%     mutate(psi = exp(`(Intercept)`)) %>%     rename(kappa = `log(avgage)`) %>%     select(species, era, kappa, psi)        vbout.2 <- data.frame()    for(i in 1:length(svvbgf3.2)) {     if(is.list(svvbgf3.2[[i]])) {       spe <- cbind(as.data.frame(gk)[i,], as.data.frame(t(coef(svvbgf3.2[[i]]))))       vbout.2 <- rbind(vbout.2, spe)     }   }      growthpars <- left_join(svexp3, vbout.2) %>%     mutate(growthType = case_when(       is.na(Linf) ~ 2,       TRUE ~ 4)) # vonB default, exponential if no vonB      # sadly doesn't work so just make a csv for each era and use the one with most spp   # maxera <- growthpars %>%    #   filter(!is.na(Linf)) %>%    #   group_by(era) %>%    #   tally() %>%   #   filter(n==1) %>%   #   select(era)      growthspp <- growthpars %>%     select(species, psi, kappa, Linf, K, growthType) %>%     pivot_longer(psi:growthType, names_to = \"par\") %>%     pivot_wider(names_from = species,                  values_from = value)       growthspp.era <- split(growthspp, list(growthspp$era))       for(era in names(growthspp.era)) {     gpar <- growthspp.era[[era]] %>%       ungroup()%>%       select(-era) %>%       remove_rownames() %>%        column_to_rownames(var=\"par\") %>%       write.csv(paste0(o.name,\"growth_species_NOBA_era\",era,\"_\",s,\".csv\"))        }    } capelinvbgf <- svlenage %>%     filter(species == \"Capelin\") %>%     group_by(era) %>%     group_map(try(~nls(length~vb1(avgage, Linf, K, t0), data = .,                   start = vbStarts(length~avgage,data = .))))      capelinall <- svlenage %>% filter(species == \"Capelin\")   plot(length~avgage,data=capelinall,pch=19,col=rgb(0,0,0,1/5))   curve(vb1(x,Linf=coef(capelinvbgf[[1]])),from=0,to=5,col=\"red\",lwd=2,add=TRUE)   curve(vb1(x,Linf=coef(capelinvbgf[[2]])),from=0,to=5,col=\"blue\",lwd=2,add=TRUE)   curve(vb1(x,Linf=coef(capelinvbgf[[3]])),from=0,to=5,col=\"green\",lwd=2,add=TRUE)      # herringvbgf <- svlenage %>%   #   filter(species == \"Norweigan_ssh\", era==1) %>%   #   group_map(try(~nls(length~vb1(avgage, Linf, K, t0), data = .,   #                 start = vbStarts(length~avgage,data = .))))       #Error in nls(length ~ vb1(avgage, Linf, K, t0), data = ., start = vbStarts(length ~  :    #singular gradient with group_map, era 2 and 3   codvbgf <- svlenage %>%     filter(species == \"North_atl_cod\")      #group_by(era) %>%     codfit <- nls(length~vb1(avgage, Linf, K, t0), data = codvbgf,                   start = vbStarts(length~avgage,data = codvbgf))          plot(length~avgage,data=codvbgf,pch=19,col=rgb(0,0,0,1/5))     curve(vb1(x,Linf=coef(codfit)),from=0,to=20,col=\"red\",lwd=2,add=TRUE) #  era==1   Nonlinear regression model #   model: length ~ vb1(avgage, Linf, K, t0) #    data: codvbgf #     Linf        K       t0  # 104.7120   0.4260   0.2176  #  residual sum-of-squares: 4109723 #  # Number of iterations to convergence: 7  # Achieved convergence tolerance: 2.169e-06      #  all years Nonlinear regression model #   model: length ~ vb1(avgage, Linf, K, t0) #    data: codvbgf #     Linf        K       t0  # 112.4694   0.3912   0.2097  #  residual sum-of-squares: 7354906 #  # Number of iterations to convergence: 11  # Achieved convergence tolerance: 9.964e-06           hadvbgf <- svlenage %>%     filter(species == \"Haddock\")      #group_by(era) %>%   hadfit <- nls(length~vb1(avgage, Linf, K, t0), data = hadvbgf,                   start = vbStarts(length~avgage,data = hadvbgf))      plot(length~avgage,data=hadvbgf,pch=19,col=rgb(0,0,0,1/5))   curve(vb1(x,Linf=coef(hadfit)),from=0,to=20,col=\"red\",lwd=2,add=TRUE)     # all years #     Nonlinear regression model #   model: length ~ vb1(avgage, Linf, K, t0) #    data: hadvbgf #    Linf       K      t0  # 77.0277  0.3601 -0.3546  #  residual sum-of-squares: 15637500 #  # Number of iterations to convergence: 11  # Achieved convergence tolerance: 4.187e-06        redvbgf <- svlenage %>%     filter(species == \"Redfish\")      #group_by(era) %>%        redfit <- nls(length~vb1(avgage, Linf, K, t0), data = redvbgf,                   start = vbStarts(length~avgage,data = redvbgf))      plot(length~avgage,data=redvbgf,pch=19,col=rgb(0,0,0,1/5))   curve(vb1(x,Linf=coef(redfit)),from=0,to=40,col=\"red\",lwd=2,add=TRUE)    #all years # Nonlinear regression model #   model: length ~ vb1(avgage, Linf, K, t0) #    data: redvbgf #    Linf       K      t0  # 40.8016  0.1165 -1.6688  #  residual sum-of-squares: 3197990 #  # Number of iterations to convergence: 13  # Achieved convergence tolerance: 8.316e-06           saithe1 <- svlenage %>%       filter(species==\"Saithe\",              era==1)          saithe1fit <- nls(length~vb1(avgage, Linf, K, t0), data = saithe1,                   start = vbStarts(length~avgage,data = saithe1))          plot(length~avgage,data=saithe1,pch=19,col=rgb(0,0,0,1/5))     curve(vb1(x,Linf=coef(saithe1fit)),from=0,to=20,col=\"red\",lwd=2,add=TRUE) #Nonlinear regression model #   model: length ~ vb1(avgage, Linf, K, t0) #    data: saithe1 #      Linf         K        t0  # 388.18797   0.01975  -3.94798  #  residual sum-of-squares: 5691213 #  # Number of iterations to convergence: 5  # Achieved convergence tolerance: 5.511e-06      #plot len-age data and start values, some are bad   svlenage_pl <- svlenage %>%     group_by(species, era) %>%     group_map(~vbStarts(length~avgage,data=cur_group(),plot=TRUE))     ### full time series fits with different start points         svvbgf <- svlenage %>%        dplyr::group_by(species) %>%     group_map(~try(nls(length~vb1(avgage, Linf, K, t0), data = .,                   start = vbStarts(length~avgage,data = .))))    spk <- svlenage %>%    group_by(species) %>%    group_keys()   vballout <- data.frame()  for(i in 1:length(svvbgf)) {   if(is.list(svvbgf[[i]])) {     sp <- cbind(as.data.frame(spk)[i,], t(coef(svvbgf[[i]])))     vballout <- rbind(vballout, sp)   } }   svvbgf.1 <- svlenage %>%        dplyr::group_by(species) %>%     group_map(~try(nls(length~vb1(avgage, Linf, K, t0), data = .,                   start = vbStarts(length~avgage,data = .,methLinf=\"oldAge\"))))   vballout.1 <- data.frame()  for(i in 1:length(svvbgf.1)) {   if(is.list(svvbgf.1[[i]])) {     sp <- cbind(as.data.frame(spk)[i,], t(coef(svvbgf.1[[i]])))     vballout.1 <- rbind(vballout.1, sp)   } }  svvbgf.2 <- svlenage %>%        dplyr::group_by(species) %>%     group_map(~try(nls(length~vb1(avgage, Linf, K, t0), data = .,                   start = vbStarts(length~avgage,data = .,methLinf=\"longFish\"))))   vballout.2 <- data.frame()  for(i in 1:length(svvbgf.2)) {   if(is.list(svvbgf.2[[i]])) {     sp <- cbind(as.data.frame(spk)[i,], t(coef(svvbgf.2[[i]])))     vballout.2 <- rbind(vballout.2, sp)   } }  ################## by era   gk <- svlenage %>%    group_by(species, era) %>%    group_keys()   svvbgf3 <- svlenage %>%        dplyr::group_by(species, era) %>%     group_map(~try(nls(length~vb1(avgage, Linf, K, t0), data = .,                   start = vbStarts(length~avgage,data = .))))   vbout <- data.frame()  for(i in 1:length(svvbgf3)) {   if(is.list(svvbgf3[[i]])) {     spe <- cbind(as.data.frame(gk)[i,], t(coef(svvbgf3[[i]])))     vbout <- rbind(vbout, spe)   } }  # try different start points to see if we can get more species fit  svvbgf3.1 <- svlenage %>%        dplyr::group_by(species, era) %>%     group_map(~try(nls(length~vb1(avgage, Linf, K, t0), data = .,                   start = vbStarts(length~avgage,data = .,methLinf=\"oldAge\"))))   vbout.1 <- data.frame()  for(i in 1:length(svvbgf3.1)) {   if(is.list(svvbgf3.1[[i]])) {     spe <- cbind(as.data.frame(gk)[i,], t(coef(svvbgf3.1[[i]])))     vbout.1 <- rbind(vbout.1, spe)   } }  # try different start points to see if we can get more species fit # this one goes to 11! svvbgf3.2 <- svlenage %>%        dplyr::group_by(species, era) %>%     group_map(~try(nls(length~vb1(avgage, Linf, K, t0), data = .,                   start = vbStarts(length~avgage,data = .,methLinf=\"longFish\"))))   vbout.2 <- data.frame()  for(i in 1:length(svvbgf3.2)) {   if(is.list(svvbgf3.2[[i]])) {     spe <- cbind(as.data.frame(gk)[i,], t(coef(svvbgf3.2[[i]])))     vbout.2 <- rbind(vbout.2, spe)   } } # rearrange into length bins and write length comp data csvs # modbins from sizebins above, differ by species so need modbin.min and modbin.max # pcumsum is an FSA function  modbins <- sizebins %>%   rename(species = `commentField-notused`) %>%   pivot_longer(!species, names_to = \"sizebin\", values_to = \"binwidth\") %>%   group_by(species) %>%   arrange(sizebin) %>%   mutate(modbin.min = pcumsum(binwidth),          modbin.max = cumsum(binwidth)) %>%   arrange(species, sizebin)   #multiple surveys named in list object, use as filename for(s in names(len_comp_data)){   #arrange into long format: year, Species, agecl, length    svlenbin <- len_comp_data[[s]][[1]] %>%     dplyr::mutate(year = ceiling(time/stepperyr)) %>%     dplyr::select(species, agecl, year, upper.bins, atoutput) %>%     dplyr::left_join(modbins) %>%     dplyr::filter(modbin.min < upper.bins & upper.bins <= modbin.max) %>%     dplyr::group_by(species, year, sizebin) %>%     dplyr::summarise(sumlen = sum(atoutput)) %>%     tidyr::spread(sizebin, sumlen) %>%     write_csv(paste0(o.name,\"observation_lengths_NOBA_\",s,\".csv\")) } # see e.g., https://www.sciencedirect.com/science/article/abs/pii/S0165783619303297 # estimated optimal bin size for VBGF estimation is 0.23 x Lmax ^0.6  # see Ogle citing Schnute and Fornier on K as a growth increment # https://derekogle.com/NCNRS349/modules/Growth/BKG # K exponential rate of approach to asymptotic size # exp(-K) fraction by which growth increment is multiplied each year # at what length is increment*exp(-K) small? group those lengths into bigger bins  # pull observed min and max size from data to optimize start and end bins minmaxlen <- list() # read in saved vonB pars--see if seasons are different and will need a replacement if K wasn't estimated #era <- 1 vonBK <- list() minmaxvonBK <- list() for(s in names(len_comp_data)){   minmaxlendf <- len_comp_data[[s]][[1]] %>%     dplyr::group_by(species) %>%     dplyr::summarise(minlen = min(lower.bins, na.rm = TRUE),                      maxlen = max(upper.bins, na.rm = TRUE),                      range = maxlen-minlen)       for(era in 1:3){   vonBKer <- read.csv(paste0(o.name,\"growth_species_NOBA_era\",era,\"_\",s,\".csv\")) %>%     rename(par = X) %>%     pivot_longer(!par, names_to = \"species\") %>%     pivot_wider(names_from = par,                 names_prefix = era,                 values_from = value) %>%     select(species, paste0(era,\"K\"))      ifelse(era==1,          vonBKdf <- vonBKer,          vonBKdf <- left_join(vonBKdf, vonBKer))   }    minmaxvonBKdf <- left_join(minmaxlendf,vonBKdf)      minmaxlen[[s]] <- minmaxlendf   vonBK[[s]] <- vonBKdf   minmaxvonBK[[s]] <- minmaxvonBKdf  }  # note! # Green_halibut and Saithe have maxlen at 200 in at least one survey,  # may need higher maxlength when running atlantisom comps wrapper, fix survey config files   estbinwidths <- function(Lmax, vonBk, Nsizebins, thresh = 0.05){   #optimal bin size is lower end   binopt <- 0.23*Lmax^0.6      #range gives initial default binwidth, all equal (range/Nbins)   #or should it be max/nbins?   #can use if no K estimated   bindef <- max(1,ceiling(Lmax/Nsizebins))      #minmaxvonBK$BTS_fall_allbox_effic1 %>% group_by(species) %>% mutate(bindef = ceiling(maxlen/5))      #vonBk tells you how many fine bins for fast growth   #low vonBK is doesn't asympote, divide length range equally into nbins?   #high vonBK asympotes quickly,    # threshold cumprod of 0.05 or 0.1 to define last bin? tiny growth increment   # use binopt up to this threshold?    # plot(cumprod(rep(1, 160)*exp(-0.0386)), ylim=c(0,1), xlim=c(0,180)) #saithe   # lines(cumprod(rep(1, 20)*exp(-1.4)), ylim=c(0,1), xlim=c(0,180)) #capelin   # lines(cumprod(rep(1, 40)*exp(-0.163)), ylim=c(0,1), xlim=c(0,180)) #redfish   # lines(cumprod(rep(1, 130)*exp(-0.344)), ylim=c(0,1), xlim=c(0,180)) #cod      lenthresh <- max(which(cumprod(rep(1, Lmax)*exp(-vonBk)) > thresh)) #gives 1 cm increments of fast growth      #put all lengths above this into one big bin,    binwidth.max <- Lmax-lenthresh      #divide lengths below this by thresholds? for min 5 bins, use .5, .3, .2, .1, .05?   # or divide equally into nbins-1 bins? equal may be best   # hightest growth bin will be very small and we won't have fish in it   # dont go smaller than binopt   binwidth.gro <- max(ceiling(binopt), ceiling(lenthresh/(Nsizebins-1)))      #aggregate bins in multiples of optimal for bigger fish/slower growth to get Nsizebins   ifelse(binwidth.max > bindef & binwidth.max < 0.5*Lmax,          binwidths <- c(rep(binwidth.gro, Nsizebins-1), binwidth.max),          binwidths <- rep(bindef, Nsizebins))      return(binwidths)    }  equalbinwidths <- function(Lmax, Nsizebins){   bindef <- max(1,ceiling(Lmax/Nsizebins))   binwidths <- rep(bindef, Nsizebins)   return(binwidths) }  # for fixed bins across surveys find min and max observed lengths   maxLrange <- bind_rows(minmaxvonBK) %>%   group_by(species) %>%   summarise(minminL = min(minlen),             maxmaxL = max(maxlen))    Nsizebins  <-  5  newbins <- maxLrange %>%   group_by(species) %>%   group_modify(~broom::tidy(equalbinwidths(.$maxmaxL, Nsizebins))) %>%   mutate(lb = paste0(\"sizebin\",seq(1:Nsizebins))) %>%   pivot_wider(names_from = lb, values_from = x)  sizebins <- as.data.frame(newbins) %>%   rename('commentField-notused' = species) %>%   relocate('commentField-notused', .after = last_col())                          write_csv(sizebins, paste0(o.name,\"length_sizebins_NOBA.csv\")) modbins <- sizebins %>%   rename(species = `commentField-notused`) %>%   pivot_longer(!species, names_to = \"sizebin\", values_to = \"binwidth\") %>%   group_by(species) %>%   arrange(sizebin) %>%   mutate(modbin.min = pcumsum(binwidth),          modbin.max = cumsum(binwidth)) %>%   arrange(species, sizebin)  allsvlenbin <- tibble()  #multiple surveys named in list object, add to file for(s in names(len_comp_data)){   #arrange into long format: year, Species, agecl, length    svlenbin <- len_comp_data[[s]][[1]] %>%     dplyr::mutate(year = ceiling(time/stepperyr)) %>%     dplyr::select(species, agecl, year, upper.bins, atoutput) %>%     dplyr::left_join(modbins) %>%     dplyr::filter(modbin.min < upper.bins & upper.bins <= modbin.max) %>%     dplyr::group_by(species, year, sizebin) %>%     dplyr::summarise(sumlen = sum(atoutput)) %>%     tidyr::spread(sizebin, sumlen) %>%     ungroup() %>%     dplyr::mutate(inpN = rowSums(.[,-(1:2)], na.rm = TRUE)) %>%     dplyr::mutate(type = 0) %>%     dplyr::mutate(survey = s) %>%     dplyr::mutate_at(vars(contains(\"sizebin\")), ~./inpN) %>%     dplyr::select(survey, year, species, type, inpN, everything())      allsvlenbin <- bind_rows(allsvlenbin, svlenbin) } write_csv(allsvlenbin, paste0(o.name,\"observation_lengths_NOBA_allsurvs.csv\"))  #requires read_savedfisheries function below, add to atlantisom catchlen_ss <- read_savedfisheries(d.name, \"catchLen\")  allfishlenbin <- tibble() for(f in names(catchlen_ss)){   #arrange into long format: year, Species, agecl, length    fishlenbin <- catchlen_ss[[f]][[1]] %>%     dplyr::mutate(year = ceiling(time/stepperyr)) %>%     dplyr::select(species, agecl, year, upper.bins, atoutput) %>%     dplyr::left_join(modbins) %>%     dplyr::filter(modbin.min < upper.bins & upper.bins <= modbin.max) %>%     dplyr::group_by(species, year, sizebin) %>%     dplyr::summarise(sumlen = sum(atoutput)) %>%     tidyr::spread(sizebin, sumlen) %>%     ungroup() %>%     dplyr::mutate(inpN = rowSums(.[,-(1:2)], na.rm = TRUE)) %>%     dplyr::mutate(type = 0) %>%     dplyr::mutate(fishery = f,                   area = 1) %>%     dplyr::mutate_at(vars(contains(\"sizebin\")), ~./inpN) %>%     dplyr::select(fishery, area, year, species, type, inpN, everything()) %>%     dplyr::arrange(fishery, area, species, year)      allfishlenbin <- bind_rows(allfishlenbin, fishlenbin) } write_csv(allfishlenbin, paste0(o.name,\"observation_lengths_NOBA_allfisheries.csv\")) # apply surveys to true total consumption (snipped from atlantosom om_diet.R and om_comps.R) detaileddiet <- readRDS(file.path(d.name, paste0(scenario.name, \"detaileddiet.rds\")))  usersurvey <- c(here(\"simulated-data/config/mssurvey_spring.R\"),                 here(\"simulated-data/config/mssurvey_fall.R\"),                 here(\"simulated-data/config/mssurvey_spring_01.R\"),                 here(\"simulated-data/config/mssurvey_fall_01.R\"))  omlist_ss <- readRDS(file.path(d.name, paste0(scenario.name, \"omlist_ss.rds\")))  source(here(\"simulated-data/config/omdimensions.R\"))  survObsStomWt <- list()  for (s in usersurvey) {   source(s, local = TRUE)      # survtime doesn't match units of time.days in detaileddiet   survtime <- survey_sample_full*omlist_ss$runpar$outputstep      # apply survey design to detailed diet   survey_cons <- create_survey_diet(dat = detaileddiet,                                     time = survtime,                                     species = survspp,                                     boxes = survboxes,                                     effic = surveffic,                                     selex = survselex)      # get numbers at ageclass for same survey design   # note different time units!   survey_N <- atlantisom::create_survey(dat = omlist_ss$truenums_ss,                                         time = survey_sample_full,                                         species = survspp,                                         boxes = survboxes,                                         effic = surveffic,                                         selex = survselex.agecl)      # convert survey N times to cons times in days   survey_N$time <- survey_N$time*omlist_ss$runpar$outputstep      # get rid of polygon   survey_totN <- survey_N %>%     group_by(species, agecl, time) %>%     summarise(totN = sum(atoutput)) %>%     ungroup()      # sum over prey to get total consumption in t, divide by N and timestep, convert to g   survey_totcons <- survey_cons %>%     group_by(species, agecl, time) %>%     summarise(totcons = sum(atoutput)) %>%     ungroup() %>%     left_join(survey_totN) %>%     mutate(percap_cons = totcons/totN) %>%     #mutate(daily_percap_g = percap_cons/omlist_ss$runpar$outputstep*1000000)     mutate(daily_percap_g = percap_cons*1000000) #try assuming cons is snapshot not cumulative since last timestep    #save survey consumption, takes a long time to generate with lots of reps/species   #if(save){   saveRDS(survey_cons, file.path(d.name, paste0(scenario.name, \"_\",                                                 survey.name, \"surveycons.rds\")))   #}      survObsStomWt[[survey.name]] <- survey_cons    }  # map to length bins using surey numbers at agecl in length bins  # #multiple surveys named in list object, use as filename # for(s in names(all_diets)){ #   #arrange into wide format: year, Species1, Species2 ... and write csv #   svdiet <- all_diets[[s]][[1]] %>% #     #calc_timestep2time(d.name, ., run.prm.file) %>% #this gives an arbitrary start year of 1970 #     dplyr::mutate(time = time.days/NOBAom_ms$runpar$toutinc) %>% #     dplyr::left_join(., trueBagecl) %>% #     dplyr::mutate(dietBwt = dietSamp*trueBatage) %>% #     dplyr::group_by(species,time,prey,trueB) %>% #     dplyr::summarise(totdietBwt = sum(dietBwt)) %>% #     dplyr::mutate(totdietComp = totdietBwt/trueB) %>% #     dplyr::mutate(year = ceiling(time/stepperyr)) %>% #     dplyr::ungroup() %>% #     dplyr::select(year, species, prey, totdietComp) %>% #     write_csv(paste0(o.name,\"diet_\",s,\".csv\")) # } # same file as for MSSPM, diet proportion by agecl all_diets <- read_savedsurvs(d.name, 'survDiet')  # get size bins for predators sizebins <- read_csv(paste0(o.name,\"length_sizebins_NOBA.csv\"))  modbins <- sizebins %>%   rename(species = `commentField-notused`) %>%   pivot_longer(!species, names_to = \"sizebin\", values_to = \"binwidth\") %>%   group_by(species) %>%   arrange(sizebin) %>%   mutate(modbin.min = pcumsum(binwidth),          modbin.max = cumsum(binwidth)) %>%   arrange(species, sizebin)  # get Dirichlet alphamults from config files svcon <- list.files(path=here(\"/simulated-data/config/\"), pattern = \"*survey*\", full.names = TRUE)  svalphamultlook <- tibble() for(c in 1:length(svcon)){   source(svcon[c])   svalp <- tibble(     surv_alphamult_n = alphamult,      survey = survey.name   )   svalphamultlook <- bind_rows(svalphamultlook, svalp) }  # diet is by predator agecl, need diet by predator sizebin # map predator agecl to lengthbin using length_comp_data from same survey  allsvdietprop <- tibble()  #multiple surveys named in list object for(s in names(all_diets)){   #arrange into lookup for agecl to lengthbin in numbers of fish    svagelenbin <- len_comp_data[[s]][[1]] %>%     dplyr::mutate(year = ceiling(time/stepperyr)) %>%     dplyr::select(species, agecl, year, upper.bins, atoutput) %>%     dplyr::left_join(modbins) %>%     dplyr::filter(modbin.min < upper.bins & upper.bins <= modbin.max) %>%     dplyr::group_by(species, year, agecl, sizebin) %>%     dplyr::summarise(sumlen = sum(atoutput)) %>%     dplyr::group_by(species, year, sizebin) %>%     dplyr::mutate(propage = sumlen/sum(sumlen)) #proportion of each agecl contributing to lengthbin    svdietprop <- all_diets[[s]][[1]] %>%     dplyr::mutate(year = ceiling(time.days/365)) %>%     # join with agecl to length lookup     dplyr::select(species, agecl, year, prey, dietSamp) %>%     dplyr::left_join(svagelenbin) %>%     dplyr::mutate(dietpropage = dietSamp*propage) %>% #reweight diets for lengthbins     dplyr::group_by(species, year, sizebin, prey) %>%     dplyr::summarise(dietsize = sum(dietpropage)) %>%     dplyr::filter(prey %in% unique(modbins$species)) %>% #drops predators that don't eat our modeled species     tidyr::spread(prey, dietsize) %>%     ungroup() %>%     dplyr::filter(!is.na(sizebin)) %>%      dplyr::mutate(allotherprey = 1-rowSums(.[,-(1:3)], na.rm = TRUE)) %>%     dplyr::mutate(survey = s) %>%     dplyr::left_join(svalphamultlook) %>% #what is effective sample size for Dirichlet?     dplyr::rename(inpN = surv_alphamult_n) %>% #use this input for now     dplyr::select(survey, year, species, sizebin, inpN, everything())      allsvdietprop <- bind_rows(allsvdietprop, svdietprop) } write_csv(allsvdietprop, paste0(o.name,\"observation_diets_NOBA_allsurvs.csv\"))   # # need 2-par maturity curve based on length, atlantis maturity ogive based on age group # or just translate age at 50% maturity to length and call it good? o.name <- here(\"simulated-data/msinput/hydra/\")  stepperyr <- if(NOBAom_ms$runpar$outputstepunit==\"days\") 365/NOBAom_ms$runpar$toutinc  #read in survey biomass data survObsBiom <- read_savedsurvs(d.name, 'survB') #reads in all surveys  #multiple surveys named in list object, use as filename for(s in names(survObsBiom)){   #arrange into wide format: year, Species1, Species2 ... and write csv   svbio <- survObsBiom[[s]][[1]] %>%     #calc_timestep2time(d.name, ., run.prm.file) %>% #this gives an arbitrary start year of 1970     dplyr::mutate(year = ceiling(time/stepperyr)) %>%     dplyr::select(species, year, atoutput) %>%     tidyr::spread(species, atoutput) %>%     write_csv(paste0(o.name,\"observation_biomass_NOBA_\",s,\".csv\")) }  #read in catch data read_savedfisheries <- function(dir, type){    datlook <- data.frame(dattype = c('Catch', 'catchAge', 'catchLen', 'catchWtage', 'catchAnnAge', 'catchAnnWtage'),                         pattern = c(\"*fishCatch.rds\", \"*fishObsAgeComp.rds\", \"*fishObsLenComp.rds\", \"*fishObsWtAtAge.rds\",                                     \"*fishObsFullAgeComp.rds\", \"*fishObsFullWtAtAge.rds\"))    fisheries <- list.files(path=dir, pattern = as.character(datlook$pattern[datlook$dattype %in% type]), full.names = TRUE)    fishery.name <-  str_match(fisheries, paste0(scenario.name,\"_\\\\s*(.*?)\\\\s\",datlook$pattern[datlook$dattype==type]))[,2]    dat <- lapply(fisheries, readRDS)    names(dat) <- fishery.name    return(dat) }  catchbio_ss <- read_savedfisheries(d.name, 'Catch')  for(c in names(catchbio_ss)){   #arrange into wide format: year, Species1, Species2 ... and write csv   catchbio <- catchbio_ss[[c]][[1]] %>%     dplyr::mutate(year = time/365) %>%     dplyr::select(species, year, atoutput) %>%     tidyr::spread(species, atoutput) %>%     write_csv(paste0(o.name,\"observation_catch_NOBA_\",c,\".csv\")) }  #write readme for metadata meta <- c(\"Simulated data from Norweigan-Barents Atlantis Model by Hansen et al. \\n\\n\",           paste(\"Atlantis outputs stored in\", d.name, '\\n\\n'),           paste(\"Biomass output for surveys\", names(survObsBiom), '\\n\\n'),           paste(\"Fishery catch output for fisheries\", names(catchbio_ss), '\\n\\n'),           \"Biomass and catch output units are annual tons.\\n\\n\",           \"Survey specifications:\\n\",           \"----------------------\\n\",           read_file(here(\"/simulated-data/config/mssurvey_fall.R\")),           \"\\n\",           \"----------------------\\n\",           read_file(here(\"/simulated-data/config/mssurvey_spring.R\")),           \"\\n\",           \"----------------------\\n\",           read_file(here(\"/simulated-data/config/mssurvey_fall_01.R\")),           \"\\n\",           \"----------------------\\n\",           read_file(here(\"/simulated-data/config/mssurvey_spring_01.R\")),           \"\\n\\n\",           \"Fishery specifications:\\n\",           \"----------------------\\n\",           read_file(here(\"/simulated-data/config/msfishery.R\")),           \"\\n\",           \"----------------------\\n\",           read_file(here(\"/simulated-data/config/msfishery_01.R\")),           \"\\n\"           )  cat(as.character(meta), file=paste0(here(\"simulated-data/msinput/hydra/\"),\"README.txt\")) #read in survey biomass data survObsBiom <- read_savedsurvs(d.name, 'survB') #reads in all surveys  # get cvs from config files svcon <- list.files(path=here(\"/simulated-data/config/\"), pattern = \"*survey*\", full.names = TRUE) fishcon <- list.files(path=here(\"/simulated-data/config/\"), pattern = \"*fishery*\", full.names = TRUE)  omlist_ss <- NOBAom_ms source(here(\"/simulated-data/config/omdimensions.R\"))  svcvlook <- tibble() for(c in 1:length(svcon)){   source(svcon[c])   surv_cv_n <- surv_cv %>%      mutate(survey=survey.name)   svcvlook <- bind_rows(svcvlook, surv_cv_n) }  fcvlook <- tibble() for(c in 1:length(fishcon)){   source(fishcon[c])   fish_cv_n <- fish_cv %>%     mutate(fishery=fishery.name)   fcvlook <- bind_rows(fcvlook, fish_cv_n) }  allsvbio <- tibble()  #multiple surveys named in list object, use as filename for(s in names(survObsBiom)){   #arrange into wide format: year, Species1, Species2 ... and write csv   svbio <- survObsBiom[[s]][[1]] %>%     dplyr::mutate(year = ceiling(time/stepperyr)) %>%     dplyr::select(species, year, atoutput) %>%     dplyr::rename(biomass = atoutput) %>%     dplyr::mutate(survey = s) %>%     dplyr::left_join(svcvlook) %>%     dplyr::select(survey, year, species, everything()) %>%     dplyr::arrange(survey, species, year)      allsvbio <- bind_rows(allsvbio, svbio) } write_csv(allsvbio, paste0(o.name,\"observation_biomass_NOBA_allsurvs.csv\"))  allcatch <- tibble()  for(f in names(catchbio_ss)){   catchbio <- catchbio_ss[[f]][[1]] %>%     dplyr::mutate(year = time/365) %>%     dplyr::select(species, year, atoutput) %>%     dplyr::rename(catch = atoutput) %>%     dplyr::mutate(fishery = f) %>%     dplyr::mutate(area = 1) %>%     dplyr::left_join(fcvlook) %>%     dplyr::select(fishery, area, year, species, everything()) %>%     dplyr::arrange(fishery, species, year)          allcatch <- bind_rows(allcatch, catchbio)   }  write_csv(allcatch, paste0(o.name,\"observation_catch_NOBA_allfisheries.csv\")) # taken from existing load_nc to explore # file.nc <- file.path(d.name, \"outputnordic_runresults_01.nc\") #  #   # Load ATLANTIS output! #   at_out <- RNetCDF::open.nc(con = file.nc) #  #   # Get info from netcdf file! (Filestructure and all variable names) #   var_names_ncdf <- sapply(seq_len(RNetCDF::file.inq.nc(at_out)$nvars - 1), #     function(x) RNetCDF::var.inq.nc(at_out, x)$name) #   n_timesteps <- RNetCDF::dim.inq.nc(at_out, 0)$length #   n_boxes     <- RNetCDF::dim.inq.nc(at_out, 1)$length #   n_layers    <- RNetCDF::dim.inq.nc(at_out, 2)$length #  # RNetCDF::close.nc(at_out)  #'@physic_variables A character value spefifying which variables #'   should be loaded. Only one variable can be loaded at a time. #'   Currently, only the following variables are allowed: #'   \"salt\", \"NO3\", \"NH3\", \"Temp\", \"Oxygen\", \"Si\", \"Det_Si\", \"DON\", #'    \"Chl_a\", \"Denitrifiction\", \"Nitrification\".  truetemp <- atlantisom::load_nc_physics(dir = d.name,                   file_nc = \"outputnordic_runresults_01.nc\",                   physic_variables = \"Temp\",                   aggregate_layers = FALSE,                   bboxes = atlantisom::get_boundary(NOBAom_ms$boxpars))   #if(verbose) message(\"Temperature read in.\")  # this averages all depth layers, don't want this # truetempagg <- atlantisom::load_nc_physics(dir = d.name, #                   file_nc = \"outputnordic_runresults_01.nc\", #                   physic_variables = \"Temp\", #                   aggregate_layers = TRUE, #                   bboxes = atlantisom::get_boundary(NOBAom_ms$boxpars))  truebottomtemp <- truetemp %>%   filter(layer == 0) # according to Atlantis wiki, layer 0 is bottom  truesurfacetemp <- truetemp %>%   filter(layer<7) %>%  #layer 7 is always identical temp to layer 0, may be the added sediment layer?   group_by(polygon, time) %>%   filter(layer==max(layer)) %>%   ungroup  surveyenv <- function(trueenv,                        survboxes,                       survtimes) {   surveydat <- trueenv %>%     dplyr::filter(polygon %in% survboxes) %>%     dplyr::filter(time %in% survtimes)      return(surveydat) }  omlist_ss <- NOBAom_ms source(here(\"simulated-data/config/omdimensions.R\"))  #need to weight by polygon area to get mean annual temp time series for each survey boxarea <- map_dfr(NOBAom_ms$boxpars$boxes, \"area\") %>%   pivot_longer(everything(), names_to = \"polygon\", values_to = \"area\") %>%   mutate(polygon = as.integer(polygon)) %>%   mutate(proparea = area/sum(area))   source(here(\"simulated-data/config/mssurvey_fall.R\"))  fallcensus_bottomtemp <- surveyenv(truebottomtemp, survboxes = survboxes, survtimes = survtime)  fallcensus_btempindex <- left_join(fallcensus_bottomtemp, boxarea) %>%   dplyr::group_by(time) %>%   dplyr::summarise(meantemp = weighted.mean(atoutput, proparea)) %>%   dplyr::mutate(year = ceiling(time/stepperyr)) %>%   dplyr::select(year, meantemp) %>%   write_csv(paste0(o.name,\"observation_temperature_NOBA_\",survey.name,\".csv\"))  source(here(\"simulated-data/config/mssurvey_spring.R\"))  springcensus_bottomtemp <- surveyenv(truebottomtemp, survboxes = survboxes, survtimes = survtime)  springcensus_btempindex <- left_join(springcensus_bottomtemp, boxarea) %>%   dplyr::group_by(time) %>%   dplyr::summarise(meantemp = weighted.mean(atoutput, proparea)) %>%   dplyr::mutate(year = ceiling(time/stepperyr)) %>%   dplyr::select(year, meantemp) %>%   write_csv(paste0(o.name,\"observation_temperature_NOBA_\",survey.name,\".csv\"))  source(here(\"simulated-data/config/mssurvey_fall_01.R\"))  fallnearbox_bottomtemp <- surveyenv(truebottomtemp, survboxes = survboxes, survtimes = survtime)  fallnearbox_btempindex <- left_join(fallnearbox_bottomtemp, boxarea) %>%   dplyr::group_by(time) %>%   dplyr::summarise(meantemp = weighted.mean(atoutput, proparea)) %>%   dplyr::mutate(year = ceiling(time/stepperyr)) %>%   dplyr::select(year, meantemp) %>%   write_csv(paste0(o.name,\"observation_temperature_NOBA_\",survey.name,\".csv\"))  source(here(\"simulated-data/config/mssurvey_spring_01.R\"))  springnearbox_bottomtemp <- surveyenv(truebottomtemp, survboxes = survboxes, survtimes = survtime)  springnearbox_btempindex <- left_join(springnearbox_bottomtemp, boxarea) %>%   dplyr::group_by(time) %>%   dplyr::summarise(meantemp = weighted.mean(atoutput, proparea)) %>%   dplyr::mutate(year = ceiling(time/stepperyr)) %>%   dplyr::select(year, meantemp) %>%   write_csv(paste0(o.name,\"observation_temperature_NOBA_\",survey.name,\".csv\"))"},{"path":[]},{"path":[]},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SpeciesEnvDat.html","id":"species-lists","dir":"Articles","previous_headings":"","what":"Species lists","title":"MS Keyrun Species, Environment, Data Formats","text":"(first pull species lists Rpath model load survey results.)","code":"# Sean's file from https://github.com/NOAA-EDAB/GBRpath/blob/master/data/SOE_species_list.RData # loads the RData as object \"species\"  invisible(source_data(\"https://github.com/NOAA-EDAB/GBRpath/blob/master/data/SOE_species_list.RData?raw=True\"))  # used to get a list to paste into google form #write.table(file = \"spplist.txt\", sort(unique(species$RPATH)))  rpathspp <- species %>%   select(RPATH, COMNAME, SCINAME, SVSPP) %>%   filter(RPATH != \"\") %>%   distinct()   aggs <- rpathspp %>%   count(RPATH, sort = TRUE, name = \"Nspp\") %>%   filter(Nspp > 1)  singlespp <- anti_join(rpathspp, aggs) %>%   mutate(Nspp = 1)  rpathlist <- full_join(singlespp, aggs) #survey link https://forms.gle/gfA3tKFKRBxf3Mu38 #results link https://docs.google.com/spreadsheets/d/1sckY46jdyBa1Fhydw2syBawkjGPcHX4YwQmDCDBXcGU/edit#gid=284425233  # resultfile <- drive_find(pattern = \"MS-Keyrun Species\", type = \"spreadsheet\") #  # responses <- drive_download(resultfile, type = \"csv\", overwrite = TRUE) %>% #   {read.csv(.$local_path)}   responses <- read.csv(\"supportingFiles/MS-Keyrun Species, Environment, Data Format (Responses) - Form Responses 1.csv\",header=T)  names(responses)[3] <- \"Species\" names(responses)[5] <- \"Environment\" names(responses)[7] <- \"ModelInR\" names(responses)[8] <- \"ModelUseR\" names(responses)[9] <- \"RData\""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SpeciesEnvDat.html","id":"focalSpecies","dir":"Articles","previous_headings":"Species lists","what":"Multispecies models (focal species)","title":"MS Keyrun Species, Environment, Data Formats","text":"Multispecies models focus subset interacting species. estimate population parameters based fits biomass, catch, (appropriate) size age information, establish reference points, evaluate status interacting species. Decision: Use top ranked 10 species table : Atlantic herring, Atlantic cod, goosefish, haddock, spiny dogfish, winter founder, yellowtail flounder, Atlantic mackerel, silver hake, winter skate. Rationale: species occupy Georges Bank pollock found neighboring Gulf Maine. species received >2 vote inclusion MS-Keyrun multispecies models: Species modeled compared multispecies models include , limited subset.","code":"# each row is a response with a comma delimited list of species # string split each row to species # tally by species # histogram  msspecies <- data.frame(Species = responses$Species,                         Model = c(\"MS\", \"MS\", \"NA\", \"MS\", \"Rpath\", \"MS\")) %>%   filter(Model != \"NA\") %>%   separate_rows(Species, sep = \",\") %>%   mutate(Species = str_trim(Species, side = \"both\"))  focal <- msspecies %>%   filter(Model == \"MS\") %>%   count(Species) %>%   filter(n > 2) %>%   left_join(rpathspp, by = c(\"Species\" = \"RPATH\")) %>%   select(-COMNAME) %>%   arrange(desc(n))  knitr::kable(focal)"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SpeciesEnvDat.html","id":"food-web-model-focal-rest-of-system","dir":"Articles","previous_headings":"Species lists","what":"Food web model (focal + rest of system)","title":"MS Keyrun Species, Environment, Data Formats","text":"food web model intended examine wider ecosystem responses management measures applied subset interacting species. estimate predator-prey interaction parameters based fits biomass, catch, diet information. model track general trends (interannual variability) focal species produce reasonable reactions predators prey. Current species groups GB Rpath model (retained MS-Keyrun):","code":"datatable(rpathlist, rownames = FALSE,            options = list(pageLength = 25,                           order = list(list(0, 'asc'))           ))"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SpeciesEnvDat.html","id":"envrionmental-data","dir":"Articles","previous_headings":"","what":"Envrionmental data","title":"MS Keyrun Species, Environment, Data Formats","text":"Hydra, length-based multispecies model, already incorporates time series Georges Bank bottom temperature covariate simulation mode force changes growth, maturity, recruitment. MS-Keyrun, can explore fitting parameters governing influence covariate. Rpath can directly forced primary production time series, temperature-based mediation functions can included (unclear whether parameters can fit functions). Two mulispecies models currently set incorporate environmental data: MSCAA, MSSPM/Kraken WHAM model can potentially incorporate environmental time series can influence recruitment mortality. environmental time series received >1 vote inclusion MS-Keyrun multispecies Rpath models: Decision: include GB temperature primary production time series part MS-Keyrun dataset. Modelers may retrieve additional data ecodata. ecodata R package date information Georges Bank EPU scale listed : https://noaa-edab.github.io/ecodata/landing_page. Current time series ecodata:","code":"# each row is a response with a comma delimited list of environmental data # string split each row to dataset name # tally by dataset # histogram  msenv <- data.frame(Environment = responses$Environment,                         Model = c(\"MS\", \"MS\", \"NA\", \"MS\", \"Rpath\", \"MS\")) %>%   filter(Model != \"NA\") %>%   separate_rows(Environment, sep = \",\") %>%   mutate(Environment = str_trim(Environment, side = \"both\"))  includedenv <- msenv %>%   count(Environment) %>%   filter(n > 1) %>%   arrange(desc(n))  knitr::kable(includedenv) #remotes::install_github(\"noaa-edab/ecodata\",build_vignettes=TRUE) library(ecodata)  ecodsets <- data(package = \"ecodata\")$result[, c(\"Item\", \"Title\")]  datatable(ecodsets, rownames = FALSE,            options = list(pageLength = 25) )"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SpeciesEnvDat.html","id":"programming-frameworks-and-data-formats","dir":"Articles","previous_headings":"","what":"Programming frameworks and data formats","title":"MS Keyrun Species, Environment, Data Formats","text":"models either implemented R can work directly R datasets: Decision: surveyed agreed maintain datasets within R data package MS-Keyrun project. See discussion pros cons using R data package standardizing input datasets making available.","code":"# these are multiple choice yes/no so just plot  useR <- data.frame(ModelInR = responses$ModelInR,                    ModelUseR = responses$ModelUseR,                    RData = responses$RData) %>%   gather(question, answer, ModelInR:RData) %>%   mutate(shortans = ifelse(is.na(word(answer, 1, 2)),                             answer,                             word(answer, 1, 2))) yesR <- useR %>%   group_by(question) %>%   count(answer==\"Yes\") %>%   mutate(tot = sum(n)) %>%   mutate(percent = n/tot*100)   knitr::kable(yesR)"},{"path":[]},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SpeciesEnvDat.html","id":"survey-conducted-july-13-29-2020","dir":"Articles","previous_headings":"Full survey results","what":"Survey conducted July 13-29 2020","title":"MS Keyrun Species, Environment, Data Formats","text":"survey form. 6 responses.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SpeciesEnvDat.html","id":"species","dir":"Articles","previous_headings":"Full survey results","what":"Species","title":"MS Keyrun Species, Environment, Data Formats","text":"Responses:","code":"ggplot(msspecies, aes(Species)) +    geom_bar() +   facet_wrap(~Model, nrow = 2, scales=\"free\") +   theme(axis.text.x = element_text(angle = 90)) knitr::kable(responses$Rationale.for.species.included, col.names = \"Species rationale\", booktabs=TRUE)"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SpeciesEnvDat.html","id":"environment","dir":"Articles","previous_headings":"Full survey results","what":"Environment","title":"MS Keyrun Species, Environment, Data Formats","text":"Responses:","code":"ggplot(msenv, aes(Environment)) +    geom_bar() +   facet_wrap(~Model, nrow = 2, scales=\"free\") +   theme(axis.text.x = element_text(angle = 90)) knitr::kable(responses$Rationale.for.environmental.time.series.included, col.names = \"Environment rationale\", booktabs=TRUE)"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SpeciesEnvDat.html","id":"model-programming-frameworks","dir":"Articles","previous_headings":"Full survey results","what":"Model programming frameworks","title":"MS Keyrun Species, Environment, Data Formats","text":"Many models interface R can use R datasets. Even , agreed using R data package standardizing input datasets making available. Responses:  Short answer key: “” = able implement R connections MSSPM software. “Probably, ” = Probably, need sort exprt R Mysql","code":"ggplot(useR, aes(question)) +   geom_bar(aes(fill=shortans)) +   labs(x = \"Question\",         fill = \"Short Answer\") +   scale_x_discrete(labels = function(x) str_wrap(x, width = 35))"},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/SpeciesEnvDat.html","id":"meeting-minutes-5-august-2020","dir":"Articles","previous_headings":"","what":"Meeting minutes, 5 August 2020","title":"MS Keyrun Species, Environment, Data Formats","text":"Click !","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/allocateLandingsEPU.html","id":"spatial-approaches-for-georges-bank-option-1","dir":"Articles","previous_headings":"","what":"Spatial: Approaches for Georges Bank Option 1","title":"Allocate landings to Georges Bank EPU","text":"spatial footprint Georges Bank EPU (Ecological Production Unit) defined set survey strata 50% within 10 min square definition EPU. Georges Bank EPU Overlay surrounding statistical areas: Statistical areas intersected Georges Bank EPU Fishing data available statistical area. statistical areas surrounding Georges Bank EPU (521, 522, 525, 526, 537, 538, 551, 552, 561, 562) contain catch Georges Bank neighboring EPUs. data needs partitioned catch allocated Georges Bank EPU.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/allocateLandingsEPU.html","id":"method-for-partitioning-catch-data","dir":"Articles","previous_headings":"","what":"Method for partitioning catch data","title":"Allocate landings to Georges Bank EPU","text":"Methods found (Benjamin, S et al., 2018; DePiper, 2014) offshoreWind package briefly summarized . necessary run package mars server. VTR data joined observer data (since observer data considered reliable). duration model fitted characterize spatial footprint (rather single point location) associated trip (DePiper (2014)). Gear type trip length (includes multiple hauls) influence spatial precision. duration model broadly applied VTR data. result set maps (rasters). map/raster depicts spatial probability fishing trip. offshoreWind package uses rasters combined determine landings assigned spatial footprint supplied. achieved calculating overlap rasters user supplied spatial footprint. shape file shown Figure @ref(fig:GBfootstat) supplied offshoreWind package landings statistical area (year) allocated portion statistical area (within Georges Bank outside Georges Bank). proportion landings attributed Georges Bank calculated displayed . top ranked species interest shown . panel depicts proportion landings (species) Georges Bank relative statistical area. Proportion landings GB relative statistical area total landings species stat area shown . ideally compared landings comlandr. also determine landings Canadian side Hague line handled Total landings statistical area majority landings (species) occurs statistical areas proportion allocated Georges Bank fairly constant.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/allocateLandingsEPU.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Allocate landings to Georges Bank EPU","text":"Benjamin, S, Lee, Min-Yang, & DePiper, G. (2018). Visualizing fishing data rasters. DePiper, G. (2014). Statistically assessing precision self-reported vtr fishing locations. 22.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/mskeyrun.html","id":"project-overview","dir":"Articles","previous_headings":"","what":"Project overview","title":"Georges Bank multispecies model keyrun project","text":"overall goal MS-Keyrun project multispecies modeling datasets tools technically reviewed, receive recommendations development testing prior consideration use management bodies. interest regional fishery management councils Northeast US.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/mskeyrun.html","id":"objectives","dir":"Articles","previous_headings":"Project overview","what":"Objectives","title":"Georges Bank multispecies model keyrun project","text":"MS-Keyrun model development testing objectives based general ecosystem based management questions well specific discussions regarding EBFM development New England. use opportunity address questions effects management broader ecosystem, performance assessment tools. Apply full system model assess “side effects” target species management Ability implement fishing biological scenarios Hypothesis testing MSE framework desirable Biomass dynamics Size structured Age structured Evaluate data availability structure Evaluate estimation performance structure Evaluate uncertainty sensitivity Evaluate feasibility developing using multi-model inference","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/mskeyrun.html","id":"place-based-approach","dir":"Articles","previous_headings":"Project overview","what":"Place-based approach","title":"Georges Bank multispecies model keyrun project","text":"project currently implements several place-based multispecies assessment models one food web model. “Place-based” means common spatial footprint based ecological production, contrasts current species-based management system stock-defined spatial footprints differ stock species. (See  stock area comparisons.) Therefore, input data project differs input data current stock assessments, results multispecies assessments directly comparable current single species assessments. However, similar processes can applied evaluate models. Georges Bank defined project uses NEFSC bottom trawl survey strata highlighted medium blue , corresponds spatial unit survey-derived ecosystem indicators Northeast Fisheries Science Center (NEFSC) New England State Ecosystem (SOE) report. Orange outlines indicate ten minute square definitions Ecological Production Units defined previous analysis. Georges Bank defined NEFSC trawl survey strata. SOE = State Ecosystem report","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/mskeyrun.html","id":"review-process","dir":"Articles","previous_headings":"Project overview","what":"Review process","title":"Georges Bank multispecies model keyrun project","text":"models applied published form, updated include estimation capability, changes made. Therefore, seek general review models. U.S. National Research Council guidelines using models support environmental regulation (NRC, 2007b) adapted ICES WGSAM. Reviews relatively new models fall “constructed model review” category (NRC, 2007a).means model, reviews evaluate: Spatial temporal resolution Algorithm choices Assumptions (scientific basis, computational infrastructure; adequacy conceptual model) Data availability/software tools Quality assurance/quality control (code testing) Test scenarios Corroboration observations Uncertainty/sensitivity analysis Peer review (previous)","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/mskeyrun.html","id":"common-attributes-across-models","dir":"Articles","previous_headings":"Project overview","what":"Common attributes across models","title":"Georges Bank multispecies model keyrun project","text":"common dataset 10 Georges Bank species developed, well simulated dataset model performance testing. mskeyrun data package holds datasets. modeling teams used datasets. Group decisions data also documented . Years: 1968-2019 Area: Georges Bank (see map ) Species: Atlantic cod (Gadus morhua), Atlantic herring (Clupea harengus), Atlantic mackerel (Scomber scombrus), Goosefish (Lophius americanus), Haddock (Melanogrammus aeglefinus), Silver hake (Merluccius bilinearis), Spiny dogfish (Squalus acanthias), Winter flounder (Pseudopleuronectes americanus), Winter skate (Leucoraja ocellata), Yellowtail flounder (Limanda ferruginea) Decisions leading temporal, spatial, species resolution documented detail links .","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/mskeyrun.html","id":"data-needs","dir":"Articles","previous_headings":"Project overview > Common attributes across models","what":"Data needs","title":"Georges Bank multispecies model keyrun project","text":"Decisions meeting notes - 3 June 2020","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/mskeyrun.html","id":"dataset-dimensions","dir":"Articles","previous_headings":"Project overview > Common attributes across models > Data needs","what":"Dataset dimensions","title":"Georges Bank multispecies model keyrun project","text":"Year, season, area decisions - 8 July 2020 Allocate landings EPU - 25 Nov 2020 Fleet Definitions - 26 Feb 2021 Fleet Decisions Species, environment, data package decisions - 5 August 2020 Age, length, diet composition decisions - 3 September 2020 Landings length Hydra model","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/mskeyrun.html","id":"dataset-source-and-methods-documentation","dir":"Articles","previous_headings":"Project overview > Common attributes across models > Data needs","what":"Dataset source and methods documentation","title":"Georges Bank multispecies model keyrun project","text":"Georges Bank survey footprint - 4 November 2020 Georges Bank data derived Northeast Fisheries Science Center (NEFSC) databases using R packages developed improve efficiency reproducibility. R packages survdat, comlandr, mscatch used retrieve aggregate data saved mskeyrun.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/mskeyrun.html","id":"simulated-dataset-methods","dir":"Articles","previous_headings":"Project overview > Common attributes across models > Data needs","what":"Simulated dataset methods","title":"Georges Bank multispecies model keyrun project","text":"simulated dataset based output Norwegian Barents Sea (NOBA) Atlantis model (Hansen et al., 2016, 2019). Atlantis end--end spatial ecosystem model capable including climate effects, seasonal migration, food web, fishery interactions (Audzijonyte et al., 2019). simulated dataset contains comparable survey, fishery, composition data Georges Bank dataset, time series span 80 simulation years include 11 species. dataset used initial model development, code quality testing, model skill assessment modeling teams. Details dataset available link. Initial simulated data testing - 1 April 2021","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/mskeyrun.html","id":"dataset-structure","dir":"Articles","previous_headings":"Project overview > Common attributes across models","what":"Dataset structure","title":"Georges Bank multispecies model keyrun project","text":"data package mskeyrun developed R (R Core Team, 2022). Individual data products include survey indices, survey length age compositions, survey diet compositions, fishery indices, fishery length age compositions, additional biological parameters (length-weight). mskeyrun datasets listed : https://noaa-edab.github.io/ms-keyrun/reference/index.html","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/mskeyrun.html","id":"models","dir":"Articles","previous_headings":"","what":"Models","title":"Georges Bank multispecies model keyrun project","text":"October 2022 review, three models presented: Multispecies surplus production model (MSSPM) Multispecies length-structured model (Hydra) Full food web model (RPath)","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/mskeyrun.html","id":"multispecies-surplus-production-model-msspm","dir":"Articles","previous_headings":"Models > Model documentation","what":"Multispecies surplus production model (MSSPM)","title":"Georges Bank multispecies model keyrun project","text":"reviewed model based simulation model MS-PROD (Gamble & Link, 2009), implemented C++. Multi-species surplus production models can used quantify species interactions, focus minimal population structure, barriers begin modeling surmountable due lower data needs species corresponding age-structured assessment model. Generally, include: biomass survey index time series, catch data time series, spatial overlap food habits information (competitive predation interactions). MS-PROD previously used simulation analyses addressing aggregate fish production marine mammal interactions Northeast US Georges Bank (Gaichas et al., 2012; Smith et al., 2015). Multi-Species Surplus Production Model (MSSPM) software enables user build discrete-form single species multi-species surplus production models. software allows user 1) define model, using choices growth, harvest, competition, predation forms, 2) run model, estimates necessary parameters using choices optimization algorithms, 3) visualize estimated data. user can conduct diagnostic testing fitted model including retrospective analysis parameter profiling. Forecasts may generated using estimated parameters additional harvest uncertainty parameters. software specialized user interface, REsource Management Options Review Analysis (REMORA) tool allows non-technical user explore fisheries management policy different types levels uncertainty.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/mskeyrun.html","id":"multispecies-length-structured-model-hydra","dir":"Articles","previous_headings":"Models > Model documentation","what":"Multispecies length-structured model (Hydra)","title":"Georges Bank multispecies model keyrun project","text":"reviewed model based simulation model Hydra (Gaichas et al., 2017), implemented ADMB (Fournier et al., 2012). Hydra’s structure derived length-based multispecies simulation model, LeMANS (Hall et al., 2006; Rochet et al., 2011), additional options growth, recruitment functional forms detailed fishing fleets. Hydra simulations previously used support EBFM analyses New England Fishery Management Council, reviewed 2018 part Ecosystem Based Management Strategy Review Georges Bank. key feature Hydra differentiates LeMANS length-based models treatment length information. Attempting balance model complexity run time available data adequately modeling length-based processes, Hydra applies equal number length bins modeled species. modeler specifies overall number bins (5 original simulation model), size cm spanned bin species. original Hydra simulation model used narrower length bins smaller fish sizes length bin spanning wider range sizes larger fish efficiently represent changes size selectivity predators fisheries. estimation model uses equal width bins equally dividing species’ maximum observed length overall number bins. Modeler decisions length bin number width combined individual species growth parameters contribute model temporal scale, internally calculated set equal time required fastest-growing species grow smallest length bin (less one year). Therefore, model timesteps never exceed one year, can subannual. review, simulation model code forked objective function added, modifications data section accommodate new data inputs parameter section estimate fishery survey selectivity catchability. estimation model, Hydra can fitted multiple data streams. Currently objective function comprises following components, catch (species fleet), size composition catch (species fleet), survey abundance index (species survey), survey size composition (species survey), survey diet composition (stomach weight predator size bin predator species survey), recruitment (annual deviations mean recruitment species). detailed description objective function equations available . Hydra input files developed directly mskeyrun datasets modifying functions Andy Beet’s hydradata R package. function create_Rdata_mskeyrun.R (code) allows user specify whether datasets constructed Atlantis-simulated real Georges Bank data, number length bins use composition data, creates R data object. data object used create data parameter input files using function hydradata::create_datpin_files(). Hydra output visualizations developed evaluate model fits different settings input datasets. current diagnostics include model fits survey index, model fits catch fleet, comparisons estimated observed length compositions year aggregate across years modeled species, residuals fits length compositions, comparisons estimated observed diet composition. addition, model outputs estimated recruitment, total biomass, fishery survey selectivity, fishing mortality, predation mortality produced. Initial model skill assessment compares model output total biomass known total biomass simulated datasets. model code, data processing, visualization available online: Hydra model estimation version code https://github.com/thefaylab/hydra_sim Hydra estimation model data file generation https://github.com/thefaylab/hydradata Hydra model diagnostics https://github.com/thefaylab/hydra_diag","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/mskeyrun.html","id":"full-food-web-model-rpath","dir":"Articles","previous_headings":"Models > Model documentation","what":"Full food web model (RPath)","title":"Georges Bank multispecies model keyrun project","text":"reviewed model based Georges Bank parameterization Rpath (Lucey et al., 2020), food web model implemented R (R Core Team, 2022). Rpath includes formal capability MSE (Lucey et al., 2021), making ideal tool objectives project. Previous food web modeling efforts Northeast US included Georges Bank (Link et al., 2008, 2006), evaluated food web structure response perturbations aggregated taxonomic level.","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/mskeyrun.html","id":"individual-model-results","dir":"Articles","previous_headings":"Results","what":"Individual model results","title":"Georges Bank multispecies model keyrun project","text":"overviews presented updated throughout meeting, details available google drive set reviewers.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/mskeyrun.html","id":"multispecies-surplus-production-model-msspm-1","dir":"Articles","previous_headings":"Results > Individual model results","what":"Multispecies surplus production model (MSSPM)","title":"Georges Bank multispecies model keyrun project","text":"software previously presented framework reviewed WGSAM 2021. review implemented process 3-levels simulation testing modeling software: comparison testing, integration testing, skill assessment. Comparison testing used simulated data operating model structure used software known parameter values, known harvest time series, known biomass time series (without uncertainty). Integration testing uses simulated data operating model different structure (Norwegian Barents Atlantis Model, NOBA) thus different parameters, known catch biomass time series without uncertainty demonstrate software modules (e.g., parameter estimation, diagnostics, forecasting/projection) produce reasonable results. Skill assessment uses simulated data operating model different structure (NOBA) thus different parameters, catch biomass index time series uncertainty. comparison testing, MSSPM fits operating model perfectly (\\(r^2\\)=1.00) data without uncertainty, fits decrease uncertainty increases biomass time series (e.g., cv=0.5, \\(r^2\\) ranges 0.50 0.60). integration testing, best fit model \\(r^2\\) 0.44. Georges Bank models developed using catch data drive dynamics survey indices (relative biomass) data fitting. Harvest data (mskeyrun::catchIndex.rda) used drive model dynamics. combined survey index (mskeyrun::surveyIndexAll.rda) used relative biomass time series fit model . model-derived bottom temperature index tested covariate influence carrying capacity population growth rates species. time period model 1969-2019. Four test scenarios conducted compare basic surplus production models without environmental covariates predation.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/mskeyrun.html","id":"multispecies-length-structured-model-hydra-1","dir":"Articles","previous_headings":"Results > Individual model results","what":"Multispecies length-structured model (Hydra)","title":"Georges Bank multispecies model keyrun project","text":"Hydra model diagnostics progress fitting three datasets presented: * Simulated data 5 length bins * Simulated data 10 length bins * Georges Bank data 5 length bins use 5 length bins starting structure fitting Georges Bank data simulation model Hydra used 5 length bins. consider models fully converged keyruns, rather diagnostics dataset intended give insight model behavior performance. Specifically, simulated datasets different numbers length bins intended evaluate model sensitivity choice input data structure tradeoffs overall performance. datasets also allow preliminary comparisons true Atlantis quantities (biomass, recruitment, diet) step towards skill assessment. Sensitivity model food parameter identified high priority 2018 simulation model review, evaluated simulated dataset. Fits real Georges Bank data just begun, already highlighted several implicit assumptions Hydra model code addressed. time period modeling adjusted 1978-2019 avoid starting model extremely high catches observed 1968-1977.","code":""},{"path":[]},{"path":[]},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/mskeyrun.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Georges Bank multispecies model keyrun project","text":"Audzijonyte, ., Pethybridge, H., Porobic, J., Gorton, R., Kaplan, ., & Fulton, E. . (2019). Atlantis: spatially explicit end--end marine ecosystem model dynamically integrated physics, ecology socio-economic modules. Methods Ecology Evolution, 10(10), 1814–1819. https://doi.org/10.1111/2041-210X.13272 _eprint: https://besjournals.onlinelibrary.wiley.com/doi/pdf/10.1111/2041-210X.13272 Fournier, D. ., Skaug, H. J., Ancheta, J., Ianelli, J., Magnusson, ., Maunder, M. N., Nielsen, ., & Sibert, J. (2012). AD Model Builder: Using automatic differentiation statistical inference highly parameterized complex nonlinear models. Optimization Methods Software, 27(2), 233–249. https://doi.org/10.1080/10556788.2011.597854 Gaichas, S., Gamble, R., Fogarty, M. J., Benoit, H., Essington, T., Fu, C., Koen-Alonso, M., & Link, J. S. (2012). Assembly Rules Aggregate-Species Production Models: Simulations Support Management Strategy Evaluation. Marine Ecology Progress Series, 459, 275–292. Gaichas, S. K., Fogarty, M., Fay, G., Gamble, R., Lucey, S., & Smith, L. (2017). Combining stock, multispecies, ecosystem level fishery objectives within operational management procedure: Simulations start conversation. ICES Journal Marine Science, 74(2), 552–565. https://doi.org/10.1093/icesjms/fsw119 Gamble, R. J., & Link, J. S. (2009). Analyzing tradeoffs among ecological fishing effects example fish community: multispecies (fisheries) production model. Ecological Modelling, 220(19), 2570–2582. https://doi.org/10.1016/j.ecolmodel.2009.06.022 Hall, S. J., Collie, J. S., Duplisea, D. E., Jennings, S., Bravington, M., & Link, J. (2006). length-based multispecies model evaluating community responses fishing. Canadian Journal Fisheries Aquatic Sciences, 63(6), 1344–1359. https://doi.org/10.1139/f06-039 Hansen, C., Drinkwater, K. F., Jähkel, ., Fulton, E. ., Gorton, R., & Skern-Mauritzen, M. (2019). Sensitivity Norwegian Barents Sea Atlantis end--end ecosystem model parameter perturbations key species. PLOS ONE, 14(2), e0210419. https://doi.org/10.1371/journal.pone.0210419 Hansen, C., Skern-Mauritzen, M., Meeren, G. van der, Jähkel, ., & Drinkwater, K. F. (2016). Set-Nordic Barents Seas (NoBa) Atlantis model. Havforskningsinstituttet. https://imr.brage.unit./imr-xmlui/bitstream/handle/11250/2408609/FoH_2-2016.pdf?sequence=1&isAllowed=y ICES. (2019). Working Group Multispecies Assessment Methods (WGSAM). https://doi.org/10.17895/ICES.PUB.5758 Publisher: ICES Link, J., Overholtz, W., O’Reilly, J., Green, J., Dow, D., Palka, D., Legault, C., Vitaliano, J., Guida, V., Fogarty, M., Brodziak, J., Methratta, L., Stockhausen, W., Col, L., & Griswold, C. (2008). Northeast U.S. Continental shelf Energy Modeling Analysis exercise (EMAX): Ecological network model development basic ecosystem metrics. Journal Marine Systems, 74(1–2), 453–474. https://doi.org/10.1016/j.jmarsys.2008.03.007 Link, J. S., Griswold, C. T., Methratta, E. T., & Gunnard, J. (Eds.). (2006). Documentation Energy Modeling Analysis eXercise (EMAX). Northeast Fish. Sci. Cent. Ref. Doc. 06-15. US Dep. Commer., National Marine Fisheries Service. Lucey, S. M., Aydin, K. Y., Gaichas, S. K., Cadrin, S. X., Fay, G., Fogarty, M. J., & Punt, . (2021). Evaluating fishery management strategies using ecosystem model operating model. Fisheries Research, 234, 105780. https://doi.org/10.1016/j.fishres.2020.105780 Lucey, S. M., Gaichas, S. K., & Aydin, K. Y. (2020). Conducting reproducible ecosystem modeling using open source mass balance model Rpath. Ecological Modelling, 427, 109057. https://doi.org/10.1016/j.ecolmodel.2020.109057 NRC. (2007a). Chapter 4. Model Evaluation. Models Environmental Regulatory Decision Making (pp. 104–169). National Academies Press. https://doi.org/10.17226/11972 NRC. (2007b). Models Environmental Regulatory Decision Making. National Academies Press. Google-Books-ID: DiAXl4DgwhwC R Core Team. (2022). R: language environment statistical computing. R Foundation Statistical Computing. https://www.R-project.org/ Rochet, M.-J., Collie, J. S., Jennings, S., & Hall, S. J. (2011). selective fishing conserve community biodiversity? Predictions length-based multispecies model. Canadian Journal Fisheries Aquatic Sciences, 68(3), 469–486. https://doi.org/10.1139/F10-159 Smith, L., Gamble, R., Gaichas, S., & Link, J. (2015). Simulations evaluate management trade-offs among marine mammal consumption needs, commercial fishing fleets finfish biomass. Marine Ecology Progress Series, 523, 215–232. https://doi.org/10.3354/meps11129","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/stockAreas.html","id":"focal","dir":"Articles","previous_headings":"","what":"Focal species","title":"Focal Species stock area definitions","text":"Common_Name SCIENTIFIC_NAME SPECIES_ITIS Goosefish Lophius americanus 164499 Atlantic cod Gadus morhua 164712 Winter flounder Pseudopleuronectes americanus 172905 Yellowtail flounder Limanda ferruginea 172909 Haddock Melanogrammus aeglefinus 164744 Atlantic herring Clupea harengus 161722 Atlantic mackerel Scomber scombrus 172414 Spiny dogfish Squalus acanthias 160617 Winter skate Leucoraja ocellata 564145 Silver hake Merluccius bilinearis 164791","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/stockAreas.html","id":"stock-areas","dir":"Articles","previous_headings":"","what":"Stock areas","title":"Focal Species stock area definitions","text":"Numbered Statistical areas define stock area used assessment. Overlaid red denotes statistical areas used pull catch data Georges Bank region. Length sample data also pulled GB region. stocks transient Georges Bank (Herring, Mackerel, Spiny dogfish, Winter skate, Goosefish) length samples used whole shelf.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/stockAreas.html","id":"winter-flounder","dir":"Articles","previous_headings":"Stock areas","what":"Winter flounder","title":"Focal Species stock area definitions","text":"Winter Flounder comprises two stocks; Georges Bank stock (Eastern portion Georges Bank) Southen New England stock. boundary two lies center Georges Bank (longitudanally)","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/ms-keyrun/articles/stockAreas.html","id":"silver-hake","dir":"Articles","previous_headings":"Stock areas","what":"Silver hake","title":"Focal Species stock area definitions","text":"Silver Hake comprises two stocks; northern southern stock. boundary two lies center Georges Bank (latitudinally)","code":""},{"path":[]},{"path":[]},{"path":"https://noaa-edab.github.io/ms-keyrun/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andy Beet. Author. Sean Lucey. Author. Sarah Gaichas. Author, maintainer. Kiersten Curti. Author.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Beet , Lucey S, Gaichas S, Curti K (2022). mskeyrun: information keyrun review. R package version 0.0.0.9000, https://github.com/NOAA-EDAB/ms-keyrun.","code":"@Manual{,   title = {mskeyrun: All information for keyrun review},   author = {Andy Beet and Sean Lucey and Sarah Gaichas and Kiersten Curti},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://github.com/NOAA-EDAB/ms-keyrun}, }"},{"path":"https://noaa-edab.github.io/ms-keyrun/index.html","id":"mskeyrun","dir":"","previous_headings":"","what":"All information for keyrun review","title":"All information for keyrun review","text":"Model “keyruns” defined “standardized model runs updated recent data, producing agreed output.” ICES group WGSAM regularly reviews multispecies model keyruns using criteria found . repository documents decisions made regarding datasets modeling multispecies model keyruns Georges Bank, USA. Data products can accessed installing R data package. Methods found documentation. Links model code repositories; results draft manuscripts eventually found . target date model keyrun reviews October 2022, modeling results documentation submitted 1 September 2022.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"All information for keyrun review","text":"remotes::install_github(\"NOAA-EDAB/ms-keyrun\")","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/ms-keyrun/index.html","id":"legal-disclaimer","dir":"","previous_headings":"Contributors (in alphabetical order)","what":"Legal disclaimer","title":"All information for keyrun review","text":"repository scientific product official communication National Oceanic Atmospheric Administration, United States Department Commerce. NOAA GitHub project code provided ‘’ basis user assumes responsibility use. claims Department Commerce Department Commerce bureaus stemming use GitHub project governed applicable Federal law. reference specific commercial products, processes, services service mark, trademark, manufacturer, otherwise, constitute imply endorsement, recommendation favoring Department Commerce. Department Commerce seal logo, seal logo DOC bureau, shall used manner imply endorsement commercial product activity DOC United States Government.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/AllSpeciesProportions.html","id":null,"dir":"Reference","previous_headings":"","what":"Proportion of species straddling Georges Bank EPU — AllSpeciesProportions","title":"Proportion of species straddling Georges Bank EPU — AllSpeciesProportions","text":"Georges Bank EPU defined area within subset predefined Statistical fishing areas. Landings statistical area attributed Georges Bank determining variable landings time constant assign fixed proportion landings Georges Bank region","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/AllSpeciesProportions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Proportion of species straddling Georges Bank EPU — AllSpeciesProportions","text":"","code":"AllSpeciesProportions"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/AllSpeciesProportions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Proportion of species straddling Georges Bank EPU — AllSpeciesProportions","text":"data frame 4 columns AREA Statistical Area code NESPP3 species code commerical fishing database InOut Designation insie outside Georges Bank MeanProp Mean proportion landings within AREA species","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/catchAtLengthProportions.html","id":null,"dir":"Reference","previous_headings":"","what":"catch by size class, area, fleet — catchAtLengthProportions","title":"catch by size class, area, fleet — catchAtLengthProportions","text":"species found Hydra model, proportion total landings reported fleet, year, sizeclass","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/catchAtLengthProportions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"catch by size class, area, fleet — catchAtLengthProportions","text":"","code":"catchAtLengthProportions"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/catchAtLengthProportions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"catch by size class, area, fleet — catchAtLengthProportions","text":"data frame 3 columns fleet Name fleet area Area landings reported year year landings reported species_itis itis code type type data. 0 = landings totalBiomass Total Biomass sizeclass1 proportion total biomass attributed size class 1 sizeclass2 proportion total biomass attributed size class 1 sizeclass3 proportion total biomass attributed size class 1 sizeclass4 proportion total biomass attributed size class 1 sizeclass5 proportion total biomass attributed size class 1","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/catchIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"The fishery catch indices for the mskeyrun project — catchIndex","title":"The fishery catch indices for the mskeyrun project — catchIndex","text":"Fisheries landings data Georges Bank","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/catchIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The fishery catch indices for the mskeyrun project — catchIndex","text":"","code":"catchIndex"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/catchIndex.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The fishery catch indices for the mskeyrun project — catchIndex","text":"data frame NESPP3 Northeast Species Identification code (see focalSpecies) YEAR year landed variable commercial landings commercial discards value value variable units units variable","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/fisheryLenSampN.html","id":null,"dir":"Reference","previous_headings":"","what":"Fishery sampled number of lengths for input into hydra model — fisheryLenSampN","title":"Fishery sampled number of lengths for input into hydra model — fisheryLenSampN","text":"Number fish measured year, species mskeyrun focal species","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/fisheryLenSampN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fishery sampled number of lengths for input into hydra model — fisheryLenSampN","text":"","code":"fisheryLenSampN"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/fisheryLenSampN.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fishery sampled number of lengths for input into hydra model — fisheryLenSampN","text":"data frame YEAR year diet data collected SVSPP SVSPP code species lensampsize number fish measured length ntrips number unique trips measured fish lengths SPECIES_ITIS SPECIES_ITIS code species LongName Common name species","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/fleets.html","id":null,"dir":"Reference","previous_headings":"","what":"Fleet designations based on NEGEAR2 codes — fleets","title":"Fleet designations based on NEGEAR2 codes — fleets","text":"NEGEAR2 codes assigned fleets based species landed. methodology decisions made create data set can found ","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/fleets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fleet designations based on NEGEAR2 codes — fleets","text":"","code":"fleets"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/fleets.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fleet designations based on NEGEAR2 codes — fleets","text":"data frame 3 columns fleetName Name fleet NEGEAR2 Gear codes associated fleet hydraFleets Fleet aggregation satify Hydra multispecies model","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/fleets.html","id":"methodology","dir":"Reference","previous_headings":"","what":"Methodology","title":"Fleet designations based on NEGEAR2 codes — fleets","text":"data set created based clustering methods.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/focalSpecies.html","id":null,"dir":"Reference","previous_headings":"","what":"The focal species in mskeyrun project — focalSpecies","title":"The focal species in mskeyrun project — focalSpecies","text":"Species name, latin name, various related species codes","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/focalSpecies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The focal species in mskeyrun project — focalSpecies","text":"","code":"focalSpecies"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/focalSpecies.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The focal species in mskeyrun project — focalSpecies","text":"data frame NESPP3 species code found commercial fishing database SVSPP species code found bottom trawl survey database NAFOSPP species code nafo database SPECIES_ITIS itis code COMMON_NAME common name commercial fishing database COMNAME common name bottom trawl survey fishing database SCIENTIFIC_NAME scientific name species","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/mskeyrun.html","id":null,"dir":"Reference","previous_headings":"","what":"mskeyrun package — mskeyrun","title":"mskeyrun package — mskeyrun","text":"data package documents decisions made creating data products multispecies model keyrun project Georges Bank, USA. Data methods documentation found .","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/mskeyrun.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"mskeyrun package — mskeyrun","text":"Bundled data Helper scrips file format (shp, csv) Documentation decisions steps taken generate data learn using mskeyrun, start vignette: browseVignettes(package=\"mskeyrun\") click index ","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/realBiolPar.html","id":null,"dir":"Reference","previous_headings":"","what":"The focal species biological parameters in mskeyrun project — realBiolPar","title":"The focal species biological parameters in mskeyrun project — realBiolPar","text":"Length (cm) weight (g) parameters based bottom trawl survey data. See details ","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/realBiolPar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The focal species biological parameters in mskeyrun project — realBiolPar","text":"","code":"realBiolPar"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/realBiolPar.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The focal species biological parameters in mskeyrun project — realBiolPar","text":"data frame ModSim Atlantis model name simulation id Code Itis code species Name Common name species WLa Weight-Length equation parameter , W = aL^b WLb Weight-Length equation parameter b, W = aL^b sigma Estimated standard deviation Weight-Length equation parameter W = aL^b","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/realBiolPar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The focal species biological parameters in mskeyrun project — realBiolPar","text":"Model: W = aL^b e^Z Z ~ IIDN(0,sigma^2) E(W) = aL^b e^((sigma^2)/2)","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/realFisheryAgecomp.html","id":null,"dir":"Reference","previous_headings":"","what":"Fishery Age composition for the mskeyrun project based on catch data — realFisheryAgecomp","title":"Fishery Age composition for the mskeyrun project based on catch data — realFisheryAgecomp","text":"Data pulled NEFSC commercial fishery database. Methods obtain catch age compositions described mscatch package","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/realFisheryAgecomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fishery Age composition for the mskeyrun project based on catch data — realFisheryAgecomp","text":"","code":"realFisheryAgecomp"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/realFisheryAgecomp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fishery Age composition for the mskeyrun project based on catch data — realFisheryAgecomp","text":"data frame ModSim Atlantis model name simulation id, Actual data year year catch Code Species itis code Name Common name species fishery fishery name age age fish fishery, yrs variable metric recorded, Number age value value variable units units variable","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/realFisheryLencomp.html","id":null,"dir":"Reference","previous_headings":"","what":"Fishery length composition for the mskeyrun project based on catch data — realFisheryLencomp","title":"Fishery length composition for the mskeyrun project based on catch data — realFisheryLencomp","text":"Data pulled NEFSC commercial fishery database. Methods obtain catch length compositions described mscatch package","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/realFisheryLencomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fishery length composition for the mskeyrun project based on catch data — realFisheryLencomp","text":"","code":"realFisheryLencomp"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/realFisheryLencomp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fishery length composition for the mskeyrun project based on catch data — realFisheryLencomp","text":"data frame ModSim Atlantis model name simulation id, Actual data year year catch Code Species itis code Name Common name species fishery fishery name lenbin fishery recorded 1 cm length bin variable metric recorded value value variable units units variable","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/realSurveyLennumcomp.html","id":null,"dir":"Reference","previous_headings":"","what":"Survey length composition for the mskeyrun project based on bottom trawl survey data — realSurveyLennumcomp","title":"Survey length composition for the mskeyrun project based on bottom trawl survey data — realSurveyLennumcomp","text":"Data pulled NEFSC bottom trawl survey database. Data pulled processed using survdat package.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/realSurveyLennumcomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survey length composition for the mskeyrun project based on bottom trawl survey data — realSurveyLennumcomp","text":"","code":"realSurveyLennumcomp"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/realSurveyLennumcomp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Survey length composition for the mskeyrun project based on bottom trawl survey data — realSurveyLennumcomp","text":"data frame ModSim Atlantis model name simulation id, Actual data year year survey undertaken season season survey undertaken Code Species itis code Name Common name species fishery fishery name lenbin recorded 1 cm length bin variable metric recorded, biomass & numbers value value variable units units variable","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simBiolPar.html","id":null,"dir":"Reference","previous_headings":"","what":"The Atlantis-simulated focal species biological parameters in mskeyrun project — simBiolPar","title":"The Atlantis-simulated focal species biological parameters in mskeyrun project — simBiolPar","text":"Model name scenario, Species code, species name, length weight parameters","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simBiolPar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Atlantis-simulated focal species biological parameters in mskeyrun project — simBiolPar","text":"","code":"simBiolPar"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simBiolPar.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The Atlantis-simulated focal species biological parameters in mskeyrun project — simBiolPar","text":"data frame ModSim Atlantis model name simulation id Code Atlantis model three letter code functional group Name Atlantis model common name functional group WLa Weight-Length equation parameter , W = aL^b WLb Weight-Length equation parameter b, W = aL^b","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simCatchIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"The Atlantis-simulated fishery catch indices for the mskeyrun project — simCatchIndex","title":"The Atlantis-simulated fishery catch indices for the mskeyrun project — simCatchIndex","text":"Simulated survey index data Atlanits model sampled atlantisom","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simCatchIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Atlantis-simulated fishery catch indices for the mskeyrun project — simCatchIndex","text":"","code":"simCatchIndex"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simCatchIndex.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The Atlantis-simulated fishery catch indices for the mskeyrun project — simCatchIndex","text":"data frame ModSim Atlantis model name simulation id year year simulated fishery conducted Code Atlantis model three letter code functional group Name Atlantis model common name functional group fishery simulated fishery name variable catch coefficient variation (cv) biomass value value variable units units variable","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simFisheryAgecomp.html","id":null,"dir":"Reference","previous_headings":"","what":"The Atlantis-simulated fishery age composition for the mskeyrun project — simFisheryAgecomp","title":"The Atlantis-simulated fishery age composition for the mskeyrun project — simFisheryAgecomp","text":"Simulated fishery age composition data Atlanits model sampled atlantisom","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simFisheryAgecomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Atlantis-simulated fishery age composition for the mskeyrun project — simFisheryAgecomp","text":"","code":"simFisheryAgecomp"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simFisheryAgecomp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The Atlantis-simulated fishery age composition for the mskeyrun project — simFisheryAgecomp","text":"data frame ModSim Atlantis model name simulation id year year simulated fishery conducted Code Atlantis model three letter code functional group Name Atlantis model common name functional group fishery simulated fishery name age annual age Atlantis functinal group variable number age (Natage) value value variable units units variable","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simFisheryLencomp.html","id":null,"dir":"Reference","previous_headings":"","what":"The Atlantis-simulated fishery length composition for the mskeyrun project — simFisheryLencomp","title":"The Atlantis-simulated fishery length composition for the mskeyrun project — simFisheryLencomp","text":"Simulated fishery length composition data Atlantis model sampled atlantisom","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simFisheryLencomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Atlantis-simulated fishery length composition for the mskeyrun project — simFisheryLencomp","text":"","code":"simFisheryLencomp"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simFisheryLencomp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The Atlantis-simulated fishery length composition for the mskeyrun project — simFisheryLencomp","text":"data frame ModSim Atlantis model name simulation id year year simulated survey conducted Code Atlantis model three letter code functional group Name Atlantis model common name functional group fishery simulated fishery name lenbin 1 cm length bin, lower limit variable number length (Natlen) value value variable units units variable","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simFisheryWtatAge.html","id":null,"dir":"Reference","previous_headings":"","what":"The Atlantis-simulated fishery age composition for the mskeyrun project — simFisheryWtatAge","title":"The Atlantis-simulated fishery age composition for the mskeyrun project — simFisheryWtatAge","text":"Simulated fishery weight age data Atlanits model sampled atlantisom","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simFisheryWtatAge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Atlantis-simulated fishery age composition for the mskeyrun project — simFisheryWtatAge","text":"","code":"simFisheryWtatAge"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simFisheryWtatAge.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The Atlantis-simulated fishery age composition for the mskeyrun project — simFisheryWtatAge","text":"data frame ModSim Atlantis model name simulation id year year simulated fishery conducted Code Atlantis model three letter code functional group Name Atlantis model common name functional group fishery simulated fishery name age annual age Atlantis functinal group variable mean weight age (Wtage) value value variable units units variable","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simFocalSpecies.html","id":null,"dir":"Reference","previous_headings":"","what":"The Atlantis-simulated focal species in mskeyrun project — simFocalSpecies","title":"The Atlantis-simulated focal species in mskeyrun project — simFocalSpecies","text":"Model name scenario, Species name, latin name, model species code","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simFocalSpecies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Atlantis-simulated focal species in mskeyrun project — simFocalSpecies","text":"","code":"simFocalSpecies"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simFocalSpecies.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The Atlantis-simulated focal species in mskeyrun project — simFocalSpecies","text":"data frame ModSim Atlantis model name simulation id Code Atlantis model three letter code functional group Name Atlantis model common name functional group SciName scientific name species","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simPerCapCons.html","id":null,"dir":"Reference","previous_headings":"","what":"The Atlantis-simulated age class specific per capita consumption for the mskeyrun project — simPerCapCons","title":"The Atlantis-simulated age class specific per capita consumption for the mskeyrun project — simPerCapCons","text":"Simulated per capita consumption data age class Atlantis model sampled atlantisom","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simPerCapCons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Atlantis-simulated age class specific per capita consumption for the mskeyrun project — simPerCapCons","text":"","code":"simPerCapCons"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simPerCapCons.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The Atlantis-simulated age class specific per capita consumption for the mskeyrun project — simPerCapCons","text":"data frame ModSim Atlantis model name simulation id year simulation year Code Atlantis model three letter code predator group Name Atlantis model common name predator group agecl age class Atlantis functional group variable total consumption (totconsagecl), total numbers (totNagecl), annual mean per capita consumption (intakeg) value value variable units units variable","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simStartPars.html","id":null,"dir":"Reference","previous_headings":"","what":"The Atlantis-simulated focal species biological parameters in mskeyrun project — simStartPars","title":"The Atlantis-simulated focal species biological parameters in mskeyrun project — simStartPars","text":"Model name scenario, Species code, species name, length weight parameters","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simStartPars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Atlantis-simulated focal species biological parameters in mskeyrun project — simStartPars","text":"","code":"simStartPars"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simStartPars.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The Atlantis-simulated focal species biological parameters in mskeyrun project — simStartPars","text":"data frame ModSim Atlantis model name simulation id Code Atlantis model three letter code functional group Name Atlantis model common name functional group agecl age class true age Atlantis functional group lenbin 1 cm length bin, lower limit variable start year number age class length (Natlen), start year number true age (Natage), average recruitment (AvgRec) value value variable units units variable","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simSurveyAgeLencomp.html","id":null,"dir":"Reference","previous_headings":"","what":"The Atlantis-simulated survey age class specific length composition for the mskeyrun project — simSurveyAgeLencomp","title":"The Atlantis-simulated survey age class specific length composition for the mskeyrun project — simSurveyAgeLencomp","text":"Simulated survey length composition data age class Atlanits model sampled atlantisom","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simSurveyAgeLencomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Atlantis-simulated survey age class specific length composition for the mskeyrun project — simSurveyAgeLencomp","text":"","code":"simSurveyAgeLencomp"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simSurveyAgeLencomp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The Atlantis-simulated survey age class specific length composition for the mskeyrun project — simSurveyAgeLencomp","text":"data frame ModSim Atlantis model name simulation id year year simulated survey conducted Code Atlantis model three letter code functional group Name Atlantis model common name functional group survey simulated survey name agecl age class Atlantis functional group lenbin 1 cm length bin, lower limit variable number length (Natlen) value value variable units units variable","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simSurveyAgecomp.html","id":null,"dir":"Reference","previous_headings":"","what":"The Atlantis-simulated survey age composition for the mskeyrun project — simSurveyAgecomp","title":"The Atlantis-simulated survey age composition for the mskeyrun project — simSurveyAgecomp","text":"Simulated survey age composition data Atlanits model sampled atlantisom","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simSurveyAgecomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Atlantis-simulated survey age composition for the mskeyrun project — simSurveyAgecomp","text":"","code":"simSurveyAgecomp"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simSurveyAgecomp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The Atlantis-simulated survey age composition for the mskeyrun project — simSurveyAgecomp","text":"data frame ModSim Atlantis model name simulation id year year simulated survey conducted Code Atlantis model three letter code functional group Name Atlantis model common name functional group survey simulated survey name age annual age Atlantis functinal group variable number age (Natage) value value variable units units variable","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simSurveyBottemp.html","id":null,"dir":"Reference","previous_headings":"","what":"The Atlantis-simulated survey bottom temperature indices for the mskeyrun project — simSurveyBottemp","title":"The Atlantis-simulated survey bottom temperature indices for the mskeyrun project — simSurveyBottemp","text":"Simulated survey bottom temperature data Atlanits model sampled atlantisom","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simSurveyBottemp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Atlantis-simulated survey bottom temperature indices for the mskeyrun project — simSurveyBottemp","text":"","code":"simSurveyBottemp"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simSurveyBottemp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The Atlantis-simulated survey bottom temperature indices for the mskeyrun project — simSurveyBottemp","text":"data frame ModSim Atlantis model name simulation id year year simulated survey conducted survey simulated survey name variable mean annual bottom temperature degrees C value value variable units units variable","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simSurveyDietcomp.html","id":null,"dir":"Reference","previous_headings":"","what":"The Atlantis-simulated survey diet composition for the mskeyrun project — simSurveyDietcomp","title":"The Atlantis-simulated survey diet composition for the mskeyrun project — simSurveyDietcomp","text":"Simulated survey diet composition data Atlantis model sampled atlantisom","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simSurveyDietcomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Atlantis-simulated survey diet composition for the mskeyrun project — simSurveyDietcomp","text":"","code":"simSurveyDietcomp"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simSurveyDietcomp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The Atlantis-simulated survey diet composition for the mskeyrun project — simSurveyDietcomp","text":"data frame ModSim Atlantis model name simulation id year year simulated survey conducted Code Atlantis model three letter code predator group Name Atlantis model common name predator group survey simulated survey name agecl age class Atlantis functional group prey Atlantis model common name prey group variable proportion diet (dietprop) value value variable units units variable","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simSurveyIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"The Atlantis-simulated survey biomass indices for the mskeyrun project — simSurveyIndex","title":"The Atlantis-simulated survey biomass indices for the mskeyrun project — simSurveyIndex","text":"Simulated survey index data Atlanits model sampled atlantisom","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simSurveyIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Atlantis-simulated survey biomass indices for the mskeyrun project — simSurveyIndex","text":"","code":"simSurveyIndex"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simSurveyIndex.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The Atlantis-simulated survey biomass indices for the mskeyrun project — simSurveyIndex","text":"data frame ModSim Atlantis model name simulation id year year simulated survey conducted Code Atlantis model three letter code functional group Name Atlantis model common name functional group survey simulated survey name variable biomass coefficient variation (cv) biomass value value variable units units variable","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simSurveyLencomp.html","id":null,"dir":"Reference","previous_headings":"","what":"The Atlantis-simulated survey length composition for the mskeyrun project — simSurveyLencomp","title":"The Atlantis-simulated survey length composition for the mskeyrun project — simSurveyLencomp","text":"Simulated survey length composition data Atlanits model sampled atlantisom","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simSurveyLencomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Atlantis-simulated survey length composition for the mskeyrun project — simSurveyLencomp","text":"","code":"simSurveyLencomp"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simSurveyLencomp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The Atlantis-simulated survey length composition for the mskeyrun project — simSurveyLencomp","text":"data frame ModSim Atlantis model name simulation id year year simulated survey conducted Code Atlantis model three letter code functional group Name Atlantis model common name functional group survey simulated survey name lenbin 1 cm length bin, lower limit variable number length (Natlen) value value variable units units variable","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simSurveyWtatAge.html","id":null,"dir":"Reference","previous_headings":"","what":"The Atlantis-simulated survey age composition for the mskeyrun project — simSurveyWtatAge","title":"The Atlantis-simulated survey age composition for the mskeyrun project — simSurveyWtatAge","text":"Simulated survey weight age data Atlanits model sampled atlantisom","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simSurveyWtatAge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Atlantis-simulated survey age composition for the mskeyrun project — simSurveyWtatAge","text":"","code":"simSurveyWtatAge"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/simSurveyWtatAge.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The Atlantis-simulated survey age composition for the mskeyrun project — simSurveyWtatAge","text":"data frame ModSim Atlantis model name simulation id year year simulated survey conducted Code Atlantis model three letter code functional group Name Atlantis model common name functional group survey simulated survey name age annual age Atlantis functinal group variable mean weight age (Wtage) value value variable units units variable","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/surveyDietcomp.html","id":null,"dir":"Reference","previous_headings":"","what":"The survey diet compositions for the focal species within the mskeyrun project — surveyDietcomp","title":"The survey diet compositions for the focal species within the mskeyrun project — surveyDietcomp","text":"Survey diet data Northeast Fisheries Science Center's Bottom Trawl Survey, 1973-2019.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/surveyDietcomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The survey diet compositions for the focal species within the mskeyrun project — surveyDietcomp","text":"","code":"surveyDietcomp"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/surveyDietcomp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The survey diet compositions for the focal species within the mskeyrun project — surveyDietcomp","text":"data frame ModSim Atlantis model name simulation id year year diet data collected Code SPECIES_ITIS code predator species Name Common name predator species season season diet data collected prey Common name prey item variable mean prey item weight year/species/season (meansw), variance meansw (variance), number tows year/species/season/prey (num_tows), cv meansw (cv), confidence interval mean prey weight diet (ci), total prey weight year/species/season (totwt), percent prey item diet year/species/season (relmsw), confidence interval percent prey diet (relci), number stomachs year/species/season (nstom) value value variable units units variable; grams meansw, variance, ci, totwt, percent relmsw, relci, numbers num_tows, nstom, unitless cv","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/surveyIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"The survey biomass indices for the focal species within the mskeyrun project — surveyIndex","title":"The survey biomass indices for the focal species within the mskeyrun project — surveyIndex","text":"Survey data comes Northeast Fisheries Science Center's Bottom Trawl Survey. Indices calculated using Survdat R package.  data set covers entire bottom trawl survey 1963 2019. calibration factors applied change Albatross IV Bigelow.  Data Bigelow era (2009 - 2019) converted separate data set (surveyIndexHB).  data covers focal species MS Keyrun Project.  expanded data set see surveyIndexAll.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/surveyIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The survey biomass indices for the focal species within the mskeyrun project — surveyIndex","text":"","code":"surveyIndex"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/surveyIndex.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The survey biomass indices for the focal species within the mskeyrun project — surveyIndex","text":"data frame","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/surveyIndexA4.html","id":null,"dir":"Reference","previous_headings":"","what":"The survey biomass indices for the focal species within the mskeyrun project\nfrom the Albatross IV era — surveyIndexA4","title":"The survey biomass indices for the focal species within the mskeyrun project\nfrom the Albatross IV era — surveyIndexA4","text":"Survey data comes Northeast Fisheries Science Center's Bottom Trawl Survey. Indices calculated using Survdat R package.  data set covers Albatross IV era bottom trawl survey 1968 2008. appropriate calibration factors applied changes gear/vessels years.  Data Bigelow era (>2008) separate data set (surveyIndexHB).  data covers focal species MS Keyrun Project.  expanded data set see surveyIndexA4All.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/surveyIndexA4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The survey biomass indices for the focal species within the mskeyrun project\nfrom the Albatross IV era — surveyIndexA4","text":"","code":"surveyIndexA4"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/surveyIndexA4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The survey biomass indices for the focal species within the mskeyrun project\nfrom the Albatross IV era — surveyIndexA4","text":"data frame","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/surveyIndexA4All.html","id":null,"dir":"Reference","previous_headings":"","what":"The survey biomass indices for all species within the mskeyrun project\nfrom the Albatross IV era — surveyIndexA4All","title":"The survey biomass indices for all species within the mskeyrun project\nfrom the Albatross IV era — surveyIndexA4All","text":"Survey data comes Northeast Fisheries Science Center's Bottom Trawl Survey. Indices calculated using Survdat R package.  data set covers Albatross IV era bottom trawl survey 1968 2008. appropriate calibration factors applied changes gear/vessels years.  Data Bigelow era (>2008) separate data set (surveyIndexHBAll).  data covers species caught survey. data set containing focal species see surveyIndexA4.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/surveyIndexA4All.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The survey biomass indices for all species within the mskeyrun project\nfrom the Albatross IV era — surveyIndexA4All","text":"","code":"surveyIndexA4All"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/surveyIndexA4All.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The survey biomass indices for all species within the mskeyrun project\nfrom the Albatross IV era — surveyIndexA4All","text":"data frame","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/surveyIndexAll.html","id":null,"dir":"Reference","previous_headings":"","what":"The survey biomass indices for all species within the mskeyrun project — surveyIndexAll","title":"The survey biomass indices for all species within the mskeyrun project — surveyIndexAll","text":"Survey data comes Northeast Fisheries Science Center's Bottom Trawl Survey. Indices calculated using Survdat R package.  data set covers entire bottom trawl survey 1968 2019. appropriate calibration factors applied changes gear/vessels years.  Data Bigelow era (>2008) converted separate data set (surveyIndexHBAll).  data covers species caught survey. data set containing focal species see surveyIndex.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/surveyIndexAll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The survey biomass indices for all species within the mskeyrun project — surveyIndexAll","text":"","code":"surveyIndexAll"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/surveyIndexAll.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The survey biomass indices for all species within the mskeyrun project — surveyIndexAll","text":"data frame","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/surveyIndexHB.html","id":null,"dir":"Reference","previous_headings":"","what":"The survey biomass indices for the focal species within the mskeyrun project\nfrom the Bigelow era — surveyIndexHB","title":"The survey biomass indices for the focal species within the mskeyrun project\nfrom the Bigelow era — surveyIndexHB","text":"Survey data comes Northeast Fisheries Science Center's Bottom Trawl Survey. Indices calculated using Survdat R package.  data set covers Bigelow era bottom trawl survey 2009 2019. calibration factors applied change Albatross IV Bigelow.  Data Albatross era (1968 - 2008) separate data set (surveyIndexA4).  data covers focal species MS Keyrun Project.  expanded data set see surveyIndexHBAll.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/surveyIndexHB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The survey biomass indices for the focal species within the mskeyrun project\nfrom the Bigelow era — surveyIndexHB","text":"","code":"surveyIndexHB"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/surveyIndexHB.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The survey biomass indices for the focal species within the mskeyrun project\nfrom the Bigelow era — surveyIndexHB","text":"data frame","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/surveyIndexHBAll.html","id":null,"dir":"Reference","previous_headings":"","what":"The survey biomass indices for all species within the mskeyrun project\nfrom the Bigelow era — surveyIndexHBAll","title":"The survey biomass indices for all species within the mskeyrun project\nfrom the Bigelow era — surveyIndexHBAll","text":"Survey data comes Northeast Fisheries Science Center's Bottom Trawl Survey. Indices calculated using Survdat R package.  data set covers Bigelow era bottom trawl survey 2009 2019. calibration factors applied change Albatross IV Bigelow.  Data Albatross era (1968 - 2008) separate data set (surveyIndexA4All).  data covers species caught survey. data set containing focal species see surveyIndexHB.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/surveyIndexHBAll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The survey biomass indices for all species within the mskeyrun project\nfrom the Bigelow era — surveyIndexHBAll","text":"","code":"surveyIndexHBAll"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/surveyIndexHBAll.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The survey biomass indices for all species within the mskeyrun project\nfrom the Bigelow era — surveyIndexHBAll","text":"data frame","code":""},{"path":[]},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/surveyLenDietcomp.html","id":null,"dir":"Reference","previous_headings":"","what":"The survey diet compositions for the focal species within the mskeyrun project — surveyLenDietcomp","title":"The survey diet compositions for the focal species within the mskeyrun project — surveyLenDietcomp","text":"Survey diet data Northeast Fisheries Science Center's Bottom Trawl Survey, 1973-2019.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/surveyLenDietcomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The survey diet compositions for the focal species within the mskeyrun project — surveyLenDietcomp","text":"","code":"surveyLenDietcomp"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/surveyLenDietcomp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The survey diet compositions for the focal species within the mskeyrun project — surveyLenDietcomp","text":"data frame ModSim Atlantis model name simulation id year year diet data collected Code SPECIES_ITIS code predator species Name Common name predator species season season diet data collected pdlen predator length bin (1 cm) prey Common name prey item variable mean prey item weight year/species/season/pdlen (meansw), variance meansw (variance), number tows year/species/season/prey/pdlen (num_tows), cv meansw (cv), confidence interval mean prey weight diet (ci), total prey weight year/species/season/pdlen (totwt), percent prey item diet year/species/season/pdlen (relmsw), confidence interval percent prey diet (relci), number stomachs year/species/season/pdlen (nstom) value value variable units units variable; grams meansw, variance, ci, totwt, percent relmsw, relci, numbers num_tows, nstom, unitless cv","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/surveyLenSampN.html","id":null,"dir":"Reference","previous_headings":"","what":"Survey sampled number of lengths for input into hydra model — surveyLenSampN","title":"Survey sampled number of lengths for input into hydra model — surveyLenSampN","text":"Number fish measured N tows year, season, species mskeyrun focal species","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/surveyLenSampN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survey sampled number of lengths for input into hydra model — surveyLenSampN","text":"","code":"surveyLenSampN"},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/surveyLenSampN.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Survey sampled number of lengths for input into hydra model — surveyLenSampN","text":"object class grouped_df (inherits tbl_df, tbl, data.frame) 1031 rows 7 columns.","code":""},{"path":"https://noaa-edab.github.io/ms-keyrun/reference/surveyLenSampN.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Survey sampled number of lengths for input into hydra model — surveyLenSampN","text":"#' @format data frame YEAR year diet data collected SEASON season diet data collected SVSPP SVSPP code species lensampsize number fish measured length ntows number tows fish measured length SPECIES_ITIS SPECIES_ITIS code species LongName Common name species","code":""}]
